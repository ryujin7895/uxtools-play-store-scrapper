{
  "version": 3,
  "sources": ["../../../app/components/comparison/ComparisonDashboard.tsx", "../../../app/components/comparison/AppComparisonForm.tsx", "../../../app/components/comparison/MetricsComparison.tsx", "../../../node_modules/@heroicons/react/24/solid/esm/XMarkIcon.js", "../../../app/components/comparison/SentimentDistributionCard.tsx", "../../../app/components/comparison/KeywordsComparison.tsx", "../../../node_modules/@kurkle/color/dist/color.esm.js", "../../../node_modules/chart.js/src/helpers/helpers.core.ts", "../../../node_modules/chart.js/src/helpers/helpers.math.ts", "../../../node_modules/chart.js/src/helpers/helpers.collection.ts", "../../../node_modules/chart.js/src/helpers/helpers.extras.ts", "../../../node_modules/chart.js/src/helpers/helpers.easing.ts", "../../../node_modules/chart.js/src/helpers/helpers.color.ts", "../../../node_modules/chart.js/src/core/core.animations.defaults.js", "../../../node_modules/chart.js/src/core/core.layouts.defaults.js", "../../../node_modules/chart.js/src/helpers/helpers.intl.ts", "../../../node_modules/chart.js/src/core/core.ticks.js", "../../../node_modules/chart.js/src/core/core.scale.defaults.js", "../../../node_modules/chart.js/src/core/core.defaults.js", "../../../node_modules/chart.js/src/helpers/helpers.canvas.ts", "../../../node_modules/chart.js/src/helpers/helpers.options.ts", "../../../node_modules/chart.js/src/helpers/helpers.config.ts", "../../../node_modules/chart.js/src/helpers/helpers.curve.ts", "../../../node_modules/chart.js/src/helpers/helpers.dom.ts", "../../../node_modules/chart.js/src/helpers/helpers.interpolation.ts", "../../../node_modules/chart.js/src/helpers/helpers.rtl.ts", "../../../node_modules/chart.js/src/helpers/helpers.segment.js", "../../../node_modules/chart.js/src/core/core.animator.js", "../../../node_modules/chart.js/src/core/core.animation.js", "../../../node_modules/chart.js/src/core/core.animations.js", "../../../node_modules/chart.js/src/core/core.datasetController.js", "../../../node_modules/chart.js/src/controllers/controller.bar.js", "../../../node_modules/chart.js/src/controllers/controller.bubble.js", "../../../node_modules/chart.js/src/controllers/controller.doughnut.js", "../../../node_modules/chart.js/src/controllers/controller.line.js", "../../../node_modules/chart.js/src/controllers/controller.polarArea.js", "../../../node_modules/chart.js/src/controllers/controller.pie.js", "../../../node_modules/chart.js/src/controllers/controller.radar.js", "../../../node_modules/chart.js/src/controllers/controller.scatter.js", "../../../node_modules/chart.js/src/core/core.adapters.ts", "../../../node_modules/chart.js/src/core/core.interaction.js", "../../../node_modules/chart.js/src/core/core.layouts.js", "../../../node_modules/chart.js/src/platform/platform.base.js", "../../../node_modules/chart.js/src/platform/platform.basic.js", "../../../node_modules/chart.js/src/platform/platform.dom.js", "../../../node_modules/chart.js/src/platform/index.js", "../../../node_modules/chart.js/src/core/core.element.ts", "../../../node_modules/chart.js/src/core/core.scale.autoskip.js", "../../../node_modules/chart.js/src/core/core.scale.js", "../../../node_modules/chart.js/src/core/core.typedRegistry.js", "../../../node_modules/chart.js/src/core/core.registry.js", "../../../node_modules/chart.js/src/core/core.plugins.js", "../../../node_modules/chart.js/src/core/core.config.js", "../../../node_modules/chart.js/src/core/core.controller.js", "../../../node_modules/chart.js/src/elements/element.arc.ts", "../../../node_modules/chart.js/src/elements/element.line.js", "../../../node_modules/chart.js/src/elements/element.point.ts", "../../../node_modules/chart.js/src/elements/element.bar.js", "../../../node_modules/chart.js/src/plugins/plugin.colors.ts", "../../../node_modules/chart.js/src/plugins/plugin.decimation.js", "../../../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js", "../../../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js", "../../../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js", "../../../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js", "../../../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js", "../../../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js", "../../../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js", "../../../node_modules/chart.js/src/plugins/plugin.filler/index.js", "../../../node_modules/chart.js/src/plugins/plugin.legend.js", "../../../node_modules/chart.js/src/plugins/plugin.title.js", "../../../node_modules/chart.js/src/plugins/plugin.subtitle.js", "../../../node_modules/chart.js/src/plugins/plugin.tooltip.js", "../../../node_modules/chart.js/src/scales/scale.category.js", "../../../node_modules/chart.js/src/scales/scale.linearbase.js", "../../../node_modules/chart.js/src/scales/scale.linear.js", "../../../node_modules/chart.js/src/scales/scale.logarithmic.js", "../../../node_modules/chart.js/src/scales/scale.radialLinear.js", "../../../node_modules/chart.js/src/scales/scale.time.js", "../../../node_modules/chart.js/src/scales/scale.timeseries.js", "../../../node_modules/chart.js/src/index.ts", "../../../node_modules/react-chartjs-2/src/utils.ts", "../../../node_modules/react-chartjs-2/src/chart.tsx", "../../../node_modules/react-chartjs-2/src/typedCharts.tsx", "../../../app/components/comparison/SentimentDistribution.tsx", "../../../app/components/comparison/TrendAnalysis.tsx", "../../../app/components/comparison/RecentComments.tsx", "../../../app/components/comparison/ExportButton.tsx", "../../../app/routes/comparison.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/comparison/ComparisonDashboard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/comparison/ComparisonDashboard.tsx\");\n  import.meta.hot.lastModified = \"1741065938749.3262\";\n}\n// REMIX HMR END\n\nimport { useState } from \"react\";\nimport { Card, Spinner, Alert } from \"flowbite-react\";\nimport { InformationCircleIcon } from \"@heroicons/react/24/outline\";\nimport AppComparisonForm from \"./AppComparisonForm\";\nimport MetricsComparison from \"./MetricsComparison\";\nimport KeywordsComparison from \"./KeywordsComparison\";\nimport SentimentDistribution from \"./SentimentDistribution\";\nimport TrendAnalysis from \"./TrendAnalysis\";\nimport RecentComments from \"./RecentComments\";\nimport ExportButton from \"./ExportButton\";\nexport default function ComparisonDashboard() {\n  _s();\n  const [apps, setApps] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [sharedKeywords, setSharedKeywords] = useState([]);\n  const handleAddApps = async (appUrls, year) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const formData = new FormData();\n      formData.append('urls', JSON.stringify(appUrls));\n      formData.append('year', year.toString());\n      const response = await fetch('/api/compare', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to fetch comparison data');\n      }\n      const data = await response.json();\n      if (!data.success) {\n        throw new Error(data.error || 'Failed to analyze apps');\n      }\n\n      // Transform the API response into the format we need\n      const appsData = Object.entries(data.results).map(([url, result]) => ({\n        id: url,\n        name: result.appInfo?.title || url.split('id=')[1]?.split('&')[0] || url,\n        icon: result.appInfo?.icon || `https://www.google.com/s2/favicons?domain=${url}&sz=64`,\n        metrics: {\n          averageRating: result.comments?.reduce((acc, c) => acc + c.score, 0) / (result.comments?.length || 1) || 0,\n          totalReviews: result.comments?.length || 0\n        },\n        sentiments: {\n          positive: result.sentiment?.positive || 0,\n          neutral: result.sentiment?.neutral || 0,\n          negative: result.sentiment?.negative || 0\n        },\n        keywords: result.keywords || [],\n        comments: result.comments || [],\n        trends: result.trends || []\n      }));\n      setApps(appsData);\n\n      // Transform shared keywords data\n      const transformedSharedKeywords = (data.comparisonResult?.sharedKeywords || data.sharedKeywords || []).map(kw => ({\n        word: kw.word,\n        counts: appsData.reduce((acc, app) => {\n          acc[app.id] = kw.counts?.[app.id] || 0;\n          return acc;\n        }, {})\n      }));\n      setSharedKeywords(transformedSharedKeywords);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to fetch app data');\n      console.error('Comparison error:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleRemoveApp = appId => {\n    setApps(prevApps => prevApps.filter(app => app.id !== appId));\n  };\n  return <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Form Card */}\n        <Card className=\"lg:col-span-2\">\n          <div className=\"flex flex-col lg:flex-row justify-between items-start lg:items-center gap-4 mb-4\">\n            <div>\n              <h2 className=\"text-2xl font-bold tracking-tight text-gray-900\">\n                Compare Apps\n              </h2>\n              <p className=\"text-base text-gray-500\">\n                Enter Play Store URLs to compare apps\n              </p>\n            </div>\n            {apps.length > 0 && <ExportButton data={{\n            apps,\n            sharedKeywords\n          }} />}\n          </div>\n          <AppComparisonForm onSubmit={handleAddApps} />\n        </Card>\n\n        {error && <Alert color=\"failure\" icon={InformationCircleIcon} className=\"lg:col-span-2\">\n            {error}\n          </Alert>}\n\n        {isLoading ? <div className=\"flex justify-center py-12 lg:col-span-2\">\n            <Spinner size=\"xl\" />\n          </div> : apps.length > 0 ? <>\n            {/* Metrics Overview */}\n            <Card className=\"lg:col-span-2\">\n              <MetricsComparison apps={apps} onRemoveApp={handleRemoveApp} />\n            </Card>\n\n            {/* Trend Analysis */}\n            <Card>\n              <TrendAnalysis apps={apps} />\n            </Card>\n\n            {/* Sentiment Distribution */}\n            <Card>\n              <SentimentDistribution apps={apps} />\n            </Card>\n\n            {/* Keywords Comparison */}\n            <Card className=\"lg:col-span-2\">\n              <KeywordsComparison apps={apps} sharedKeywords={sharedKeywords} />\n            </Card>\n\n            {/* Recent Comments */}\n            <Card className=\"lg:col-span-2\">\n              <RecentComments apps={apps} />\n            </Card>\n          </> : <Alert color=\"info\" icon={InformationCircleIcon} className=\"lg:col-span-2\">\n            Add app URLs to start comparing. You can find app URLs in their Play Store pages.\n          </Alert>}\n      </div>\n    </div>;\n}\n_s(ComparisonDashboard, \"5xJ6R41jVebqX34w2biuwaE5F5Y=\");\n_c = ComparisonDashboard;\nvar _c;\n$RefreshReg$(_c, \"ComparisonDashboard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/comparison/AppComparisonForm.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/comparison/AppComparisonForm.tsx\");\n  import.meta.hot.lastModified = \"1741063074596.4087\";\n}\n// REMIX HMR END\n\nimport { useState } from \"react\";\nimport { Button, Label, TextInput, Select } from \"flowbite-react\";\nconst isValidPlayStoreUrl = url => {\n  const pattern = /^https:\\/\\/play\\.google\\.com\\/store\\/apps\\/details\\?id=[a-zA-Z0-9_.]+(&.*)?$/;\n  return pattern.test(url.trim());\n};\nexport default function AppComparisonForm({\n  onSubmit\n}) {\n  _s();\n  const [competitorUrls, setCompetitorUrls] = useState([\"\", \"\"]);\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const handleSubmit = e => {\n    e.preventDefault();\n    const validUrls = competitorUrls.filter(url => url.trim() !== \"\");\n    if (validUrls.length > 0) {\n      onSubmit(validUrls, selectedYear);\n    }\n  };\n  return <form onSubmit={handleSubmit} className=\"space-y-4\">\n      <div className=\"grid gap-4\">\n        {competitorUrls.map((url, index) => <div key={index}>\n            <div className=\"mb-2\">\n              <Label htmlFor={`app-${index}`}>\n                {index === 0 ? \"Main App URL\" : `Competitor ${index} URL`}\n              </Label>\n            </div>\n            <TextInput id={`app-${index}`} type=\"url\" placeholder=\"https://play.google.com/store/apps/details?id=...\" value={url} onChange={e => {\n          const newUrls = [...competitorUrls];\n          newUrls[index] = e.target.value;\n          setCompetitorUrls(newUrls);\n        }} required={index === 0} />\n          </div>)}\n      </div>\n\n      <div className=\"grid grid-cols-2 gap-4\">\n        <div>\n          <div className=\"mb-2\">\n            <Label htmlFor=\"year\">Analysis Year</Label>\n          </div>\n          <Select id=\"year\" value={selectedYear} onChange={e => setSelectedYear(Number(e.target.value))}>\n            <option value={new Date().getFullYear()}>Current Year</option>\n            <option value={new Date().getFullYear() - 1}>Last Year</option>\n            <option value={new Date().getFullYear() - 2}>2 Years Ago</option>\n          </Select>\n        </div>\n        <div className=\"flex items-end\">\n          <Button type=\"submit\" color=\"blue\">\n            Compare Apps\n          </Button>\n        </div>\n      </div>\n    </form>;\n}\n_s(AppComparisonForm, \"ImWpn+IMUxQKerZpdF7zGKNnliw=\");\n_c = AppComparisonForm;\nvar _c;\n$RefreshReg$(_c, \"AppComparisonForm\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/comparison/MetricsComparison.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/comparison/MetricsComparison.tsx\");\n  import.meta.hot.lastModified = \"1741066148746.353\";\n}\n// REMIX HMR END\n\nimport { useMemo } from \"react\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell } from \"recharts\";\nimport { Card, Button } from \"flowbite-react\";\nimport { XMarkIcon } from \"@heroicons/react/24/solid\";\nimport SentimentDistributionCard from \"./SentimentDistributionCard\";\nexport default function MetricsComparison({\n  apps,\n  onRemoveApp\n}) {\n  _s();\n  const primaryApp = apps[0];\n\n  // Calculate percentage differences from the primary app\n  const percentageDiffs = useMemo(() => {\n    return apps.map(app => {\n      if (app.id === primaryApp.id) return null;\n      return {\n        averageRating: (app.metrics.averageRating - primaryApp.metrics.averageRating) / primaryApp.metrics.averageRating * 100,\n        totalReviews: (app.metrics.totalReviews - primaryApp.metrics.totalReviews) / primaryApp.metrics.totalReviews * 100,\n        sentimentPositive: (app.sentiments.positive - primaryApp.sentiments.positive) / primaryApp.sentiments.positive * 100,\n        sentimentNeutral: (app.sentiments.neutral - primaryApp.sentiments.neutral) / primaryApp.sentiments.neutral * 100,\n        sentimentNegative: (app.sentiments.negative - primaryApp.sentiments.negative) / primaryApp.sentiments.negative * 100\n      };\n    });\n  }, [apps, primaryApp]);\n\n  // Format percentage difference with + or - sign\n  const formatDiff = diff => {\n    if (diff === null || diff === undefined) return '';\n    return `${diff > 0 ? '+' : ''}${diff.toFixed(1)}%`;\n  };\n\n  // Determine color class based on diff value and metric type\n  const getDiffColorClass = (diff, isNegativeGood = false) => {\n    if (diff === null || diff === undefined) return '';\n    const isPositive = diff > 0;\n    const isGood = isNegativeGood ? !isPositive : isPositive;\n    return isGood ? 'text-green-600' : 'text-red-600';\n  };\n\n  // Prepare data for charts\n  const chartData = useMemo(() => {\n    return {\n      ratings: apps.map(app => ({\n        name: app.name,\n        rating: app.metrics.averageRating,\n        color: app.id === primaryApp.id ? '#3B82F6' : '#10B981',\n        diff: app.id === primaryApp.id ? 0 : (app.metrics.averageRating - primaryApp.metrics.averageRating) / primaryApp.metrics.averageRating * 100\n      })),\n      reviews: apps.map(app => ({\n        name: app.name,\n        reviews: app.metrics.totalReviews,\n        color: app.id === primaryApp.id ? '#3B82F6' : '#10B981',\n        diff: app.id === primaryApp.id ? 0 : (app.metrics.totalReviews - primaryApp.metrics.totalReviews) / primaryApp.metrics.totalReviews * 100\n      }))\n    };\n  }, [apps, primaryApp]);\n  const appColors = useMemo(() => {\n    const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444'];\n    return apps.reduce((acc, app, index) => {\n      acc[app.id] = colors[index % colors.length];\n      return acc;\n    }, {});\n  }, [apps]);\n  return <Card>\n      <div className=\"border-b border-gray-200 dark:border-gray-700 pb-4\">\n        <h2 className=\"text-xl font-semibold text-gray-800 dark:text-white\">\n          Metrics Comparison\n        </h2>\n        <p className=\"text-gray-600 dark:text-gray-400 text-sm\">\n          Compare key metrics between apps\n        </p>\n      </div>\n\n      {/* App Headers with Icons */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {apps.map((app, index) => <Card key={app.id} className={index === 0 ? 'bg-blue-50 dark:bg-blue-900/30' : 'bg-gray-50 dark:bg-gray-700/30'}>\n            <div className=\"flex flex-col items-center\">\n              <div className=\"relative\">\n                <img src={app.icon} alt={`${app.name} icon`} className=\"w-16 h-16 rounded-lg shadow-sm\" />\n                {index > 0 && <Button onClick={() => onRemoveApp(app.id)} className=\"absolute -top-2 -right-2 !p-1\" color=\"failure\" pill size=\"xs\">\n                    <XMarkIcon className=\"w-3 h-3\" />\n                  </Button>}\n              </div>\n              <h3 className=\"mt-3 font-medium text-center text-gray-800 dark:text-white truncate max-w-full\">\n                {app.name}\n              </h3>\n              {index === 0 && <span className=\"mt-1 inline-block px-2 py-1 text-xs bg-blue-100 dark:bg-blue-800 text-blue-800 dark:text-blue-200 rounded-full\">\n                  Your App\n                </span>}\n            </div>\n          </Card>)}\n      </div>\n\n      {/* Ratings Chart */}\n      <Card className=\"mt-6\">\n        <h3 className=\"text-lg font-medium mb-4 text-gray-800 dark:text-white\">Average Rating</h3>\n        <div className=\"h-64\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart data={chartData.ratings} margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5\n          }}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis domain={[0, 5]} />\n              <Tooltip formatter={(value, name) => {\n              if (name === 'rating') {\n                return [`${value} \u2605`, 'Rating'];\n              }\n              return [value, name];\n            }} labelFormatter={name => `App: ${name}`} />\n              <Legend />\n              <Bar dataKey=\"rating\" name=\"Rating\" radius={[4, 4, 0, 0]}>\n                {chartData.ratings.map((entry, index) => <Cell key={`cell-${index}`} fill={entry.color} />)}\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n        \n        {/* Rating Comparison Table */}\n        <div className=\"mt-4 overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 dark:bg-gray-700 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                  App\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 dark:bg-gray-700 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                  Rating\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 dark:bg-gray-700 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                  Difference\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n              {chartData.ratings.map((app, index) => <tr key={`rating-${app.name}`}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\n                    {app.name} {index === 0 && <span className=\"ml-2 text-xs text-blue-600\">(Your App)</span>}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                    {app.rating.toFixed(1)} \u2605\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                    {index === 0 ? <span className=\"text-gray-400\">-</span> : <span className={getDiffColorClass(app.diff)}>\n                        {formatDiff(app.diff)}\n                      </span>}\n                  </td>\n                </tr>)}\n            </tbody>\n          </table>\n        </div>\n      </Card>\n\n      {/* Reviews Chart */}\n      <Card className=\"mt-6\">\n        <h3 className=\"text-lg font-medium mb-4 text-gray-800 dark:text-white\">Total Reviews</h3>\n        <div className=\"h-64\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <BarChart data={chartData.reviews} margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5\n          }}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip formatter={value => [value.toLocaleString(), 'Reviews']} labelFormatter={name => `App: ${name}`} />\n              <Legend />\n              <Bar dataKey=\"reviews\" name=\"Reviews\" radius={[4, 4, 0, 0]}>\n                {chartData.reviews.map((entry, index) => <Cell key={`cell-${index}`} fill={entry.color} />)}\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n        \n        {/* Reviews Comparison Table */}\n        <div className=\"mt-4 overflow-x-auto\">\n          <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\n            <thead>\n              <tr>\n                <th className=\"px-6 py-3 bg-gray-50 dark:bg-gray-700 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                  App\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 dark:bg-gray-700 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                  Total Reviews\n                </th>\n                <th className=\"px-6 py-3 bg-gray-50 dark:bg-gray-700 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider\">\n                  Difference\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\n              {chartData.reviews.map((app, index) => <tr key={`reviews-${app.name}`}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\n                    {app.name} {index === 0 && <span className=\"ml-2 text-xs text-blue-600\">(Your App)</span>}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400\">\n                    {app.reviews.toLocaleString()}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                    {index === 0 ? <span className=\"text-gray-400\">-</span> : <span className={getDiffColorClass(app.diff)}>\n                        {formatDiff(app.diff)}\n                      </span>}\n                  </td>\n                </tr>)}\n            </tbody>\n          </table>\n        </div>\n      </Card>\n\n      {/* Sentiment Distribution */}\n      <SentimentDistributionCard apps={apps} percentageDiffs={percentageDiffs} />\n    </Card>;\n}\n_s(MetricsComparison, \"RO731RHsaxR1U2+M/byUDEXQvMU=\");\n_c = MetricsComparison;\nvar _c;\n$RefreshReg$(_c, \"MetricsComparison\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "import * as React from \"react\";\nfunction XMarkIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M5.47 5.47a.75.75 0 0 1 1.06 0L12 10.94l5.47-5.47a.75.75 0 1 1 1.06 1.06L13.06 12l5.47 5.47a.75.75 0 1 1-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 0 1-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 0 1 0-1.06Z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(XMarkIcon);\nexport default ForwardRef;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/comparison/SentimentDistributionCard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/comparison/SentimentDistributionCard.tsx\");\n  import.meta.hot.lastModified = \"1741063192607.5312\";\n}\n// REMIX HMR END\n\nimport { Card, Progress } from \"flowbite-react\";\nconst formatDiff = diff => {\n  if (diff === null || diff === undefined) return '';\n  return `${diff > 0 ? '+' : ''}${diff.toFixed(1)}%`;\n};\nconst getDiffColorClass = (diff, isNegativeGood = false) => {\n  if (diff === null || diff === undefined) return '';\n  const isPositive = diff > 0;\n  const isGood = isNegativeGood ? !isPositive : isPositive;\n  return isGood ? 'text-green-600 dark:text-green-400' : 'text-red-600 dark:text-red-400';\n};\nexport default function SentimentDistributionCard({\n  apps,\n  percentageDiffs\n}) {\n  return <Card className=\"mt-6\">\n      <h3 className=\"text-lg font-medium mb-4 text-gray-800 dark:text-white\">Sentiment Distribution</h3>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {apps.map((app, index) => <Card key={`sentiment-${app.id}`} className=\"bg-gray-50 dark:bg-gray-700\">\n            <div className=\"flex justify-between items-center mb-3\">\n              <h4 className=\"font-medium text-gray-800 dark:text-white\">\n                {app.name}\n              </h4>\n              {index === 0 && <span className=\"inline-block px-2 py-1 text-xs bg-blue-100 dark:bg-blue-800 text-blue-800 dark:text-blue-200 rounded-full\">\n                  Your App\n                </span>}\n            </div>\n            \n            {/* Sentiment Bars */}\n            <div className=\"space-y-3\">\n              <div>\n                <div className=\"flex justify-between text-sm mb-1\">\n                  <span className=\"text-gray-700 dark:text-gray-300\">Positive</span>\n                  <div className=\"flex items-center\">\n                    <span className=\"text-gray-700 dark:text-gray-300\">{app.metrics.sentimentDistribution.positive}%</span>\n                    {index > 0 && <span className={`ml-1 text-xs ${getDiffColorClass(percentageDiffs[index]?.sentimentPositive)}`}>\n                        ({formatDiff(percentageDiffs[index]?.sentimentPositive)})\n                      </span>}\n                  </div>\n                </div>\n                <Progress progress={app.metrics.sentimentDistribution.positive} color=\"success\" size=\"sm\" />\n              </div>\n              <div>\n                <div className=\"flex justify-between text-sm mb-1\">\n                  <span className=\"text-gray-700 dark:text-gray-300\">Neutral</span>\n                  <div className=\"flex items-center\">\n                    <span className=\"text-gray-700 dark:text-gray-300\">{app.metrics.sentimentDistribution.neutral}%</span>\n                    {index > 0 && <span className={`ml-1 text-xs ${getDiffColorClass(percentageDiffs[index]?.sentimentNeutral)}`}>\n                        ({formatDiff(percentageDiffs[index]?.sentimentNeutral)})\n                      </span>}\n                  </div>\n                </div>\n                <Progress progress={app.metrics.sentimentDistribution.neutral} color=\"warning\" size=\"sm\" />\n              </div>\n              <div>\n                <div className=\"flex justify-between text-sm mb-1\">\n                  <span className=\"text-gray-700 dark:text-gray-300\">Negative</span>\n                  <div className=\"flex items-center\">\n                    <span className=\"text-gray-700 dark:text-gray-300\">{app.metrics.sentimentDistribution.negative}%</span>\n                    {index > 0 && <span className={`ml-1 text-xs ${getDiffColorClass(percentageDiffs[index]?.sentimentNegative, true)}`}>\n                        ({formatDiff(percentageDiffs[index]?.sentimentNegative)})\n                      </span>}\n                  </div>\n                </div>\n                <Progress progress={app.metrics.sentimentDistribution.negative} color=\"failure\" size=\"sm\" />\n              </div>\n            </div>\n          </Card>)}\n      </div>\n    </Card>;\n}\n_c = SentimentDistributionCard;\nvar _c;\n$RefreshReg$(_c, \"SentimentDistributionCard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/comparison/KeywordsComparison.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/comparison/KeywordsComparison.tsx\");\n  import.meta.hot.lastModified = \"1741066216760.6555\";\n}\n// REMIX HMR END\n\nimport { Card, Badge } from \"flowbite-react\";\nimport { useMemo } from \"react\";\nexport default function KeywordsComparison({\n  apps\n}) {\n  _s();\n  // Find shared keywords between apps\n  const sharedKeywords = useMemo(() => {\n    const keywordMap = new Map();\n    apps.forEach(app => {\n      app.keywords.forEach(({\n        word,\n        count\n      }) => {\n        if (!keywordMap.has(word)) {\n          keywordMap.set(word, {\n            word,\n            counts: {}\n          });\n        }\n        keywordMap.get(word).counts[app.id] = count;\n      });\n    });\n\n    // Filter keywords that appear in at least 2 apps and sort by total count\n    return Array.from(keywordMap.values()).filter(keyword => Object.keys(keyword.counts).length >= 2).sort((a, b) => {\n      const totalA = Object.values(a.counts).reduce((sum, count) => sum + count, 0);\n      const totalB = Object.values(b.counts).reduce((sum, count) => sum + count, 0);\n      return totalB - totalA;\n    });\n  }, [apps]);\n  if (!apps?.length || !sharedKeywords.length) {\n    return null;\n  }\n  return <Card>\n      <div>\n        <h3 className=\"text-lg font-medium mb-1 text-gray-900\">\n          Top Keywords\n        </h3>\n        <p className=\"text-sm text-gray-500 mb-6\">\n          Common keywords across all apps\n        </p>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {sharedKeywords.map(keyword => <Card key={keyword.word} className=\"bg-gray-50\">\n              <div>\n                <Badge color=\"info\" size=\"lg\" className=\"mb-4\">\n                  {keyword.word}\n                </Badge>\n                <div className=\"space-y-3\">\n                  {apps.map(app => keyword.counts[app.id] ? <div key={app.id} className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center gap-2\">\n                          <img src={app.icon} alt={`${app.name} icon`} className=\"w-6 h-6 rounded\" />\n                          <span className=\"text-sm text-gray-600 truncate max-w-[200px]\">\n                            {app.name}\n                          </span>\n                        </div>\n                        <span className=\"text-sm font-medium text-gray-900\">\n                          {keyword.counts[app.id].toLocaleString()}\n                        </span>\n                      </div> : null)}\n                </div>\n              </div>\n            </Card>)}\n        </div>\n      </div>\n    </Card>;\n}\n_s(KeywordsComparison, \"vLnr+Vo18apDa8lSvPAxixx7N+s=\");\n_c = KeywordsComparison;\nvar _c;\n$RefreshReg$(_c, \"KeywordsComparison\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n", "/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n", "import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */\nfunction isNonPrimitive(n: unknown) {\n  return typeof n === 'symbol' || (typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n));\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNonPrimitive(n) && !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n", "import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n", "import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\nimport {isNullOrUndef} from './helpers.core.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, vScale, _parsed} = meta;\n    const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n      if (spanGaps) {\n        const distanceToDefinedLo = (_parsed\n          .slice(0, start + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        start -= Math.max(0, distanceToDefinedLo);\n      }\n      start = _limitValue(start, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      let end = Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n      if (spanGaps) {\n        const distanceToDefinedHi = (_parsed\n          .slice(end - 1)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        end += Math.max(0, distanceToDefinedHi);\n      }\n      count = _limitValue(end, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n", "import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n", "import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n", "const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n", "export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n", "\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n", "import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n", "import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n", "import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n", "import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n", "import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n", "/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n", "import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n", "import type {ChartArea, Scale} from '../types/index.js';\nimport type PrivateChart from '../core/core.controller.js';\nimport type {Chart, ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart | PrivateChart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart | PrivateChart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  (chart as PrivateChart).height = Math.floor(chart.height);\n  (chart as PrivateChart).width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    (chart as PrivateChart).currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n", "import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n", "export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n", "import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n", "import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n", "import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n", "import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n", "import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n", "import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n", "import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n", "/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<TimeUnit | 'datetime', string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: string): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: string): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number | boolean): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options?: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<TimeUnit | 'datetime', string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase as {\n    new (options?: AnyObject): DateAdapter;\n    override<T extends AnyObject = AnyObject>(\n      members: Partial<Omit<DateAdapter<T>, 'options'>>\n    ): void;\n  }\n};\n", "import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea, isNullOrUndef} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      const result = lookupMethod(data, axis, value);\n      if (spanGaps) {\n        const {vScale} = controller._cachedMeta;\n        const {_parsed} = metaset;\n\n        const distanceToDefinedLo = (_parsed\n          .slice(0, result.lo + 1)\n          .reverse()\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.lo -= Math.max(0, distanceToDefinedLo);\n\n        const distanceToDefinedHi = (_parsed\n          .slice(result.hi)\n          .findIndex(\n            point => !isNullOrUndef(point[vScale.axis])));\n        result.hi += Math.max(0, distanceToDefinedHi);\n      }\n      return result;\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n", "import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n", "\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n", "/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n", "/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n", "import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n", "import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n", "import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n", "import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n", "import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n", "import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n", "import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n", "import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n", "import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n", "import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n", "import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n", "import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n", "import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n", "import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n", "/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n", "import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n", "/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n", "import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n", "import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n", "import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n", "/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n", "import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n", "import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n", "import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n", "import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n", "import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n", "import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n", "import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n", "import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n", "import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n", "import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n", "export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n", "import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n", "import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown,\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS<TType, TData, TLabel> | null>(null);\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n", "import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/comparison/SentimentDistribution.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/comparison/SentimentDistribution.tsx\");\n  import.meta.hot.lastModified = \"1741065891739.5198\";\n}\n// REMIX HMR END\n\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst chartColors = [{\n  bar: 'rgb(37, 99, 235)',\n  hover: 'rgb(29, 78, 216)'\n},\n// Blue\n{\n  bar: 'rgb(234, 88, 12)',\n  hover: 'rgb(194, 65, 12)'\n},\n// Orange\n{\n  bar: 'rgb(22, 163, 74)',\n  hover: 'rgb(21, 128, 61)'\n},\n// Green\n{\n  bar: 'rgb(217, 70, 239)',\n  hover: 'rgb(192, 38, 211)'\n} // Purple\n];\nexport default function SentimentDistribution({\n  apps\n}) {\n  const chartData = {\n    labels: ['Positive', 'Neutral', 'Negative'],\n    datasets: apps.map((app, index) => ({\n      label: app.name,\n      data: [app.sentiments.positive, app.sentiments.neutral, app.sentiments.negative],\n      backgroundColor: chartColors[index].bar,\n      hoverBackgroundColor: chartColors[index].hover,\n      borderRadius: 4,\n      borderSkipped: false,\n      barPercentage: 0.7,\n      categoryPercentage: 0.8\n    }))\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          padding: 20,\n          usePointStyle: true,\n          pointStyle: 'circle'\n        }\n      },\n      title: {\n        display: false\n      },\n      tooltip: {\n        backgroundColor: 'white',\n        titleColor: '#111827',\n        bodyColor: '#111827',\n        borderColor: '#e5e7eb',\n        borderWidth: 1,\n        padding: 12,\n        boxPadding: 6,\n        usePointStyle: true,\n        callbacks: {\n          label: context => ` ${context.dataset.label}: ${context.parsed.y.toLocaleString()}`\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        },\n        ticks: {\n          padding: 10\n        }\n      },\n      y: {\n        beginAtZero: true,\n        border: {\n          display: false\n        },\n        grid: {\n          color: '#e5e7eb'\n        },\n        ticks: {\n          padding: 10,\n          callback: function (value) {\n            return value.toLocaleString();\n          }\n        }\n      }\n    }\n  };\n  return <div>\n      <h3 className=\"text-lg font-medium mb-1 text-gray-900\">\n        Sentiment Distribution\n      </h3>\n      <p className=\"text-sm text-gray-500 mb-6\">\n        Compare sentiment distribution across apps\n      </p>\n\n      <div className=\"h-[400px]\">\n        <Bar data={chartData} options={options} />\n      </div>\n    </div>;\n}\n_c = SentimentDistribution;\nvar _c;\n$RefreshReg$(_c, \"SentimentDistribution\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/comparison/TrendAnalysis.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/comparison/TrendAnalysis.tsx\");\n  import.meta.hot.lastModified = \"1741065856741.3208\";\n}\n// REMIX HMR END\n\nimport { Card } from \"flowbite-react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst chartColors = [{\n  line: 'rgb(37, 99, 235)',\n  fill: 'rgba(37, 99, 235, 0.1)'\n},\n// Blue\n{\n  line: 'rgb(234, 88, 12)',\n  fill: 'rgba(234, 88, 12, 0.1)'\n},\n// Orange\n{\n  line: 'rgb(22, 163, 74)',\n  fill: 'rgba(22, 163, 74, 0.1)'\n},\n// Green\n{\n  line: 'rgb(217, 70, 239)',\n  fill: 'rgba(217, 70, 239, 0.1)'\n} // Purple\n];\nexport default function TrendAnalysis({\n  apps\n}) {\n  const chartData = {\n    labels: apps[0]?.trends.map(trend => new Date(trend.date).toLocaleDateString()) || [],\n    datasets: apps.map((app, index) => ({\n      label: app.name,\n      data: app.trends.map(trend => trend.total),\n      borderColor: chartColors[index].line,\n      backgroundColor: chartColors[index].fill,\n      tension: 0.4,\n      fill: true,\n      pointRadius: 4,\n      pointHoverRadius: 6,\n      pointBackgroundColor: chartColors[index].line,\n      pointBorderColor: 'white',\n      pointBorderWidth: 2,\n      borderWidth: 2\n    }))\n  };\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n        labels: {\n          padding: 20,\n          usePointStyle: true,\n          pointStyle: 'circle'\n        }\n      },\n      title: {\n        display: false\n      },\n      tooltip: {\n        backgroundColor: 'white',\n        titleColor: '#111827',\n        bodyColor: '#111827',\n        borderColor: '#e5e7eb',\n        borderWidth: 1,\n        padding: 12,\n        boxPadding: 6,\n        usePointStyle: true,\n        callbacks: {\n          label: context => ` ${context.dataset.label}: ${context.parsed.y.toLocaleString()}`\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        },\n        ticks: {\n          padding: 10\n        }\n      },\n      y: {\n        beginAtZero: true,\n        border: {\n          display: false\n        },\n        grid: {\n          color: '#e5e7eb'\n        },\n        ticks: {\n          padding: 10,\n          callback: function (value) {\n            return value.toLocaleString();\n          }\n        }\n      }\n    }\n  };\n  return <Card className=\"mt-6\">\n      <div>\n        <h3 className=\"text-lg font-medium mb-1 text-gray-800 dark:text-white\">\n          Trend Analysis\n        </h3>\n        <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n          Review volume trends over time\n        </p>\n\n        <div className=\"h-[400px]\">\n          <Line data={chartData} options={options} />\n        </div>\n      </div>\n    </Card>;\n}\n_c = TrendAnalysis;\nvar _c;\n$RefreshReg$(_c, \"TrendAnalysis\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/comparison/RecentComments.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/comparison/RecentComments.tsx\");\n  import.meta.hot.lastModified = \"1741066262742.8042\";\n}\n// REMIX HMR END\n\nimport { Card, Badge } from \"flowbite-react\";\nimport { useMemo } from \"react\";\nexport default function RecentComments({\n  apps\n}) {\n  _s();\n  // Combine and sort comments from all apps\n  const sortedComments = useMemo(() => {\n    return apps.flatMap(app => app.comments.map(comment => ({\n      ...comment,\n      appName: app.name,\n      appIcon: app.icon\n    }))).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()).slice(0, 10); // Show only the 10 most recent comments\n  }, [apps]);\n  if (!apps?.length || !sortedComments.length) {\n    return null;\n  }\n  const getSentimentColor = sentiment => {\n    switch (sentiment) {\n      case 'positive':\n        return 'success';\n      case 'negative':\n        return 'failure';\n      default:\n        return 'gray';\n    }\n  };\n  return <Card>\n      <div>\n        <h3 className=\"text-lg font-medium mb-1 text-gray-900\">\n          Recent Comments\n        </h3>\n        <p className=\"text-sm text-gray-500 mb-6\">\n          Latest comments from all apps\n        </p>\n\n        <div className=\"space-y-4\">\n          {sortedComments.map(comment => <Card key={comment.id} className=\"bg-gray-50\">\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2\">\n                    <img src={comment.appIcon} alt={`${comment.appName} icon`} className=\"w-6 h-6 rounded\" />\n                    <span className=\"text-sm font-medium text-gray-900\">\n                      {comment.appName}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-3\">\n                    <Badge color={getSentimentColor(comment.sentiment)}>\n                      {comment.sentiment}\n                    </Badge>\n                    <span className=\"text-sm text-gray-500\">\n                      {new Date(comment.date).toLocaleDateString()}\n                    </span>\n                  </div>\n                </div>\n\n                <div>\n                  <p className=\"text-sm text-gray-600\">\n                    {comment.content}\n                  </p>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-gray-500\">\n                    {comment.userName}\n                  </span>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-sm font-medium text-gray-900\">\n                      {comment.score.toFixed(1)}\n                    </span>\n                    <span className=\"text-sm text-gray-500\">\u2605</span>\n                  </div>\n                </div>\n              </div>\n            </Card>)}\n        </div>\n      </div>\n    </Card>;\n}\n_s(RecentComments, \"63VRagKOQM9lDYWGKmoRksHuKd0=\");\n_c = RecentComments;\nvar _c;\n$RefreshReg$(_c, \"RecentComments\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/comparison/ExportButton.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/comparison/ExportButton.tsx\");\n  import.meta.hot.lastModified = \"1741066289742.8738\";\n}\n// REMIX HMR END\n\nimport { Button } from \"flowbite-react\";\nexport default function ExportButton({\n  apps\n}) {\n  const handleExport = () => {\n    const exportData = apps.map(app => ({\n      name: app.name,\n      metrics: {\n        averageRating: app.metrics.averageRating,\n        totalReviews: app.metrics.totalReviews\n      },\n      sentiments: {\n        positive: app.sentiments.positive,\n        neutral: app.sentiments.neutral,\n        negative: app.sentiments.negative\n      },\n      keywords: app.keywords,\n      comments: app.comments,\n      trends: app.trends\n    }));\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n      type: \"application/json\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"app-comparison-data.json\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  return <Button onClick={handleExport} color=\"gray\">\n      Export Data\n    </Button>;\n}\n_c = ExportButton;\nvar _c;\n$RefreshReg$(_c, \"ExportButton\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/comparison.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/comparison.tsx\");\n  import.meta.hot.lastModified = \"1741065371738.8289\";\n}\n// REMIX HMR END\n\nimport Sidebar from \"~/components/common/Sidebar\";\nimport ComparisonDashboard from \"~/components/comparison/ComparisonDashboard\";\nexport const meta = () => {\n  return [{\n    title: \"App Comparison - Play Store Comment Analyzer\"\n  }, {\n    name: \"description\",\n    content: \"Compare your app with competitors\"\n  }];\n};\nexport default function Comparison() {\n  return <div className=\"flex min-h-screen bg-gray-50\">\n      <Sidebar />\n      <main className=\"ml-64 flex-1 min-h-screen bg-gray-50\">\n        <div className=\"container mx-auto px-6 py-8\">\n          <div className=\"flex justify-between items-center mb-8\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">\n                App Comparison\n              </h1>\n              <p className=\"text-gray-600\">\n                Compare your app with competitors\n              </p>\n            </div>\n          </div>\n          <ComparisonDashboard />\n        </div>\n      </main>\n    </div>;\n}\n_c = Comparison;\nvar _c;\n$RefreshReg$(_c, \"Comparison\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAAA,gBAAyB;;;ACAzB,mBAAyB;AAuBX;AA3Cd,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sDAAwD,EAAE;AAAA,EACnG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAiD;AACjD,cAAY,IAAI,eAAe;AACjC;AASe,SAAR,kBAAmC;AAAA,EACxC;AACF,GAAG;AACD,KAAG;AACH,QAAM,CAAC,gBAAgB,iBAAiB,QAAI,uBAAS,CAAC,IAAI,EAAE,CAAC;AAC7D,QAAM,CAAC,cAAc,eAAe,QAAI,wBAAS,oBAAI,KAAK,GAAE,YAAY,CAAC;AACzE,QAAM,eAAe,OAAK;AACxB,MAAE,eAAe;AACjB,UAAM,YAAY,eAAe,OAAO,SAAO,IAAI,KAAK,MAAM,EAAE;AAChE,QAAI,UAAU,SAAS,GAAG;AACxB,eAAS,WAAW,YAAY;AAAA,IAClC;AAAA,EACF;AACA,SAAO,mDAAC,UAAK,UAAU,cAAc,WAAU,aAC3C;AAAA,uDAAC,SAAI,WAAU,cACZ,yBAAe,IAAI,CAAC,KAAKC,WAAU,mDAAC,SACjC;AAAA,yDAAC,SAAI,WAAU,QACb,6DAAC,SAAM,SAAS,OAAOA,UACpB,UAAAA,WAAU,IAAI,iBAAiB,cAAcA,gBADhD;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC,aAAU,IAAI,OAAOA,UAAS,MAAK,OAAM,aAAY,qDAAoD,OAAO,KAAK,UAAU,OAAK;AACvI,cAAM,UAAU,CAAC,GAAG,cAAc;AAClC,gBAAQA,MAAK,IAAI,EAAE,OAAO;AAC1B,0BAAkB,OAAO;AAAA,MAC3B,GAAG,UAAUA,WAAU,KAJnB;AAAA;AAAA;AAAA;AAAA,aAIsB;AAAA,SAVoBA,QAAV;AAAA;AAAA;AAAA;AAAA,WAWlC,CAAM,KAZV;AAAA;AAAA;AAAA;AAAA,WAaA;AAAA,IAEA,mDAAC,SAAI,WAAU,0BACb;AAAA,yDAAC,SACC;AAAA,2DAAC,SAAI,WAAU,QACb,6DAAC,SAAM,SAAQ,QAAO,6BAAtB;AAAA;AAAA;AAAA;AAAA,eAAmC,KADrC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,UAAO,IAAG,QAAO,OAAO,cAAc,UAAU,OAAK,gBAAgB,OAAO,EAAE,OAAO,KAAK,CAAC,GAC1F;AAAA,6DAAC,YAAO,QAAO,oBAAI,KAAK,GAAE,YAAY,GAAG,4BAAzC;AAAA;AAAA;AAAA;AAAA,iBAAqD;AAAA,UACrD,mDAAC,YAAO,QAAO,oBAAI,KAAK,GAAE,YAAY,IAAI,GAAG,yBAA7C;AAAA;AAAA;AAAA;AAAA,iBAAsD;AAAA,UACtD,mDAAC,YAAO,QAAO,oBAAI,KAAK,GAAE,YAAY,IAAI,GAAG,2BAA7C;AAAA;AAAA;AAAA;AAAA,iBAAwD;AAAA,aAH1D;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,WARF;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,MACA,mDAAC,SAAI,WAAU,kBACb,6DAAC,UAAO,MAAK,UAAS,OAAM,QAAO,4BAAnC;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,SAfF;AAAA;AAAA;AAAA;AAAA,WAgBA;AAAA,OAhCG;AAAA;AAAA;AAAA;AAAA,SAiCL;AACJ;AACA,GAAG,mBAAmB,8BAA8B;AACpD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,mBAAmB;AAEpC,OAAO,eAAe;AACtB,OAAO,eAAe;;;AC5DtB,IAAAC,gBAAwB;;;ACrBxB,YAAuB;AACvB,SAAS,UAAU;AAAA,EACjB;AAAA,EACA;AAAA,EACA,GAAG;AACL,GAAG,QAAQ;AACT,SAAoB,gBAAM,oBAAc,OAAO,OAAO,OAAO;AAAA,IAC3D,OAAO;AAAA,IACP,SAAS;AAAA,IACT,MAAM;AAAA,IACN,eAAe;AAAA,IACf,aAAa;AAAA,IACb,KAAK;AAAA,IACL,mBAAmB;AAAA,EACrB,GAAG,KAAK,GAAG,QAAqB,gBAAM,oBAAc,SAAS;AAAA,IAC3D,IAAI;AAAA,EACN,GAAG,KAAK,IAAI,MAAmB,gBAAM,oBAAc,QAAQ;AAAA,IACzD,UAAU;AAAA,IACV,GAAG;AAAA,IACH,UAAU;AAAA,EACZ,CAAC,CAAC;AACJ;AACA,IAAM,aAA2B,gBAAM,iBAAW,SAAS;AAC3D,IAAO,oBAAQ;;;ACaT,IAAAC,0BAAA;AAnCN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8DAAgE,EAAE;AAAA,EAC3G;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyD;AACzD,cAAY,IAAI,eAAe;AACjC;AAIA,IAAM,aAAa,UAAQ;AACzB,MAAI,SAAS,QAAQ,SAAS;AAAW,WAAO;AAChD,SAAO,GAAG,OAAO,IAAI,MAAM,KAAK,KAAK,QAAQ,CAAC;AAChD;AACA,IAAM,oBAAoB,CAAC,MAAM,iBAAiB,UAAU;AAC1D,MAAI,SAAS,QAAQ,SAAS;AAAW,WAAO;AAChD,QAAM,aAAa,OAAO;AAC1B,QAAM,SAAS,iBAAiB,CAAC,aAAa;AAC9C,SAAO,SAAS,uCAAuC;AACzD;AACe,SAAR,0BAA2C;AAAA,EAChD;AAAA,EACA;AACF,GAAG;AACD,SAAO,oDAAC,QAAK,WAAU,QACnB;AAAA,wDAAC,QAAG,WAAU,0DAAyD,sCAAvE;AAAA;AAAA;AAAA;AAAA,WAA6F;AAAA,IAC7F,oDAAC,SAAI,WAAU,wDACZ,eAAK,IAAI,CAAC,KAAKC,WAAU,oDAAC,QAAiC,WAAU,+BAClE;AAAA,0DAAC,SAAI,WAAU,0CACb;AAAA,4DAAC,QAAG,WAAU,6CACX,cAAI,QADP;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACCA,WAAU,KAAK,oDAAC,UAAK,WAAU,6GAA4G,wBAA5H;AAAA;AAAA;AAAA;AAAA,eAEd;AAAA,WANJ;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,MAGA,oDAAC,SAAI,WAAU,aACb;AAAA,4DAAC,SACC;AAAA,8DAAC,SAAI,WAAU,qCACb;AAAA,gEAAC,UAAK,WAAU,oCAAmC,wBAAnD;AAAA;AAAA;AAAA;AAAA,mBAA2D;AAAA,YAC3D,oDAAC,SAAI,WAAU,qBACb;AAAA,kEAAC,UAAK,WAAU,oCAAoC;AAAA,oBAAI,QAAQ,sBAAsB;AAAA,gBAAS;AAAA,mBAA/F;AAAA;AAAA;AAAA;AAAA,qBAAgG;AAAA,cAC/FA,SAAQ,KAAK,oDAAC,UAAK,WAAW,gBAAgB,kBAAkB,gBAAgBA,MAAK,GAAG,iBAAiB,KAAK;AAAA;AAAA,gBACzG,WAAW,gBAAgBA,MAAK,GAAG,iBAAiB;AAAA,gBAAE;AAAA,mBAD9C;AAAA;AAAA;AAAA;AAAA,qBAEZ;AAAA,iBAJJ;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,eAPF;AAAA;AAAA;AAAA;AAAA,iBAQA;AAAA,UACA,oDAAC,YAAS,UAAU,IAAI,QAAQ,sBAAsB,UAAU,OAAM,WAAU,MAAK,QAArF;AAAA;AAAA;AAAA;AAAA,iBAA0F;AAAA,aAV5F;AAAA;AAAA;AAAA;AAAA,eAWA;AAAA,QACA,oDAAC,SACC;AAAA,8DAAC,SAAI,WAAU,qCACb;AAAA,gEAAC,UAAK,WAAU,oCAAmC,uBAAnD;AAAA;AAAA;AAAA;AAAA,mBAA0D;AAAA,YAC1D,oDAAC,SAAI,WAAU,qBACb;AAAA,kEAAC,UAAK,WAAU,oCAAoC;AAAA,oBAAI,QAAQ,sBAAsB;AAAA,gBAAQ;AAAA,mBAA9F;AAAA;AAAA;AAAA;AAAA,qBAA+F;AAAA,cAC9FA,SAAQ,KAAK,oDAAC,UAAK,WAAW,gBAAgB,kBAAkB,gBAAgBA,MAAK,GAAG,gBAAgB,KAAK;AAAA;AAAA,gBACxG,WAAW,gBAAgBA,MAAK,GAAG,gBAAgB;AAAA,gBAAE;AAAA,mBAD7C;AAAA;AAAA;AAAA;AAAA,qBAEZ;AAAA,iBAJJ;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,eAPF;AAAA;AAAA;AAAA;AAAA,iBAQA;AAAA,UACA,oDAAC,YAAS,UAAU,IAAI,QAAQ,sBAAsB,SAAS,OAAM,WAAU,MAAK,QAApF;AAAA;AAAA;AAAA;AAAA,iBAAyF;AAAA,aAV3F;AAAA;AAAA;AAAA;AAAA,eAWA;AAAA,QACA,oDAAC,SACC;AAAA,8DAAC,SAAI,WAAU,qCACb;AAAA,gEAAC,UAAK,WAAU,oCAAmC,wBAAnD;AAAA;AAAA;AAAA;AAAA,mBAA2D;AAAA,YAC3D,oDAAC,SAAI,WAAU,qBACb;AAAA,kEAAC,UAAK,WAAU,oCAAoC;AAAA,oBAAI,QAAQ,sBAAsB;AAAA,gBAAS;AAAA,mBAA/F;AAAA;AAAA;AAAA;AAAA,qBAAgG;AAAA,cAC/FA,SAAQ,KAAK,oDAAC,UAAK,WAAW,gBAAgB,kBAAkB,gBAAgBA,MAAK,GAAG,mBAAmB,IAAI,KAAK;AAAA;AAAA,gBAC/G,WAAW,gBAAgBA,MAAK,GAAG,iBAAiB;AAAA,gBAAE;AAAA,mBAD9C;AAAA;AAAA;AAAA;AAAA,qBAEZ;AAAA,iBAJJ;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA,eAPF;AAAA;AAAA;AAAA;AAAA,iBAQA;AAAA,UACA,oDAAC,YAAS,UAAU,IAAI,QAAQ,sBAAsB,UAAU,OAAM,WAAU,MAAK,QAArF;AAAA;AAAA;AAAA;AAAA,iBAA0F;AAAA,aAV5F;AAAA;AAAA;AAAA;AAAA,eAWA;AAAA,WApCF;AAAA;AAAA;AAAA;AAAA,aAqCA;AAAA,SAhDiC,aAAa,IAAI,MAA5B;AAAA;AAAA;AAAA;AAAA,WAiDxB,CAAO,KAlDX;AAAA;AAAA;AAAA;AAAA,WAmDA;AAAA,OArDG;AAAA;AAAA;AAAA;AAAA,SAsDL;AACJ;AACAC,MAAK;AACL,IAAIA;AACJ,aAAaA,KAAI,2BAA2B;AAE5C,OAAO,eAAe;AACtB,OAAO,eAAe;;;AFTd,IAAAC,0BAAA;AAtFR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sDAAwD,EAAE;AAAA,EACnG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAIC,MAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAiD;AACjD,cAAY,IAAI,eAAe;AACjC;AAQe,SAAR,kBAAmC;AAAA,EACxC;AAAA,EACA;AACF,GAAG;AACD,EAAAA,IAAG;AACH,QAAM,aAAa,KAAK,CAAC;AAGzB,QAAM,sBAAkB,uBAAQ,MAAM;AACpC,WAAO,KAAK,IAAI,SAAO;AACrB,UAAI,IAAI,OAAO,WAAW;AAAI,eAAO;AACrC,aAAO;AAAA,QACL,gBAAgB,IAAI,QAAQ,gBAAgB,WAAW,QAAQ,iBAAiB,WAAW,QAAQ,gBAAgB;AAAA,QACnH,eAAe,IAAI,QAAQ,eAAe,WAAW,QAAQ,gBAAgB,WAAW,QAAQ,eAAe;AAAA,QAC/G,oBAAoB,IAAI,WAAW,WAAW,WAAW,WAAW,YAAY,WAAW,WAAW,WAAW;AAAA,QACjH,mBAAmB,IAAI,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU;AAAA,QAC7G,oBAAoB,IAAI,WAAW,WAAW,WAAW,WAAW,YAAY,WAAW,WAAW,WAAW;AAAA,MACnH;AAAA,IACF,CAAC;AAAA,EACH,GAAG,CAAC,MAAM,UAAU,CAAC;AAGrB,QAAMC,cAAa,UAAQ;AACzB,QAAI,SAAS,QAAQ,SAAS;AAAW,aAAO;AAChD,WAAO,GAAG,OAAO,IAAI,MAAM,KAAK,KAAK,QAAQ,CAAC;AAAA,EAChD;AAGA,QAAMC,qBAAoB,CAAC,MAAM,iBAAiB,UAAU;AAC1D,QAAI,SAAS,QAAQ,SAAS;AAAW,aAAO;AAChD,UAAM,aAAa,OAAO;AAC1B,UAAM,SAAS,iBAAiB,CAAC,aAAa;AAC9C,WAAO,SAAS,mBAAmB;AAAA,EACrC;AAGA,QAAM,gBAAY,uBAAQ,MAAM;AAC9B,WAAO;AAAA,MACL,SAAS,KAAK,IAAI,UAAQ;AAAA,QACxB,MAAM,IAAI;AAAA,QACV,QAAQ,IAAI,QAAQ;AAAA,QACpB,OAAO,IAAI,OAAO,WAAW,KAAK,YAAY;AAAA,QAC9C,MAAM,IAAI,OAAO,WAAW,KAAK,KAAK,IAAI,QAAQ,gBAAgB,WAAW,QAAQ,iBAAiB,WAAW,QAAQ,gBAAgB;AAAA,MAC3I,EAAE;AAAA,MACF,SAAS,KAAK,IAAI,UAAQ;AAAA,QACxB,MAAM,IAAI;AAAA,QACV,SAAS,IAAI,QAAQ;AAAA,QACrB,OAAO,IAAI,OAAO,WAAW,KAAK,YAAY;AAAA,QAC9C,MAAM,IAAI,OAAO,WAAW,KAAK,KAAK,IAAI,QAAQ,eAAe,WAAW,QAAQ,gBAAgB,WAAW,QAAQ,eAAe;AAAA,MACxI,EAAE;AAAA,IACJ;AAAA,EACF,GAAG,CAAC,MAAM,UAAU,CAAC;AACrB,QAAM,gBAAY,uBAAQ,MAAM;AAC9B,UAAMC,UAAS,CAAC,WAAW,WAAW,WAAW,SAAS;AAC1D,WAAO,KAAK,OAAO,CAAC,KAAK,KAAKC,WAAU;AACtC,UAAI,IAAI,EAAE,IAAID,QAAOC,SAAQD,QAAO,MAAM;AAC1C,aAAO;AAAA,IACT,GAAG,CAAC,CAAC;AAAA,EACP,GAAG,CAAC,IAAI,CAAC;AACT,SAAO,oDAAC,QACJ;AAAA,wDAAC,SAAI,WAAU,sDACb;AAAA,0DAAC,QAAG,WAAU,uDAAsD,kCAApE;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,oDAAC,OAAE,WAAU,4CAA2C,gDAAxD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SANF;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,IAGA,oDAAC,SAAI,WAAU,wDACZ,eAAK,IAAI,CAAC,KAAKC,WAAU,oDAAC,QAAkB,WAAWA,WAAU,IAAI,mCAAmC,kCACrG,8DAAC,SAAI,WAAU,8BACb;AAAA,0DAAC,SAAI,WAAU,YACb;AAAA,4DAAC,SAAI,KAAK,IAAI,MAAM,KAAK,GAAG,IAAI,aAAa,WAAU,oCAAvD;AAAA;AAAA;AAAA;AAAA,eAAwF;AAAA,QACvFA,SAAQ,KAAK,oDAAC,UAAO,SAAS,MAAM,YAAY,IAAI,EAAE,GAAG,WAAU,iCAAgC,OAAM,WAAU,MAAI,MAAC,MAAK,MAC1H,8DAAC,qBAAU,WAAU,aAArB;AAAA;AAAA;AAAA;AAAA,eAA+B,KADrB;AAAA;AAAA;AAAA;AAAA,eAEZ;AAAA,WAJJ;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACA,oDAAC,QAAG,WAAU,kFACX,cAAI,QADP;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACCA,WAAU,KAAK,oDAAC,UAAK,WAAU,kHAAiH,wBAAjI;AAAA;AAAA;AAAA;AAAA,aAEd;AAAA,SAZJ;AAAA;AAAA;AAAA;AAAA,WAaA,KAdiC,IAAI,IAAf;AAAA;AAAA;AAAA;AAAA,WAexB,CAAO,KAhBX;AAAA;AAAA;AAAA;AAAA,WAiBA;AAAA,IAGA,oDAAC,QAAK,WAAU,QACd;AAAA,0DAAC,QAAG,WAAU,0DAAyD,8BAAvE;AAAA;AAAA;AAAA;AAAA,aAAqF;AAAA,MACrF,oDAAC,SAAI,WAAU,QACb,8DAAC,uBAAoB,OAAM,QAAO,QAAO,QACvC,8DAAC,YAAS,MAAM,UAAU,SAAS,QAAQ;AAAA,QAC3C,KAAK;AAAA,QACL,OAAO;AAAA,QACP,MAAM;AAAA,QACN,QAAQ;AAAA,MACV,GACI;AAAA,4DAAC,iBAAc,iBAAgB,SAA/B;AAAA;AAAA;AAAA;AAAA,eAAqC;AAAA,QACrC,oDAAC,SAAM,SAAQ,UAAf;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,QACtB,oDAAC,SAAM,QAAQ,CAAC,GAAG,CAAC,KAApB;AAAA;AAAA;AAAA;AAAA,eAAuB;AAAA,QACvB,oDAAC,WAAQ,WAAW,CAAC,OAAO,SAAS;AACrC,cAAI,SAAS,UAAU;AACrB,mBAAO,CAAC,GAAG,gBAAW,QAAQ;AAAA,UAChC;AACA,iBAAO,CAAC,OAAO,IAAI;AAAA,QACrB,GAAG,gBAAgB,UAAQ,QAAQ,UALjC;AAAA;AAAA;AAAA;AAAA,eAKyC;AAAA,QACzC,oDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,eAAQ;AAAA,QACR,oDAAC,OAAI,SAAQ,UAAS,MAAK,UAAS,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,GACpD,oBAAU,QAAQ,IAAI,CAAC,OAAOA,WAAU,oDAAC,QAA2B,MAAM,MAAM,SAA7B,QAAQA,UAAnB;AAAA;AAAA;AAAA;AAAA,eAA+C,CAAE,KAD5F;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAlBF;AAAA;AAAA;AAAA;AAAA,aAmBA,KApBF;AAAA;AAAA;AAAA;AAAA,aAqBA,KAtBF;AAAA;AAAA;AAAA;AAAA,aAuBA;AAAA,MAGA,oDAAC,SAAI,WAAU,wBACb,8DAAC,WAAM,WAAU,4DACf;AAAA,4DAAC,WACC,8DAAC,QACC;AAAA,8DAAC,QAAG,WAAU,iIAAgI,mBAA9I;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,QAAG,WAAU,iIAAgI,sBAA9I;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,QAAG,WAAU,iIAAgI,0BAA9I;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA,eAUA,KAXF;AAAA;AAAA;AAAA;AAAA,eAYA;AAAA,QACA,oDAAC,WAAM,WAAU,2EACd,oBAAU,QAAQ,IAAI,CAAC,KAAKA,WAAU,oDAAC,QACpC;AAAA,8DAAC,QAAG,WAAU,iFACX;AAAA,gBAAI;AAAA,YAAK;AAAA,YAAEA,WAAU,KAAK,oDAAC,UAAK,WAAU,8BAA6B,0BAA7C;AAAA;AAAA;AAAA;AAAA,mBAAuD;AAAA,eADpF;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,QAAG,WAAU,wEACX;AAAA,gBAAI,OAAO,QAAQ,CAAC;AAAA,YAAE;AAAA,eADzB;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,QAAG,WAAU,uCACX,UAAAA,WAAU,IAAI,oDAAC,UAAK,WAAU,iBAAgB,iBAAhC;AAAA;AAAA;AAAA;AAAA,iBAAiC,IAAU,oDAAC,UAAK,WAAWF,mBAAkB,IAAI,IAAI,GAChG,UAAAD,YAAW,IAAI,IAAI,KADkC;AAAA;AAAA;AAAA;AAAA,iBAExD,KAHJ;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,aAX4C,UAAU,IAAI,QAAvB;AAAA;AAAA;AAAA;AAAA,eAYrC,CAAK,KAbT;AAAA;AAAA;AAAA;AAAA,eAcA;AAAA,WA5BF;AAAA;AAAA;AAAA;AAAA,aA6BA,KA9BF;AAAA;AAAA;AAAA;AAAA,aA+BA;AAAA,SA3DF;AAAA;AAAA;AAAA;AAAA,WA4DA;AAAA,IAGA,oDAAC,QAAK,WAAU,QACd;AAAA,0DAAC,QAAG,WAAU,0DAAyD,6BAAvE;AAAA;AAAA;AAAA;AAAA,aAAoF;AAAA,MACpF,oDAAC,SAAI,WAAU,QACb,8DAAC,uBAAoB,OAAM,QAAO,QAAO,QACvC,8DAAC,YAAS,MAAM,UAAU,SAAS,QAAQ;AAAA,QAC3C,KAAK;AAAA,QACL,OAAO;AAAA,QACP,MAAM;AAAA,QACN,QAAQ;AAAA,MACV,GACI;AAAA,4DAAC,iBAAc,iBAAgB,SAA/B;AAAA;AAAA;AAAA;AAAA,eAAqC;AAAA,QACrC,oDAAC,SAAM,SAAQ,UAAf;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA,QACtB,oDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,eAAO;AAAA,QACP,oDAAC,WAAQ,WAAW,WAAS,CAAC,MAAM,eAAe,GAAG,SAAS,GAAG,gBAAgB,UAAQ,QAAQ,UAAlG;AAAA;AAAA;AAAA;AAAA,eAA0G;AAAA,QAC1G,oDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,eAAQ;AAAA,QACR,oDAAC,OAAI,SAAQ,WAAU,MAAK,WAAU,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,GACtD,oBAAU,QAAQ,IAAI,CAAC,OAAOG,WAAU,oDAAC,QAA2B,MAAM,MAAM,SAA7B,QAAQA,UAAnB;AAAA;AAAA;AAAA;AAAA,eAA+C,CAAE,KAD5F;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAbF;AAAA;AAAA;AAAA;AAAA,aAcA,KAfF;AAAA;AAAA;AAAA;AAAA,aAgBA,KAjBF;AAAA;AAAA;AAAA;AAAA,aAkBA;AAAA,MAGA,oDAAC,SAAI,WAAU,wBACb,8DAAC,WAAM,WAAU,4DACf;AAAA,4DAAC,WACC,8DAAC,QACC;AAAA,8DAAC,QAAG,WAAU,iIAAgI,mBAA9I;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,QAAG,WAAU,iIAAgI,6BAA9I;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,QAAG,WAAU,iIAAgI,0BAA9I;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aATF;AAAA;AAAA;AAAA;AAAA,eAUA,KAXF;AAAA;AAAA;AAAA;AAAA,eAYA;AAAA,QACA,oDAAC,WAAM,WAAU,2EACd,oBAAU,QAAQ,IAAI,CAAC,KAAKA,WAAU,oDAAC,QACpC;AAAA,8DAAC,QAAG,WAAU,iFACX;AAAA,gBAAI;AAAA,YAAK;AAAA,YAAEA,WAAU,KAAK,oDAAC,UAAK,WAAU,8BAA6B,0BAA7C;AAAA;AAAA;AAAA;AAAA,mBAAuD;AAAA,eADpF;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,QAAG,WAAU,wEACX,cAAI,QAAQ,eAAe,KAD9B;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,QAAG,WAAU,uCACX,UAAAA,WAAU,IAAI,oDAAC,UAAK,WAAU,iBAAgB,iBAAhC;AAAA;AAAA;AAAA;AAAA,iBAAiC,IAAU,oDAAC,UAAK,WAAWF,mBAAkB,IAAI,IAAI,GAChG,UAAAD,YAAW,IAAI,IAAI,KADkC;AAAA;AAAA;AAAA;AAAA,iBAExD,KAHJ;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,aAX4C,WAAW,IAAI,QAAxB;AAAA;AAAA;AAAA;AAAA,eAYrC,CAAK,KAbT;AAAA;AAAA;AAAA;AAAA,eAcA;AAAA,WA5BF;AAAA;AAAA;AAAA;AAAA,aA6BA,KA9BF;AAAA;AAAA;AAAA;AAAA,aA+BA;AAAA,SAtDF;AAAA;AAAA;AAAA;AAAA,WAuDA;AAAA,IAGA,oDAAC,6BAA0B,MAAY,mBAAvC;AAAA;AAAA;AAAA;AAAA,WAAyE;AAAA,OAxJtE;AAAA;AAAA;AAAA;AAAA,SAyJL;AACJ;AACAD,IAAG,mBAAmB,8BAA8B;AACpDK,MAAK;AACL,IAAIA;AACJ,aAAaA,KAAI,mBAAmB;AAEpC,OAAO,eAAe;AACtB,OAAO,eAAe;;;AGhOtB,IAAAC,gBAAwB;AAmChB,IAAAC,0BAAA;AAxDR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,uDAAyD,EAAE;AAAA,EACpG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAIC,MAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAkD;AAClD,cAAY,IAAI,eAAe;AACjC;AAKe,SAAR,mBAAoC;AAAA,EACzC;AACF,GAAG;AACD,EAAAA,IAAG;AAEH,QAAM,qBAAiB,uBAAQ,MAAM;AACnC,UAAM,aAAa,oBAAI,IAAI;AAC3B,SAAK,QAAQ,SAAO;AAClB,UAAI,SAAS,QAAQ,CAAC;AAAA,QACpB;AAAA,QACA;AAAA,MACF,MAAM;AACJ,YAAI,CAAC,WAAW,IAAI,IAAI,GAAG;AACzB,qBAAW,IAAI,MAAM;AAAA,YACnB;AAAA,YACA,QAAQ,CAAC;AAAA,UACX,CAAC;AAAA,QACH;AACA,mBAAW,IAAI,IAAI,EAAE,OAAO,IAAI,EAAE,IAAI;AAAA,MACxC,CAAC;AAAA,IACH,CAAC;AAGD,WAAO,MAAM,KAAK,WAAW,OAAO,CAAC,EAAE,OAAO,aAAW,OAAO,KAAK,QAAQ,MAAM,EAAE,UAAU,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM;AAC/G,YAAM,SAAS,OAAO,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,KAAK,UAAU,MAAM,OAAO,CAAC;AAC5E,YAAM,SAAS,OAAO,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,KAAK,UAAU,MAAM,OAAO,CAAC;AAC5E,aAAO,SAAS;AAAA,IAClB,CAAC;AAAA,EACH,GAAG,CAAC,IAAI,CAAC;AACT,MAAI,CAAC,MAAM,UAAU,CAAC,eAAe,QAAQ;AAC3C,WAAO;AAAA,EACT;AACA,SAAO,oDAAC,QACJ,8DAAC,SACC;AAAA,wDAAC,QAAG,WAAU,0CAAyC,4BAAvD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,oDAAC,OAAE,WAAU,8BAA6B,+CAA1C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAEA,oDAAC,SAAI,WAAU,wDACZ,yBAAe,IAAI,aAAW,oDAAC,QAAwB,WAAU,cAC9D,8DAAC,SACC;AAAA,0DAAC,SAAM,OAAM,QAAO,MAAK,MAAK,WAAU,QACrC,kBAAQ,QADX;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,oDAAC,SAAI,WAAU,aACZ,eAAK,IAAI,SAAO,QAAQ,OAAO,IAAI,EAAE,IAAI,oDAAC,SAAiB,WAAU,qCAChE;AAAA,4DAAC,SAAI,WAAU,2BACb;AAAA,8DAAC,SAAI,KAAK,IAAI,MAAM,KAAK,GAAG,IAAI,aAAa,WAAU,qBAAvD;AAAA;AAAA;AAAA;AAAA,iBAAyE;AAAA,UACzE,oDAAC,UAAK,WAAU,gDACb,cAAI,QADP;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,QACA,oDAAC,UAAK,WAAU,qCACb,kBAAQ,OAAO,IAAI,EAAE,EAAE,eAAe,KADzC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAT8C,IAAI,IAAd;AAAA;AAAA;AAAA;AAAA,aAUtC,IAAS,IAAI,KAXnB;AAAA;AAAA;AAAA;AAAA,aAYA;AAAA,SAhBF;AAAA;AAAA;AAAA;AAAA,WAiBA,KAlBsC,QAAQ,MAAnB;AAAA;AAAA;AAAA;AAAA,WAmB7B,CAAO,KApBX;AAAA;AAAA;AAAA;AAAA,WAqBA;AAAA,OA7BF;AAAA;AAAA;AAAA;AAAA,SA8BA,KA/BG;AAAA;AAAA;AAAA;AAAA,SAgCL;AACJ;AACAA,IAAG,oBAAoB,8BAA8B;AACrDC,MAAK;AACL,IAAIA;AACJ,aAAaA,KAAI,oBAAoB;AAErC,OAAO,eAAe;AACtB,OAAO,eAAe;;;;;;ACzFtB,SAAS,MAAM,GAAG;AAChB,SAAO,IAAI,MAAM;AACnB;AACA,IAAM,MAAM,CAAC,GAAG,GAAG,MAAM,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC;AACnD,SAAS,IAAI,GAAG;AACd,SAAO,IAAI,MAAM,IAAI,IAAI,GAAG,GAAG,GAAG;AACpC;AAIA,SAAS,IAAI,GAAG;AACd,SAAO,IAAI,MAAM,IAAI,GAAG,GAAG,GAAG,GAAG;AACnC;AACA,SAAS,IAAI,GAAG;AACd,SAAO,IAAI,MAAM,IAAI,IAAI,IAAI,KAAK,GAAG,CAAC;AACxC;AACA,SAAS,IAAI,GAAG;AACd,SAAO,IAAI,MAAM,IAAI,GAAG,GAAG,GAAG,GAAG;AACnC;AAEA,IAAM,QAAQ,EAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAE;AAC7J,IAAM,MAAM,CAAC,GAAG,kBAAkB;AAClC,IAAM,KAAK,OAAK,IAAI,IAAI,EAAG;AAC3B,IAAM,KAAK,OAAK,KAAK,IAAI,QAAS,CAAC,IAAI,IAAI,IAAI,EAAG;AAClD,IAAM,KAAK,QAAO,IAAI,QAAS,OAAQ,IAAI;AAC3C,IAAM,UAAU,OAAK,GAAG,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC;AAC5D,SAAS,SAAS,KAAK;AACrB,MAAI,MAAM,IAAI;AACd,MAAI;AACJ,MAAI,IAAI,CAAC,MAAM,KAAK;AAClB,QAAI,QAAQ,KAAK,QAAQ,GAAG;AAC1B,YAAM;AAAA,QACJ,GAAG,MAAM,MAAM,IAAI,CAAC,CAAC,IAAI;AAAA,QACzB,GAAG,MAAM,MAAM,IAAI,CAAC,CAAC,IAAI;AAAA,QACzB,GAAG,MAAM,MAAM,IAAI,CAAC,CAAC,IAAI;AAAA,QACzB,GAAG,QAAQ,IAAI,MAAM,IAAI,CAAC,CAAC,IAAI,KAAK;AAAA,MACtC;AAAA,IACF,WAAW,QAAQ,KAAK,QAAQ,GAAG;AACjC,YAAM;AAAA,QACJ,GAAG,MAAM,IAAI,CAAC,CAAC,KAAK,IAAI,MAAM,IAAI,CAAC,CAAC;AAAA,QACpC,GAAG,MAAM,IAAI,CAAC,CAAC,KAAK,IAAI,MAAM,IAAI,CAAC,CAAC;AAAA,QACpC,GAAG,MAAM,IAAI,CAAC,CAAC,KAAK,IAAI,MAAM,IAAI,CAAC,CAAC;AAAA,QACpC,GAAG,QAAQ,IAAK,MAAM,IAAI,CAAC,CAAC,KAAK,IAAI,MAAM,IAAI,CAAC,CAAC,IAAK;AAAA,MACxD;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT;AACA,IAAM,QAAQ,CAAC,GAAG,MAAM,IAAI,MAAM,EAAE,CAAC,IAAI;AACzC,SAAS,UAAU,GAAG;AACpB,MAAI,IAAI,QAAQ,CAAC,IAAI,KAAK;AAC1B,SAAO,IACH,MAAM,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,MAAM,EAAE,GAAG,CAAC,IAC7C;AACN;AAEA,IAAM,SAAS;AACf,SAAS,SAAS,GAAG,GAAG,GAAG;AACzB,QAAM,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC;AAC/B,QAAM,IAAI,CAAC,GAAG,KAAK,IAAI,IAAI,MAAM,OAAO,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE;AACtF,SAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC1B;AACA,SAAS,SAAS,GAAG,GAAG,GAAG;AACzB,QAAM,IAAI,CAAC,GAAG,KAAK,IAAI,IAAI,MAAM,MAAM,IAAI,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC;AACpF,SAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC1B;AACA,SAAS,SAAS,GAAG,GAAG,GAAG;AACzB,QAAM,MAAM,SAAS,GAAG,GAAG,GAAG;AAC9B,MAAI;AACJ,MAAI,IAAI,IAAI,GAAG;AACb,QAAI,KAAK,IAAI;AACb,SAAK;AACL,SAAK;AAAA,EACP;AACA,OAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACtB,QAAI,CAAC,KAAK,IAAI,IAAI;AAClB,QAAI,CAAC,KAAK;AAAA,EACZ;AACA,SAAO;AACT;AACA,SAAS,SAAS,GAAG,GAAG,GAAG,GAAG,KAAK;AACjC,MAAI,MAAM,KAAK;AACb,YAAS,IAAI,KAAK,KAAM,IAAI,IAAI,IAAI;AAAA,EACtC;AACA,MAAI,MAAM,KAAK;AACb,YAAQ,IAAI,KAAK,IAAI;AAAA,EACvB;AACA,UAAQ,IAAI,KAAK,IAAI;AACvB;AACA,SAAS,QAAQ,GAAG;AAClB,QAAM,QAAQ;AACd,QAAM,IAAI,EAAE,IAAI;AAChB,QAAM,IAAI,EAAE,IAAI;AAChB,QAAM,IAAI,EAAE,IAAI;AAChB,QAAM,MAAM,KAAK,IAAI,GAAG,GAAG,CAAC;AAC5B,QAAM,MAAM,KAAK,IAAI,GAAG,GAAG,CAAC;AAC5B,QAAM,KAAK,MAAM,OAAO;AACxB,MAAI,GAAG,GAAG;AACV,MAAI,QAAQ,KAAK;AACf,QAAI,MAAM;AACV,QAAI,IAAI,MAAM,KAAK,IAAI,MAAM,OAAO,KAAK,MAAM;AAC/C,QAAI,SAAS,GAAG,GAAG,GAAG,GAAG,GAAG;AAC5B,QAAI,IAAI,KAAK;AAAA,EACf;AACA,SAAO,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC;AAC1B;AACA,SAAS,MAAM,GAAG,GAAG,GAAG,GAAG;AACzB,UACE,MAAM,QAAQ,CAAC,IACX,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,IAClB,EAAE,GAAG,GAAG,CAAC,GACb,IAAI,GAAG;AACX;AACA,SAAS,QAAQ,GAAG,GAAG,GAAG;AACxB,SAAO,MAAM,UAAU,GAAG,GAAG,CAAC;AAChC;AACA,SAAS,QAAQ,GAAG,GAAG,GAAG;AACxB,SAAO,MAAM,UAAU,GAAG,GAAG,CAAC;AAChC;AACA,SAAS,QAAQ,GAAG,GAAG,GAAG;AACxB,SAAO,MAAM,UAAU,GAAG,GAAG,CAAC;AAChC;AACA,SAAS,IAAI,GAAG;AACd,UAAQ,IAAI,MAAM,OAAO;AAC3B;AACA,SAAS,SAAS,KAAK;AACrB,QAAM,IAAI,OAAO,KAAK,GAAG;AACzB,MAAI,IAAI;AACR,MAAI;AACJ,MAAI,CAAC,GAAG;AACN;AAAA,EACF;AACA,MAAI,EAAE,CAAC,MAAM,GAAG;AACd,QAAI,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;AAAA,EACnC;AACA,QAAM,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC;AACnB,QAAM,KAAK,CAAC,EAAE,CAAC,IAAI;AACnB,QAAM,KAAK,CAAC,EAAE,CAAC,IAAI;AACnB,MAAI,EAAE,CAAC,MAAM,OAAO;AAClB,QAAI,QAAQ,GAAG,IAAI,EAAE;AAAA,EACvB,WAAW,EAAE,CAAC,MAAM,OAAO;AACzB,QAAI,QAAQ,GAAG,IAAI,EAAE;AAAA,EACvB,OAAO;AACL,QAAI,QAAQ,GAAG,IAAI,EAAE;AAAA,EACvB;AACA,SAAO;AAAA,IACL,GAAG,EAAE,CAAC;AAAA,IACN,GAAG,EAAE,CAAC;AAAA,IACN,GAAG,EAAE,CAAC;AAAA,IACN;AAAA,EACF;AACF;AACA,SAAS,OAAO,GAAG,KAAK;AACtB,MAAI,IAAI,QAAQ,CAAC;AACjB,IAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,GAAG;AACrB,MAAI,QAAQ,CAAC;AACb,IAAE,IAAI,EAAE,CAAC;AACT,IAAE,IAAI,EAAE,CAAC;AACT,IAAE,IAAI,EAAE,CAAC;AACX;AACA,SAAS,UAAU,GAAG;AACpB,MAAI,CAAC,GAAG;AACN;AAAA,EACF;AACA,QAAM,IAAI,QAAQ,CAAC;AACnB,QAAM,IAAI,EAAE,CAAC;AACb,QAAM,IAAI,IAAI,EAAE,CAAC,CAAC;AAClB,QAAM,IAAI,IAAI,EAAE,CAAC,CAAC;AAClB,SAAO,EAAE,IAAI,MACT,QAAQ,MAAM,OAAO,OAAO,IAAI,EAAE,CAAC,OACnC,OAAO,MAAM,OAAO;AAC1B;AAEA,IAAM,MAAM;AAAA,EACX,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AACJ;AACA,IAAM,UAAU;AAAA,EACf,QAAQ;AAAA,EACR,aAAa;AAAA,EACb,MAAM;AAAA,EACN,WAAW;AAAA,EACX,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,cAAc;AAAA,EACd,IAAI;AAAA,EACJ,SAAS;AAAA,EACT,MAAM;AAAA,EACN,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,SAAS;AAAA,EACT,KAAK;AAAA,EACL,aAAa;AAAA,EACb,SAAS;AAAA,EACT,SAAS;AAAA,EACT,MAAM;AAAA,EACN,KAAK;AAAA,EACL,OAAO;AAAA,EACP,SAAS;AAAA,EACT,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,WAAW;AAAA,EACX,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,KAAK;AAAA,EACL,OAAO;AAAA,EACP,KAAK;AAAA,EACL,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,KAAK;AAAA,EACL,MAAM;AAAA,EACN,OAAO;AAAA,EACP,WAAW;AAAA,EACX,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,SAAS;AAAA,EACT,KAAK;AAAA,EACL,MAAM;AAAA,EACN,SAAS;AAAA,EACT,KAAK;AAAA,EACL,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,YAAY;AAAA,EACZ,KAAK;AAAA,EACL,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,WAAW;AAAA,EACX,KAAK;AAAA,EACL,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,UAAU;AAAA,EACV,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,SAAS;AAAA,EACT,OAAO;AAAA,EACP,SAAS;AAAA,EACT,MAAM;AAAA,EACN,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,YAAY;AAAA,EACZ,WAAW;AAAA,EACX,SAAS;AAAA,EACT,MAAM;AAAA,EACN,KAAK;AAAA,EACL,MAAM;AAAA,EACN,SAAS;AAAA,EACT,OAAO;AAAA,EACP,aAAa;AAAA,EACb,IAAI;AAAA,EACJ,UAAU;AAAA,EACV,OAAO;AAAA,EACP,WAAW;AAAA,EACX,OAAO;AAAA,EACP,WAAW;AAAA,EACX,OAAO;AAAA,EACP,SAAS;AAAA,EACT,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,MAAM;AAAA,EACN,MAAM;AAAA,EACN,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,KAAK;AAAA,EACL,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,IAAI;AAAA,EACJ,OAAO;AAAA,EACP,KAAK;AAAA,EACL,MAAM;AAAA,EACN,WAAW;AAAA,EACX,IAAI;AAAA,EACJ,OAAO;AACR;AACA,SAAS,SAAS;AAChB,QAAM,WAAW,CAAC;AAClB,QAAM,OAAO,OAAO,KAAK,OAAO;AAChC,QAAM,QAAQ,OAAO,KAAK,GAAG;AAC7B,MAAI,GAAG,GAAG,GAAG,IAAI;AACjB,OAAK,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AAChC,SAAK,KAAK,KAAK,CAAC;AAChB,SAAK,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACjC,UAAI,MAAM,CAAC;AACX,WAAK,GAAG,QAAQ,GAAG,IAAI,CAAC,CAAC;AAAA,IAC3B;AACA,QAAI,SAAS,QAAQ,EAAE,GAAG,EAAE;AAC5B,aAAS,EAAE,IAAI,CAAC,KAAK,KAAK,KAAM,KAAK,IAAI,KAAM,IAAI,GAAI;AAAA,EACzD;AACA,SAAO;AACT;AAEA,IAAI;AACJ,SAAS,UAAU,KAAK;AACtB,MAAI,CAAC,OAAO;AACV,YAAQ,OAAO;AACf,UAAM,cAAc,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,EACjC;AACA,QAAM,IAAI,MAAM,IAAI,YAAY,CAAC;AACjC,SAAO,KAAK;AAAA,IACV,GAAG,EAAE,CAAC;AAAA,IACN,GAAG,EAAE,CAAC;AAAA,IACN,GAAG,EAAE,CAAC;AAAA,IACN,GAAG,EAAE,WAAW,IAAI,EAAE,CAAC,IAAI;AAAA,EAC7B;AACF;AAEA,IAAM,SAAS;AACf,SAAS,SAAS,KAAK;AACrB,QAAM,IAAI,OAAO,KAAK,GAAG;AACzB,MAAI,IAAI;AACR,MAAI,GAAG,GAAG;AACV,MAAI,CAAC,GAAG;AACN;AAAA,EACF;AACA,MAAI,EAAE,CAAC,MAAM,GAAG;AACd,UAAM,IAAI,CAAC,EAAE,CAAC;AACd,QAAI,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,KAAK,GAAG,GAAG;AAAA,EACzC;AACA,MAAI,CAAC,EAAE,CAAC;AACR,MAAI,CAAC,EAAE,CAAC;AACR,MAAI,CAAC,EAAE,CAAC;AACR,MAAI,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,GAAG;AACxC,MAAI,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,GAAG;AACxC,MAAI,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,GAAG;AACxC,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AACA,SAAS,UAAU,GAAG;AACpB,SAAO,MACL,EAAE,IAAI,MACF,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,IAAI,EAAE,CAAC,OACvC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE;AAEjC;AAEA,IAAM,KAAK,OAAK,KAAK,WAAY,IAAI,QAAQ,KAAK,IAAI,GAAG,IAAM,GAAG,IAAI,QAAQ;AAC9E,IAAM,OAAO,OAAK,KAAK,UAAU,IAAI,QAAQ,KAAK,KAAK,IAAI,SAAS,OAAO,GAAG;AAC9E,SAAS,YAAY,MAAM,MAAM,GAAG;AAClC,QAAM,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC;AAC1B,QAAM,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC;AAC1B,QAAM,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC;AAC1B,SAAO;AAAA,IACL,GAAG,IAAI,GAAG,IAAI,KAAK,KAAK,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;AAAA,IAC1C,GAAG,IAAI,GAAG,IAAI,KAAK,KAAK,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;AAAA,IAC1C,GAAG,IAAI,GAAG,IAAI,KAAK,KAAK,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;AAAA,IAC1C,GAAG,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK;AAAA,EACjC;AACF;AAEA,SAAS,OAAO,GAAG,GAAG,OAAO;AAC3B,MAAI,GAAG;AACL,QAAI,MAAM,QAAQ,CAAC;AACnB,QAAI,CAAC,IAAI,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO,MAAM,IAAI,MAAM,CAAC,CAAC;AACzE,UAAM,QAAQ,GAAG;AACjB,MAAE,IAAI,IAAI,CAAC;AACX,MAAE,IAAI,IAAI,CAAC;AACX,MAAE,IAAI,IAAI,CAAC;AAAA,EACb;AACF;AACA,SAAS,MAAM,GAAG,OAAO;AACvB,SAAO,IAAI,OAAO,OAAO,SAAS,CAAC,GAAG,CAAC,IAAI;AAC7C;AACA,SAAS,WAAW,OAAO;AACzB,MAAI,IAAI,EAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAG;AACjC,MAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,QAAI,MAAM,UAAU,GAAG;AACrB,UAAI,EAAC,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,GAAG,IAAG;AAClD,UAAI,MAAM,SAAS,GAAG;AACpB,UAAE,IAAI,IAAI,MAAM,CAAC,CAAC;AAAA,MACpB;AAAA,IACF;AAAA,EACF,OAAO;AACL,QAAI,MAAM,OAAO,EAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAC,CAAC;AACzC,MAAE,IAAI,IAAI,EAAE,CAAC;AAAA,EACf;AACA,SAAO;AACT;AACA,SAAS,cAAc,KAAK;AAC1B,MAAI,IAAI,OAAO,CAAC,MAAM,KAAK;AACzB,WAAO,SAAS,GAAG;AAAA,EACrB;AACA,SAAO,SAAS,GAAG;AACrB;AACA,IAAM,QAAN,MAAY;AAAA,EACV,YAAY,OAAO;AACjB,QAAI,iBAAiB,OAAO;AAC1B,aAAO;AAAA,IACT;AACA,UAAM,OAAO,OAAO;AACpB,QAAI;AACJ,QAAI,SAAS,UAAU;AACrB,UAAI,WAAW,KAAK;AAAA,IACtB,WAAW,SAAS,UAAU;AAC5B,UAAI,SAAS,KAAK,KAAK,UAAU,KAAK,KAAK,cAAc,KAAK;AAAA,IAChE;AACA,SAAK,OAAO;AACZ,SAAK,SAAS,CAAC,CAAC;AAAA,EAClB;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,MAAM;AACR,QAAI,IAAI,MAAM,KAAK,IAAI;AACvB,QAAI,GAAG;AACL,QAAE,IAAI,IAAI,EAAE,CAAC;AAAA,IACf;AACA,WAAO;AAAA,EACT;AAAA,EACA,IAAI,IAAI,KAAK;AACX,SAAK,OAAO,WAAW,GAAG;AAAA,EAC5B;AAAA,EACA,YAAY;AACV,WAAO,KAAK,SAAS,UAAU,KAAK,IAAI,IAAI;AAAA,EAC9C;AAAA,EACA,YAAY;AACV,WAAO,KAAK,SAAS,UAAU,KAAK,IAAI,IAAI;AAAA,EAC9C;AAAA,EACA,YAAY;AACV,WAAO,KAAK,SAAS,UAAU,KAAK,IAAI,IAAI;AAAA,EAC9C;AAAA,EACA,IAAIC,QAAO,QAAQ;AACjB,QAAIA,QAAO;AACT,YAAM,KAAK,KAAK;AAChB,YAAM,KAAKA,OAAM;AACjB,UAAI;AACJ,YAAM,IAAI,WAAW,KAAK,MAAM;AAChC,YAAM,IAAI,IAAI,IAAI;AAClB,YAAM,IAAI,GAAG,IAAI,GAAG;AACpB,YAAM,OAAO,IAAI,MAAM,KAAK,KAAK,IAAI,MAAM,IAAI,IAAI,MAAM,KAAK;AAC9D,WAAK,IAAI;AACT,SAAG,IAAI,MAAO,KAAK,GAAG,IAAI,KAAK,GAAG,IAAI;AACtC,SAAG,IAAI,MAAO,KAAK,GAAG,IAAI,KAAK,GAAG,IAAI;AACtC,SAAG,IAAI,MAAO,KAAK,GAAG,IAAI,KAAK,GAAG,IAAI;AACtC,SAAG,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,GAAG;AAC/B,WAAK,MAAM;AAAA,IACb;AACA,WAAO;AAAA,EACT;AAAA,EACA,YAAYA,QAAO,GAAG;AACpB,QAAIA,QAAO;AACT,WAAK,OAAO,YAAY,KAAK,MAAMA,OAAM,MAAM,CAAC;AAAA,IAClD;AACA,WAAO;AAAA,EACT;AAAA,EACA,QAAQ;AACN,WAAO,IAAI,MAAM,KAAK,GAAG;AAAA,EAC3B;AAAA,EACA,MAAM,GAAG;AACP,SAAK,KAAK,IAAI,IAAI,CAAC;AACnB,WAAO;AAAA,EACT;AAAA,EACA,QAAQ,OAAO;AACb,UAAM,MAAM,KAAK;AACjB,QAAI,KAAK,IAAI;AACb,WAAO;AAAA,EACT;AAAA,EACA,YAAY;AACV,UAAM,MAAM,KAAK;AACjB,UAAM,MAAM,MAAM,IAAI,IAAI,MAAM,IAAI,IAAI,OAAO,IAAI,IAAI,IAAI;AAC3D,QAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxB,WAAO;AAAA,EACT;AAAA,EACA,QAAQ,OAAO;AACb,UAAM,MAAM,KAAK;AACjB,QAAI,KAAK,IAAI;AACb,WAAO;AAAA,EACT;AAAA,EACA,SAAS;AACP,UAAM,IAAI,KAAK;AACf,MAAE,IAAI,MAAM,EAAE;AACd,MAAE,IAAI,MAAM,EAAE;AACd,MAAE,IAAI,MAAM,EAAE;AACd,WAAO;AAAA,EACT;AAAA,EACA,QAAQ,OAAO;AACb,WAAO,KAAK,MAAM,GAAG,KAAK;AAC1B,WAAO;AAAA,EACT;AAAA,EACA,OAAO,OAAO;AACZ,WAAO,KAAK,MAAM,GAAG,CAAC,KAAK;AAC3B,WAAO;AAAA,EACT;AAAA,EACA,SAAS,OAAO;AACd,WAAO,KAAK,MAAM,GAAG,KAAK;AAC1B,WAAO;AAAA,EACT;AAAA,EACA,WAAW,OAAO;AAChB,WAAO,KAAK,MAAM,GAAG,CAAC,KAAK;AAC3B,WAAO;AAAA,EACT;AAAA,EACA,OAAO,KAAK;AACV,WAAO,KAAK,MAAM,GAAG;AACrB,WAAO;AAAA,EACT;AACF;;;AC5jBO,SAASC,OAAO;AACrB;AAMK,IAAMC,OAAO,MAAM;AACxB,MAAIC,KAAK;AACT,SAAO,MAAMA;AACf,GAAA;AAOO,SAASC,cAAcC,OAA2C;AACvE,SAAOA,UAAU,QAAQA,UAAUC;AACrC;AAOO,SAASC,QAAqBF,OAA8B;AACjE,MAAIG,MAAMD,WAAWC,MAAMD,QAAQF,KAAQ,GAAA;AACzC,WAAO;;AAET,QAAMI,OAAOC,OAAOC,UAAUC,SAASC,KAAKR,KAAAA;AAC5C,MAAII,KAAKK,MAAM,GAAG,CAAA,MAAO,aAAaL,KAAKK,MAAM,EAAC,MAAO,UAAU;AACjE,WAAO;;AAET,SAAO;AACT;AAOO,SAASC,SAASV,OAAoC;AAC3D,SAAOA,UAAU,QAAQK,OAAOC,UAAUC,SAASC,KAAKR,KAAW,MAAA;AACrE;AAMA,SAASW,eAAeX,OAAiC;AACvD,UAAQ,OAAOA,UAAU,YAAYA,iBAAiBY,WAAWC,SAAS,CAACb,KAAAA;AAC7E;AAUO,SAASc,gBAAgBd,OAAgBe,cAAsB;AACpE,SAAOJ,eAAeX,KAASA,IAAAA,QAAQe;AACzC;AAOO,SAASC,eAAkBhB,OAAsBe,cAAiB;AACvE,SAAO,OAAOf,UAAU,cAAce,eAAef;AACvD;IAOaiB,cAAc,CAACC,OAAwBC,cAClD,OAAOD,UAAU,YAAYA,MAAME,SAAS,GAAA,IAC1CC,WAAWH,KAAAA,IAAS,MAAMC,YACxB,CAACD;AASA,SAASI,SACdC,IACAC,MACAC,SACe;AACf,MAAIF,MAAM,OAAOA,GAAGG,SAAS,YAAY;AACvC,WAAOH,GAAGI,MAAMF,SAASD,IAAAA;;AAE7B;AAuBO,SAASI,KACdC,UACAN,IACAE,SACAK,SACA;AACA,MAAIC,GAAWC,KAAaC;AAC5B,MAAIC,QAAQL,QAAW,GAAA;AACrBG,UAAMH,SAASM;AACf,QAAIL,SAAS;AACX,WAAKC,IAAIC,MAAM,GAAGD,KAAK,GAAGA,KAAK;AAC7BR,WAAGG,KAAKD,SAASI,SAASE,CAAAA,GAAIA,CAAAA;MAChC;WACK;AACL,WAAKA,IAAI,GAAGA,IAAIC,KAAKD,KAAK;AACxBR,WAAGG,KAAKD,SAASI,SAASE,CAAAA,GAAIA,CAAAA;MAChC;;aAEOK,SAASP,QAAW,GAAA;AAC7BI,WAAOI,OAAOJ,KAAKJ,QAAAA;AACnBG,UAAMC,KAAKE;AACX,SAAKJ,IAAI,GAAGA,IAAIC,KAAKD,KAAK;AACxBR,SAAGG,KAAKD,SAASI,SAASI,KAAKF,CAAAA,CAAE,GAAGE,KAAKF,CAAE,CAAA;IAC7C;;AAEJ;AAQO,SAASO,eAAeC,IAAuBC,IAAuB;AAC3E,MAAIT,GAAWU,MAAcC,IAAqBC;AAElD,MAAI,CAACJ,MAAM,CAACC,MAAMD,GAAGJ,WAAWK,GAAGL,QAAQ;AACzC,WAAO;;AAGT,OAAKJ,IAAI,GAAGU,OAAOF,GAAGJ,QAAQJ,IAAIU,MAAM,EAAEV,GAAG;AAC3CW,SAAKH,GAAGR,CAAE;AACVY,SAAKH,GAAGT,CAAE;AAEV,QAAIW,GAAGE,iBAAiBD,GAAGC,gBAAgBF,GAAGG,UAAUF,GAAGE,OAAO;AAChE,aAAO;;EAEX;AAEA,SAAO;AACT;AAMO,SAASC,OAASC,QAAc;AACrC,MAAIb,QAAQa,MAAS,GAAA;AACnB,WAAOA,OAAOC,IAAIF,MAAAA;;AAGpB,MAAIV,SAASW,MAAS,GAAA;AACpB,UAAME,SAASZ,uBAAOa,OAAO,IAAI;AACjC,UAAMjB,OAAOI,OAAOJ,KAAKc,MAAAA;AACzB,UAAMI,OAAOlB,KAAKE;AAClB,QAAIiB,IAAI;AAER,WAAOA,IAAID,MAAM,EAAEC,GAAG;AACpBH,aAAOhB,KAAKmB,CAAAA,CAAE,IAAIN,OAAMC,OAAOd,KAAKmB,CAAAA,CAAE,CAAC;IACzC;AAEA,WAAOH;;AAGT,SAAOF;AACT;AAEA,SAASM,WAAWC,KAAa;AAC/B,SAAO;IAAC;IAAa;IAAa;IAAeC,QAAQD,GAAAA,MAAS;AACpE;AAOO,SAASE,QAAQF,KAAaL,QAAmBF,QAAmBU,SAAoB;AAC7F,MAAI,CAACJ,WAAWC,GAAM,GAAA;AACpB;;AAGF,QAAMI,OAAOT,OAAOK,GAAI;AACxB,QAAMK,OAAOZ,OAAOO,GAAI;AAExB,MAAIlB,SAASsB,IAAStB,KAAAA,SAASuB,IAAO,GAAA;AAEpCC,UAAMF,MAAMC,MAAMF,OAAAA;SACb;AACLR,WAAOK,GAAI,IAAGR,OAAMa,IAAAA;;AAExB;AA0BO,SAASC,MAASX,QAAWF,QAAqBU,SAAmC;AAC1F,QAAMI,UAAU3B,QAAQa,MAAAA,IAAUA,SAAS;IAACA;EAAO;AACnD,QAAMN,OAAOoB,QAAQ1B;AAErB,MAAI,CAACC,SAASa,MAAS,GAAA;AACrB,WAAOA;;AAGTQ,YAAUA,WAAW,CAAA;AACrB,QAAMK,SAASL,QAAQK,UAAUN;AACjC,MAAIO;AAEJ,WAAShC,IAAI,GAAGA,IAAIU,MAAM,EAAEV,GAAG;AAC7BgC,cAAUF,QAAQ9B,CAAE;AACpB,QAAI,CAACK,SAAS2B,OAAU,GAAA;AACtB;;AAGF,UAAM9B,OAAOI,OAAOJ,KAAK8B,OAAAA;AACzB,aAASX,IAAI,GAAGD,OAAOlB,KAAKE,QAAQiB,IAAID,MAAM,EAAEC,GAAG;AACjDU,aAAO7B,KAAKmB,CAAE,GAAEH,QAAQc,SAASN,OAAAA;IACnC;EACF;AAEA,SAAOR;AACT;AAgBO,SAASe,QAAWf,QAAWF,QAAgC;AAEpE,SAAOa,MAASX,QAAQF,QAAQ;IAACe,QAAQG;EAAS,CAAA;AACpD;AAMO,SAASA,UAAUX,KAAaL,QAAmBF,QAAmB;AAC3E,MAAI,CAACM,WAAWC,GAAM,GAAA;AACpB;;AAGF,QAAMI,OAAOT,OAAOK,GAAI;AACxB,QAAMK,OAAOZ,OAAOO,GAAI;AAExB,MAAIlB,SAASsB,IAAStB,KAAAA,SAASuB,IAAO,GAAA;AACpCK,YAAQN,MAAMC,IAAAA;aACL,CAACtB,OAAO6B,UAAUC,eAAezC,KAAKuB,QAAQK,GAAM,GAAA;AAC7DL,WAAOK,GAAI,IAAGR,OAAMa,IAAAA;;AAExB;AAaA,IAAMS,eAAe;;EAEnB,IAAIC,CAAAA,MAAKA;;EAETC,GAAGC,CAAAA,MAAKA,EAAED;EACVE,GAAGD,CAAAA,MAAKA,EAAEC;AACZ;AAKO,SAASC,UAAUC,KAAa;AACrC,QAAMC,QAAQD,IAAIE,MAAM,GAAA;AACxB,QAAMC,OAAiB,CAAA;AACvB,MAAIC,MAAM;AACV,aAAWC,QAAQJ,OAAO;AACxBG,WAAOC;AACP,QAAID,IAAIE,SAAS,IAAO,GAAA;AACtBF,YAAMA,IAAIG,MAAM,GAAG,EAAM,IAAA;WACpB;AACLJ,WAAKK,KAAKJ,GAAAA;AACVA,YAAM;;EAEV;AACA,SAAOD;AACT;AAEA,SAASM,gBAAgBT,KAAa;AACpC,QAAMG,OAAOJ,UAAUC,GAAAA;AACvB,SAAOU,CAAAA,QAAO;AACZ,eAAWC,KAAKR,MAAM;AACpB,UAAIQ,MAAM,IAAI;AAGZ;;AAEFD,YAAMA,OAAOA,IAAIC,CAAE;IACrB;AACA,WAAOD;EACT;AACF;AAEO,SAASE,iBAAiBF,KAAgBV,KAAkB;AACjE,QAAMa,WAAWnB,aAAaM,GAAI,MAAKN,aAAaM,GAAAA,IAAOS,gBAAgBT,GAAG;AAC9E,SAAOa,SAASH,GAAAA;AAClB;AAKO,SAASI,YAAYC,KAAa;AACvC,SAAOA,IAAIC,OAAO,CAAA,EAAGC,YAAW,IAAKF,IAAIR,MAAM,CAAA;AACjD;IAGaW,UAAU,CAACC,UAAmB,OAAOA,UAAU;IAE/CC,aAAa,CAACD,UAAqD,OAAOA,UAAU;AAGpFE,IAAAA,YAAY,CAAIC,GAAWC,MAAc;AACpD,MAAID,EAAEE,SAASD,EAAEC,MAAM;AACrB,WAAO;;AAGT,aAAWC,QAAQH,GAAG;AACpB,QAAI,CAACC,EAAEG,IAAID,IAAO,GAAA;AAChB,aAAO;;EAEX;AAEA,SAAO;AACT;AAMO,SAASE,cAAcC,GAAe;AAC3C,SAAOA,EAAEC,SAAS,aAAaD,EAAEC,SAAS,WAAWD,EAAEC,SAAS;AAClE;ACvZO,IAAMC,KAAKC,KAAKD;AAChB,IAAME,MAAM,IAAIF;AAChB,IAAMG,QAAQD,MAAMF;AACdI,IAAAA,WAAWC,OAAOC;AACxB,IAAMC,cAAcP,KAAK;AACzB,IAAMQ,UAAUR,KAAK;AACrB,IAAMS,aAAaT,KAAK;AAClBU,IAAAA,gBAAgBV,KAAK,IAAI;AAEzBW,IAAAA,QAAQV,KAAKU;AACbC,IAAAA,OAAOX,KAAKW;AAElB,SAASC,aAAa/C,GAAWE,GAAW8C,SAAiB;AAClE,SAAOb,KAAKc,IAAIjD,IAAIE,CAAK8C,IAAAA;AAC3B;AAKO,SAASE,QAAQC,OAAe;AACrC,QAAMC,eAAejB,KAAKkB,MAAMF,KAAAA;AAChCA,UAAQJ,aAAaI,OAAOC,cAAcD,QAAQ,GAAA,IAAQC,eAAeD;AACzE,QAAMG,YAAYnB,KAAKoB,IAAI,IAAIpB,KAAKqB,MAAMX,MAAMM,KAAAA,CAAAA,CAAAA;AAChD,QAAMM,WAAWN,QAAQG;AACzB,QAAMI,eAAeD,YAAY,IAAI,IAAIA,YAAY,IAAI,IAAIA,YAAY,IAAI,IAAI;AACjF,SAAOC,eAAeJ;AACxB;AAMO,SAASK,WAAWpC,OAAe;AACxC,QAAMqC,SAAmB,CAAA;AACzB,QAAMC,OAAO1B,KAAK0B,KAAKtC,KAAAA;AACvB,MAAIuC;AAEJ,OAAKA,IAAI,GAAGA,IAAID,MAAMC,KAAK;AACzB,QAAIvC,QAAQuC,MAAM,GAAG;AACnBF,aAAOhD,KAAKkD,CAAAA;AACZF,aAAOhD,KAAKW,QAAQuC,CAAAA;;EAExB;AACA,MAAID,UAAUA,OAAO,IAAI;AACvBD,WAAOhD,KAAKiD,IAAAA;;AAGdD,SAAOG,KAAK,CAACrC,GAAGC,MAAMD,IAAIC,CAAAA,EAAGqC,IAAG;AAChC,SAAOJ;AACT;AAKA,SAASK,eAAeC,GAAY;AAClC,SAAO,OAAOA,MAAM,YAAa,OAAOA,MAAM,YAAYA,MAAM,QAAQ,EAAEC,OAAOC,eAAeF,KAAK,cAAcA,KAAK,aAAaA;AACvI;AAEO,SAASG,SAASH,GAAyB;AAChD,SAAO,CAACD,eAAeC,CAAAA,KAAM,CAACI,MAAMC,WAAWL,CAAAA,CAAAA,KAAiBM,SAASN,CAAAA;AAC3E;AAEO,SAASO,YAAYzE,GAAWgD,SAAiB;AACtD,QAAM0B,UAAUvC,KAAKkB,MAAMrD,CAAAA;AAC3B,SAAO,UAAYgD,WAAYhD,KAAQ0E,UAAU1B,WAAYhD;AAC/D;AAKO,SAAS2E,mBACdC,OACAC,QACAC,UACA;AACA,MAAIhB,GAAWiB,MAAcxD;AAE7B,OAAKuC,IAAI,GAAGiB,OAAOH,MAAMI,QAAQlB,IAAIiB,MAAMjB,KAAK;AAC9CvC,YAAQqD,MAAMd,CAAE,EAACgB,QAAS;AAC1B,QAAI,CAACR,MAAM/C,KAAQ,GAAA;AACjBsD,aAAOI,MAAM9C,KAAK8C,IAAIJ,OAAOI,KAAK1D,KAAAA;AAClCsD,aAAOK,MAAM/C,KAAK+C,IAAIL,OAAOK,KAAK3D,KAAAA;;EAEtC;AACF;AAEO,SAAS4D,UAAUC,SAAiB;AACzC,SAAOA,WAAWlD,KAAK;AACzB;AAEO,SAASmD,UAAUC,SAAiB;AACzC,SAAOA,WAAW,MAAMpD;AAC1B;AASO,SAASqD,eAAevF,GAAW;AACxC,MAAI,CAACwF,eAAexF,CAAI,GAAA;AACtB;;AAEF,MAAIgC,IAAI;AACR,MAAIyD,IAAI;AACR,SAAOtD,KAAKkB,MAAMrD,IAAIgC,CAAAA,IAAKA,MAAMhC,GAAG;AAClCgC,SAAK;AACLyD;EACF;AACA,SAAOA;AACT;AAGO,SAASC,kBACdC,aACAC,YACA;AACA,QAAMC,sBAAsBD,WAAW5F,IAAI2F,YAAY3F;AACvD,QAAM8F,sBAAsBF,WAAW1F,IAAIyF,YAAYzF;AACvD,QAAM6F,2BAA2B5D,KAAK0B,KAAKgC,sBAAsBA,sBAAsBC,sBAAsBA,mBAAAA;AAE7G,MAAIE,QAAQ7D,KAAK8D,MAAMH,qBAAqBD,mBAAAA;AAE5C,MAAIG,QAAS,OAAO9D,IAAK;AACvB8D,aAAS5D;;AAGX,SAAO;IACL4D;IACAE,UAAUH;EACZ;AACF;AAEO,SAASI,sBAAsBC,KAAYC,KAAY;AAC5D,SAAOlE,KAAK0B,KAAK1B,KAAKoB,IAAI8C,IAAIrG,IAAIoG,IAAIpG,GAAG,CAAA,IAAKmC,KAAKoB,IAAI8C,IAAInG,IAAIkG,IAAIlG,GAAG,CAAA,CAAA;AACxE;AAMO,SAASoG,WAAW5E,GAAWC,GAAW;AAC/C,UAAQD,IAAIC,IAAIU,SAASD,MAAMF;AACjC;AAMO,SAASqE,gBAAgB7E,GAAW;AACzC,UAAQA,IAAIU,MAAMA,OAAOA;AAC3B;AAKO,SAASoE,cAAcR,OAAeS,OAAeC,KAAaC,uBAAiC;AACxG,QAAMjF,IAAI6E,gBAAgBP,KAAAA;AAC1B,QAAMY,IAAIL,gBAAgBE,KAAAA;AAC1B,QAAMzE,IAAIuE,gBAAgBG,GAAAA;AAC1B,QAAMG,eAAeN,gBAAgBK,IAAIlF,CAAAA;AACzC,QAAMoF,aAAaP,gBAAgBvE,IAAIN,CAAAA;AACvC,QAAMqF,eAAeR,gBAAgB7E,IAAIkF,CAAAA;AACzC,QAAMI,aAAaT,gBAAgB7E,IAAIM,CAAAA;AACvC,SAAON,MAAMkF,KAAKlF,MAAMM,KAAM2E,yBAAyBC,MAAM5E,KACvD6E,eAAeC,cAAcC,eAAeC;AACpD;AASO,SAASC,YAAY1F,OAAe0D,KAAaC,KAAa;AACnE,SAAO/C,KAAK+C,IAAID,KAAK9C,KAAK8C,IAAIC,KAAK3D,KAAAA,CAAAA;AACrC;AAMO,SAAS2F,YAAY3F,OAAe;AACzC,SAAO0F,YAAY1F,OAAO,QAAQ,KAAA;AACpC;AASO,SAAS4F,WAAW5F,OAAekF,OAAeC,KAAa1D,UAAU,MAAM;AACpF,SAAOzB,SAASY,KAAK8C,IAAIwB,OAAOC,GAAAA,IAAO1D,WAAWzB,SAASY,KAAK+C,IAAIuB,OAAOC,GAAO1D,IAAAA;AACpF;AC3LO,SAASoE,QACdC,OACA9F,OACA+F,KACA;AACAA,QAAMA,QAAQ,CAACC,WAAUF,MAAME,MAAAA,IAAShG;AACxC,MAAIiG,KAAKH,MAAMrC,SAAS;AACxB,MAAIyC,KAAK;AACT,MAAIC;AAEJ,SAAOF,KAAKC,KAAK,GAAG;AAClBC,UAAOD,KAAKD,MAAO;AACnB,QAAIF,IAAII,GAAM,GAAA;AACZD,WAAKC;WACA;AACLF,WAAKE;;EAET;AAEA,SAAO;IAACD;IAAID;EAAE;AAChB;AAUO,IAAMG,eAAe,CAC1BN,OACAjH,KACAmB,OACAqG,SAEAR,QAAQC,OAAO9F,OAAOqG,OAClBL,CAAAA,WAAS;AACT,QAAMM,KAAKR,MAAME,MAAAA,EAAOnH,GAAI;AAC5B,SAAOyH,KAAKtG,SAASsG,OAAOtG,SAAS8F,MAAME,SAAQ,CAAA,EAAGnH,GAAAA,MAASmB;IAE/DgG,CAAAA,WAASF,MAAME,MAAAA,EAAOnH,GAAAA,IAAOmB,KAAK;AAS3BuG,IAAAA,gBAAgB,CAC3BT,OACAjH,KACAmB,UAEA6F,QAAQC,OAAO9F,OAAOgG,CAAAA,WAASF,MAAME,MAAAA,EAAOnH,GAAAA,KAAQmB,KAAO;AAStD,SAASwG,eAAeC,QAAkB/C,KAAaC,KAAa;AACzE,MAAIuB,QAAQ;AACZ,MAAIC,MAAMsB,OAAOhD;AAEjB,SAAOyB,QAAQC,OAAOsB,OAAOvB,KAAAA,IAASxB,KAAK;AACzCwB;EACF;AACA,SAAOC,MAAMD,SAASuB,OAAOtB,MAAM,CAAA,IAAKxB,KAAK;AAC3CwB;EACF;AAEA,SAAOD,QAAQ,KAAKC,MAAMsB,OAAOhD,SAC7BgD,OAAOrH,MAAM8F,OAAOC,GAAAA,IACpBsB;AACN;AAEA,IAAMC,cAAc;EAAC;EAAQ;EAAO;EAAS;EAAU;AAAU;AAgB1D,SAASC,kBAAkBtD,OAAOuD,UAAU;AACjD,MAAIvD,MAAMwD,UAAU;AAClBxD,UAAMwD,SAASC,UAAUzH,KAAKuH,QAAAA;AAC9B;;AAGFG,SAAOC,eAAe3D,OAAO,YAAY;IACvC4D,cAAc;IACdC,YAAY;IACZlH,OAAO;MACL8G,WAAW;QAACF;MAAS;IACvB;EACF,CAAA;AAEAF,cAAYS,QAAQ,CAACtI,QAAQ;AAC3B,UAAMuI,SAAS,YAAYzH,YAAYd,GAAAA;AACvC,UAAMwI,OAAOhE,MAAMxE,GAAI;AAEvBkI,WAAOC,eAAe3D,OAAOxE,KAAK;MAChCoI,cAAc;MACdC,YAAY;MACZlH,SAASsH,MAAM;AACb,cAAMC,MAAMF,KAAKG,MAAM,MAAMF,IAAAA;AAE7BjE,cAAMwD,SAASC,UAAUK,QAAQ,CAACM,WAAW;AAC3C,cAAI,OAAOA,OAAOL,MAAAA,MAAY,YAAY;AACxCK,mBAAOL,MAAAA,EAAWE,GAAAA,IAAAA;;QAEtB,CAAA;AAEA,eAAOC;MACT;IACF,CAAA;EACF,CAAA;AACF;AAQO,SAASG,oBAAoBrE,OAAOuD,UAAU;AACnD,QAAMe,OAAOtE,MAAMwD;AACnB,MAAI,CAACc,MAAM;AACT;;AAGF,QAAMb,YAAYa,KAAKb;AACvB,QAAMd,SAAQc,UAAUc,QAAQhB,QAAAA;AAChC,MAAIZ,WAAU,IAAI;AAChBc,cAAUe,OAAO7B,QAAO,CAAA;;AAG1B,MAAIc,UAAUrD,SAAS,GAAG;AACxB;;AAGFiD,cAAYS,QAAQ,CAACtI,QAAQ;AAC3B,WAAOwE,MAAMxE,GAAI;EACnB,CAAA;AAEA,SAAOwE,MAAMwD;AACf;AAKO,SAASiB,aAAgBC,OAAY;AAC1C,QAAMC,OAAM,IAAIC,IAAOF,KAAAA;AAEvB,MAAIC,KAAI3H,SAAS0H,MAAMtE,QAAQ;AAC7B,WAAOsE;;AAGT,SAAOG,MAAMC,KAAKH,IAAAA;AACpB;AClLaI,IAAAA,mBAAoB,WAAW;AAC1C,MAAI,OAAOC,WAAW,aAAa;AACjC,WAAO,SAASC,WAAU;AACxB,aAAOA,UAAAA;IACT;;AAEF,SAAOD,OAAOE;AAChB,EAAK;AAME,SAASC,UACdC,IACAC,SACA;AACA,MAAIC,YAAY,CAAA;AAChB,MAAIC,UAAU;AAEd,SAAO,YAAYC,MAAa;AAE9BF,gBAAYE;AACZ,QAAI,CAACD,SAAS;AACZA,gBAAU;AACVR,uBAAiBU,KAAKT,QAAQ,MAAM;AAClCO,kBAAU;AACVH,WAAGM,MAAML,SAASC,SAAAA;MACpB,CAAA;;EAEJ;AACF;AAKO,SAASK,SAAmCP,IAA8BQ,OAAe;AAC9F,MAAIC;AACJ,SAAO,YAAYL,MAAa;AAC9B,QAAII,OAAO;AACTE,mBAAaD,OAAAA;AACbA,gBAAUE,WAAWX,IAAIQ,OAAOJ,IAAAA;WAC3B;AACLJ,SAAGM,MAAM,MAAMF,IAAAA;;AAEjB,WAAOI;EACT;AACF;AAMO,IAAMI,qBAAqB,CAACC,UAAsCA,UAAU,UAAU,SAASA,UAAU,QAAQ,UAAU;AAMrHC,IAAAA,iBAAiB,CAACD,OAAmCE,OAAeC,QAAgBH,UAAU,UAAUE,QAAQF,UAAU,QAAQG,OAAOD,QAAQC,OAAO;AAMxJC,IAAAA,SAAS,CAACJ,OAAoCK,MAAcC,OAAeC,QAAiB;AACvG,QAAMC,QAAQD,MAAM,SAAS;AAC7B,SAAOP,UAAUQ,QAAQF,QAAQN,UAAU,YAAYK,OAAOC,SAAS,IAAID;AAC7E;AAMO,SAASI,iCAAiCC,OAAqCC,QAAwBC,oBAA6B;AACzI,QAAMC,aAAaF,OAAOG;AAE1B,MAAIZ,QAAQ;AACZ,MAAIa,QAAQF;AAEZ,MAAIH,MAAKM,SAAS;AAChB,UAAM,EAACC,QAAQC,QAAQC,QAAAA,IAAWT;AAClC,UAAMU,WAAWV,MAAKW,UAAUX,MAAKW,QAAQC,UAAUZ,MAAKW,QAAQC,QAAQF,WAAW,OAAO;AAC9F,UAAMG,OAAON,OAAOM;AACpB,UAAM,EAACC,KAAKC,KAAKC,YAAYC,WAAU,IAAIV,OAAOW,cAAa;AAE/D,QAAIF,YAAY;AACdxB,cAAQ2B,KAAKL;;QAEXM,aAAaX,SAASI,MAAMC,GAAKO,EAAAA;;QAEjCnB,qBAAqBC,aAAaiB,aAAanB,QAAQY,MAAMN,OAAOe,iBAAiBR,GAAAA,CAAAA,EAAMO;MAAE;AAC/F,UAAIX,UAAU;AACZ,cAAMa,sBAAuBd,QAC1Be,MAAM,GAAGhC,QAAQ,CAAA,EACjBiC,QAAO,EACPC,UACCC,CAAAA,UAAS,CAACC,cAAcD,MAAMnB,OAAOK,IAAI,CAAC,CAAA;AAC9CrB,iBAAS2B,KAAKJ,IAAI,GAAGQ,mBAAAA;;AAEvB/B,cAAQqC,YAAYrC,OAAO,GAAGW,aAAa,CAAA;;AAE7C,QAAIc,YAAY;AACd,UAAIxB,MAAM0B,KAAKJ;;QAEbK,aAAaX,SAASF,OAAOM,MAAME,KAAK,IAAI,EAAEe,KAAK;;QAEnD5B,qBAAqB,IAAIkB,aAAanB,QAAQY,MAAMN,OAAOe,iBAAiBP,GAAAA,GAAM,IAAI,EAAEe,KAAK;MAAC;AAChG,UAAIpB,UAAU;AACZ,cAAMqB,sBAAuBtB,QAC1Be,MAAM/B,MAAM,CAAA,EACZiC,UACCC,CAAAA,UAAS,CAACC,cAAcD,MAAMnB,OAAOK,IAAI,CAAC,CAAA;AAC9CpB,eAAO0B,KAAKJ,IAAI,GAAGgB,mBAAAA;;AAErB1B,cAAQwB,YAAYpC,KAAKD,OAAOW,UAAcX,IAAAA;WACzC;AACLa,cAAQF,aAAaX;;;AAIzB,SAAO;IAACA;IAAOa;EAAK;AACtB;AAQO,SAAS2B,oBAAoBhC,OAAM;AACxC,QAAM,EAACiC,QAAQC,QAAQC,aAAAA,IAAgBnC;AACvC,QAAMoC,YAAY;IAChBC,MAAMJ,OAAOnB;IACbwB,MAAML,OAAOlB;IACbwB,MAAML,OAAOpB;IACb0B,MAAMN,OAAOnB;EACf;AACA,MAAI,CAACoB,cAAc;AACjBnC,IAAAA,MAAKmC,eAAeC;AACpB,WAAO;;AAET,QAAMK,UAAUN,aAAaE,SAASJ,OAAOnB,OAC1CqB,aAAaG,SAASL,OAAOlB,OAC7BoB,aAAaI,SAASL,OAAOpB,OAC7BqB,aAAaK,SAASN,OAAOnB;AAEhC2B,SAAOC,OAAOR,cAAcC,SAAAA;AAC5B,SAAOK;AACT;AChKA,IAAMG,SAAS,CAACC,MAAcA,MAAM,KAAKA,MAAM;AAC/C,IAAMC,YAAY,CAACD,GAAWE,GAAWC,MAAc,EAAE7B,KAAK8B,IAAI,GAAG,MAAMJ,KAAK,EAAM1B,IAAAA,KAAK+B,KAAKL,IAAIE,KAAKI,MAAMH,CAAC;AAChH,IAAMI,aAAa,CAACP,GAAWE,GAAWC,MAAc7B,KAAK8B,IAAI,GAAG,MAAMJ,CAAK1B,IAAAA,KAAK+B,KAAKL,IAAIE,KAAKI,MAAMH,CAAK,IAAA;AAM5G,IACKK,UAAU;EACdC,QAAQ,CAACT,MAAcA;EAEvBU,YAAY,CAACV,MAAcA,IAAIA;EAE/BW,aAAa,CAACX,MAAc,CAACA,KAAKA,IAAI;EAEtCY,eAAe,CAACZ,OAAgBA,KAAK,OAAO,IACxC,MAAMA,IAAIA,IACV,QAAS,EAAEA,KAAMA,IAAI,KAAK;EAE9Ba,aAAa,CAACb,MAAcA,IAAIA,IAAIA;EAEpCc,cAAc,CAACd,OAAeA,KAAK,KAAKA,IAAIA,IAAI;EAEhDe,gBAAgB,CAACf,OAAgBA,KAAK,OAAO,IACzC,MAAMA,IAAIA,IAAIA,IACd,QAAQA,KAAK,KAAKA,IAAIA,IAAI;EAE9BgB,aAAa,CAAChB,MAAcA,IAAIA,IAAIA,IAAIA;EAExCiB,cAAc,CAACjB,MAAc,GAAGA,KAAK,KAAKA,IAAIA,IAAIA,IAAI;EAEtDkB,gBAAgB,CAAClB,OAAgBA,KAAK,OAAO,IACzC,MAAMA,IAAIA,IAAIA,IAAIA,IAClB,SAASA,KAAK,KAAKA,IAAIA,IAAIA,IAAI;EAEnCmB,aAAa,CAACnB,MAAcA,IAAIA,IAAIA,IAAIA,IAAIA;EAE5CoB,cAAc,CAACpB,OAAeA,KAAK,KAAKA,IAAIA,IAAIA,IAAIA,IAAI;EAExDqB,gBAAgB,CAACrB,OAAgBA,KAAK,OAAO,IACzC,MAAMA,IAAIA,IAAIA,IAAIA,IAAIA,IACtB,QAAQA,KAAK,KAAKA,IAAIA,IAAIA,IAAIA,IAAI;EAEtCsB,YAAY,CAACtB,MAAc,CAAC1B,KAAKiD,IAAIvB,IAAIwB,OAAW,IAAA;EAEpDC,aAAa,CAACzB,MAAc1B,KAAK+B,IAAIL,IAAIwB,OAAAA;EAEzCE,eAAe,CAAC1B,MAAc,QAAQ1B,KAAKiD,IAAII,KAAK3B,CAAAA,IAAK;EAEzD4B,YAAY,CAAC5B,MAAc,MAAO,IAAK,IAAI1B,KAAK8B,IAAI,GAAG,MAAMJ,IAAI,EAAG;EAEpE6B,aAAa,CAAC7B,MAAc,MAAO,IAAK,IAAI,CAAC1B,KAAK8B,IAAI,GAAG,MAAMJ,CAAAA,IAAK;EAEpE8B,eAAe,CAAC9B,MAAcD,OAAOC,CAAAA,IAAKA,IAAIA,IAAI,MAC9C,MAAM1B,KAAK8B,IAAI,GAAG,MAAMJ,IAAI,IAAI,EAAA,IAChC,OAAO,CAAC1B,KAAK8B,IAAI,GAAG,OAAOJ,IAAI,IAAI,EAAA,IAAM;EAE7C+B,YAAY,CAAC/B,MAAc,KAAM,IAAKA,IAAI,EAAE1B,KAAK0D,KAAK,IAAIhC,IAAIA,CAAAA,IAAK;EAEnEiC,aAAa,CAACjC,MAAc1B,KAAK0D,KAAK,KAAKhC,KAAK,KAAKA,CAAAA;EAErDkC,eAAe,CAAClC,OAAgBA,KAAK,OAAO,IACxC,QAAQ1B,KAAK0D,KAAK,IAAIhC,IAAIA,CAAAA,IAAK,KAC/B,OAAO1B,KAAK0D,KAAK,KAAKhC,KAAK,KAAKA,CAAAA,IAAK;EAEzCmC,eAAe,CAACnC,MAAcD,OAAOC,CAAAA,IAAKA,IAAIC,UAAUD,GAAG,OAAO,GAAI;EAEtEoC,gBAAgB,CAACpC,MAAcD,OAAOC,CAAAA,IAAKA,IAAIO,WAAWP,GAAG,OAAO,GAAI;EAExEqC,iBAAiBrC,GAAW;AAC1B,UAAME,IAAI;AACV,UAAMC,IAAI;AACV,WAAOJ,OAAOC,CAAKA,IAAAA,IACjBA,IAAI,MACA,MAAMC,UAAUD,IAAI,GAAGE,GAAGC,CAAAA,IAC1B,MAAM,MAAMI,WAAWP,IAAI,IAAI,GAAGE,GAAGC,CAAE;EAC/C;EAEAmC,WAAWtC,GAAW;AACpB,UAAME,IAAI;AACV,WAAOF,IAAIA,MAAME,IAAI,KAAKF,IAAIE;EAChC;EAEAqC,YAAYvC,GAAW;AACrB,UAAME,IAAI;AACV,YAAQF,KAAK,KAAKA,MAAME,IAAI,KAAKF,IAAIE,KAAK;EAC5C;EAEAsC,cAAcxC,GAAW;AACvB,QAAIE,IAAI;AACR,SAAKF,KAAK,OAAO,GAAG;AAClB,aAAO,OAAOA,IAAIA,OAAOE,KAAM,SAAU,KAAKF,IAAIE;;AAEpD,WAAO,QAAQF,KAAK,KAAKA,OAAOE,KAAM,SAAU,KAAKF,IAAIE,KAAK;EAChE;EAEAuC,cAAc,CAACzC,MAAc,IAAIQ,QAAQkC,cAAc,IAAI1C,CAAAA;EAE3D0C,cAAc1C,GAAW;AACvB,UAAM2C,IAAI;AACV,UAAMC,IAAI;AACV,QAAI5C,IAAK,IAAI4C,GAAI;AACf,aAAOD,IAAI3C,IAAIA;;AAEjB,QAAIA,IAAK,IAAI4C,GAAI;AACf,aAAOD,KAAK3C,KAAM,MAAM4C,KAAM5C,IAAI;;AAEpC,QAAIA,IAAK,MAAM4C,GAAI;AACjB,aAAOD,KAAK3C,KAAM,OAAO4C,KAAM5C,IAAI;;AAErC,WAAO2C,KAAK3C,KAAM,QAAQ4C,KAAM5C,IAAI;EACtC;EAEA6C,iBAAiB,CAAC7C,MAAeA,IAAI,MACjCQ,QAAQiC,aAAazC,IAAI,CAAK,IAAA,MAC9BQ,QAAQkC,cAAc1C,IAAI,IAAI,CAAA,IAAK,MAAM;AAC/C;ACrHO,SAAS8C,oBAAoBC,OAAyD;AAC3F,MAAIA,SAAS,OAAOA,UAAU,UAAU;AACtC,UAAMC,OAAOD,MAAME,SAAQ;AAC3B,WAAOD,SAAS,4BAA4BA,SAAS;;AAGvD,SAAO;AACT;AAWO,SAASE,MAAMH,OAAO;AAC3B,SAAOD,oBAAoBC,KAAAA,IAASA,QAAQ,IAAII,MAAMJ,KAAM;AAC9D;AAKO,SAASK,cAAcL,OAAO;AACnC,SAAOD,oBAAoBC,KAAAA,IACvBA,QACA,IAAII,MAAMJ,KAAAA,EAAOM,SAAS,GAAKC,EAAAA,OAAO,GAAA,EAAKC,UAAS;AAC1D;AC/BA,IAAMC,UAAU;EAAC;EAAK;EAAK;EAAe;EAAU;AAAU;AAC9D,IAAMC,SAAS;EAAC;EAAS;EAAe;AAAkB;AAEnD,SAASC,wBAAwBC,WAAU;AAChDA,EAAAA,UAASC,IAAI,aAAa;IACxBxH,OAAOyH;IACPC,UAAU;IACVC,QAAQ;IACRnI,IAAIiI;IACJG,MAAMH;IACNI,MAAMJ;IACNK,IAAIL;IACJb,MAAMa;EACR,CAAA;AAEAF,EAAAA,UAASQ,SAAS,aAAa;IAC7BC,WAAW;IACXC,YAAY;IACZC,aAAa,CAACC,SAASA,SAAS,gBAAgBA,SAAS,gBAAgBA,SAAS;EACpF,CAAA;AAEAZ,EAAAA,UAASC,IAAI,cAAc;IACzBH,QAAQ;MACNT,MAAM;MACNwB,YAAYf;IACd;IACAD,SAAS;MACPR,MAAM;MACNwB,YAAYhB;IACd;EACF,CAAA;AAEAG,EAAAA,UAASQ,SAAS,cAAc;IAC9BC,WAAW;EACb,CAAA;AAEAT,EAAAA,UAASC,IAAI,eAAe;IAC1Ba,QAAQ;MACNC,WAAW;QACTZ,UAAU;MACZ;IACF;IACAa,QAAQ;MACND,WAAW;QACTZ,UAAU;MACZ;IACF;IACAc,MAAM;MACJC,YAAY;QACVpB,QAAQ;UACNO,MAAM;QACR;QACAc,SAAS;UACP9B,MAAM;UACNc,UAAU;QACZ;MACF;IACF;IACAiB,MAAM;MACJF,YAAY;QACVpB,QAAQ;UACNS,IAAI;QACN;QACAY,SAAS;UACP9B,MAAM;UACNe,QAAQ;UACRnI,IAAIoJ,CAAAA,MAAKA,IAAI;QACf;MACF;IACF;EACF,CAAA;AACF;ACvEO,SAASC,qBAAqBtB,WAAU;AAC7CA,EAAAA,UAASC,IAAI,UAAU;IACrBsB,aAAa;IACbC,SAAS;MACPC,KAAK;MACLrI,OAAO;MACPsI,QAAQ;MACRvI,MAAM;IACR;EACF,CAAA;AACF;ACTA,IAAMwI,YAAY,oBAAIC,IAAAA;AAEtB,SAASC,gBAAgBC,QAAgB1H,SAAoC;AAC3EA,YAAUA,WAAW,CAAA;AACrB,QAAM2H,WAAWD,SAASE,KAAKC,UAAU7H,OAAAA;AACzC,MAAI8H,YAAYP,UAAUQ,IAAIJ,QAAAA;AAC9B,MAAI,CAACG,WAAW;AACdA,gBAAY,IAAIE,KAAKC,aAAaP,QAAQ1H,OAAAA;AAC1CuH,cAAU1B,IAAI8B,UAAUG,SAAAA;;AAE1B,SAAOA;AACT;AAEO,SAASI,aAAaC,KAAaT,QAAgB1H,SAAoC;AAC5F,SAAOyH,gBAAgBC,QAAQ1H,OAASoI,EAAAA,OAAOD,GAAAA;AACjD;ACRA,IAAME,aAAa;EAOjBC,OAAOtD,OAAO;AACZ,WAAOuD,QAAQvD,KAAS,IAAyBA,QAAS,KAAKA;EACjE;EAUAwD,QAAQC,WAAWC,QAAOC,OAAO;AAC/B,QAAIF,cAAc,GAAG;AACnB,aAAO;;AAGT,UAAMf,SAAS,KAAKkB,MAAM5I,QAAQ0H;AAClC,QAAImB;AACJ,QAAIC,QAAQL;AAEZ,QAAIE,MAAMnJ,SAAS,GAAG;AAEpB,YAAMuJ,UAAUxI,KAAKJ,IAAII,KAAKyI,IAAIL,MAAM,CAAE,EAAC3D,KAAK,GAAGzE,KAAKyI,IAAIL,MAAMA,MAAMnJ,SAAS,CAAE,EAACwF,KAAK,CAAA;AACzF,UAAI+D,UAAU,QAAQA,UAAU,MAAO;AACrCF,mBAAW;;AAGbC,cAAQG,eAAeR,WAAWE,KAAAA;;AAGpC,UAAMO,WAAWC,MAAM5I,KAAKyI,IAAIF,KAAAA,CAAAA;AAOhC,UAAMM,aAAaC,MAAMH,QAAAA,IAAY,IAAI3I,KAAKJ,IAAII,KAAKL,IAAI,KAAKK,KAAK+I,MAAMJ,QAAAA,GAAW,EAAA,GAAK,CAAE;AAE7F,UAAMlJ,UAAU;MAAC6I;MAAUU,uBAAuBH;MAAYI,uBAAuBJ;IAAU;AAC/FtH,WAAOC,OAAO/B,SAAS,KAAKA,QAAQ2I,MAAMP,MAAM;AAEhD,WAAOF,aAAaO,WAAWf,QAAQ1H,OAAAA;EACzC;EAWAyJ,YAAYhB,WAAWC,QAAOC,OAAO;AACnC,QAAIF,cAAc,GAAG;AACnB,aAAO;;AAET,UAAMiB,SAASf,MAAMD,MAAAA,EAAOiB,eAAgBlB,YAAalI,KAAK8B,IAAI,IAAI9B,KAAK+I,MAAMH,MAAMV,SAAAA,CAAAA,CAAAA;AACvF,QAAI;MAAC;MAAG;MAAG;MAAG;MAAG;MAAI;IAAG,EAACmB,SAASF,MAAAA,KAAWhB,SAAQ,MAAMC,MAAMnJ,QAAQ;AACvE,aAAO6I,WAAWG,QAAQtK,KAAK,MAAMuK,WAAWC,QAAOC,KAAAA;;AAEzD,WAAO;EACT;AAEF;AAGA,SAASM,eAAeR,WAAWE,OAAO;AAGxC,MAAIG,QAAQH,MAAMnJ,SAAS,IAAImJ,MAAM,CAAE,EAAC3D,QAAQ2D,MAAM,CAAE,EAAC3D,QAAQ2D,MAAM,CAAE,EAAC3D,QAAQ2D,MAAM,CAAE,EAAC3D;AAG3F,MAAIzE,KAAKyI,IAAIF,KAAAA,KAAU,KAAKL,cAAclI,KAAK+I,MAAMb,SAAY,GAAA;AAE/DK,YAAQL,YAAYlI,KAAK+I,MAAMb,SAAAA;;AAEjC,SAAOK;AACT;AAMA,IAAA,QAAe;EAACT;AAAU;ACnGnB,SAASwB,mBAAmBjE,WAAU;AAC3CA,EAAAA,UAASC,IAAI,SAAS;IACpBiE,SAAS;IACTC,QAAQ;IACRlJ,SAAS;IACTmJ,aAAa;IASbC,QAAQ;IAERC,MAAM;IAMNC,OAAO;IAGPC,MAAM;MACJN,SAAS;MACTO,WAAW;MACXC,iBAAiB;MACjBC,WAAW;MACXC,YAAY;MACZC,WAAW,CAACC,MAAM1K,YAAYA,QAAQqK;MACtCM,WAAW,CAACD,MAAM1K,YAAYA,QAAQmF;MACtC4E,QAAQ;IACV;IAEAa,QAAQ;MACNd,SAAS;MACTe,MAAM,CAAA;MACNC,YAAY;MACZC,OAAO;IACT;IAGAC,OAAO;MAELlB,SAAS;MAGTmB,MAAM;MAGN7D,SAAS;QACPC,KAAK;QACLC,QAAQ;MACV;IACF;IAGAqB,OAAO;MACLuC,aAAa;MACbC,aAAa;MACbC,QAAQ;MACRC,iBAAiB;MACjBC,iBAAiB;MACjBlE,SAAS;MACT0C,SAAS;MACTyB,UAAU;MACVC,iBAAiB;MACjBC,aAAa;MAEb/N,UAAUgO,MAAMrD,WAAWC;MAC3BqD,OAAO,CAAA;MACPC,OAAO,CAAA;MACPlN,OAAO;MACPmN,YAAY;MAEZC,mBAAmB;MACnBC,eAAe;MACfC,iBAAiB;IACnB;EACF,CAAA;AAEApG,EAAAA,UAASqG,MAAM,eAAe,SAAS,IAAI,OAAA;AAC3CrG,EAAAA,UAASqG,MAAM,cAAc,SAAS,IAAI,aAAA;AAC1CrG,EAAAA,UAASqG,MAAM,gBAAgB,SAAS,IAAI,aAAA;AAC5CrG,EAAAA,UAASqG,MAAM,eAAe,SAAS,IAAI,OAAA;AAE3CrG,EAAAA,UAASQ,SAAS,SAAS;IACzBC,WAAW;IACXE,aAAa,CAACC,SAAS,CAACA,KAAK0F,WAAW,QAAA,KAAa,CAAC1F,KAAK0F,WAAW,OAAY1F,KAAAA,SAAS,cAAcA,SAAS;IAClHF,YAAY,CAACE,SAASA,SAAS,gBAAgBA,SAAS,oBAAoBA,SAAS;EACvF,CAAA;AAEAZ,EAAAA,UAASQ,SAAS,UAAU;IAC1BC,WAAW;EACb,CAAA;AAEAT,EAAAA,UAASQ,SAAS,eAAe;IAC/BG,aAAa,CAACC,SAASA,SAAS,qBAAqBA,SAAS;IAC9DF,YAAY,CAACE,SAASA,SAAS;EACjC,CAAA;AACF;IClGa2F,YAAYrK,uBAAOsK,OAAO,IAAI;IAC9BC,cAAcvK,uBAAOsK,OAAO,IAAI;AAO7C,SAASE,WAASC,MAAMC,KAAK;AAC3B,MAAI,CAACA,KAAK;AACR,WAAOD;;AAET,QAAME,OAAOD,IAAIE,MAAM,GAAA;AACvB,WAASC,IAAI,GAAGC,IAAIH,KAAKjN,QAAQmN,IAAIC,GAAG,EAAED,GAAG;AAC3C,UAAME,IAAIJ,KAAKE,CAAE;AACjBJ,WAAOA,KAAKM,CAAE,MAAKN,KAAKM,CAAAA,IAAK/K,uBAAOsK,OAAO,IAAI;EACjD;AACA,SAAOG;AACT;AAEA,SAAS1G,IAAIiH,MAAMC,OAAOzE,QAAQ;AAChC,MAAI,OAAOyE,UAAU,UAAU;AAC7B,WAAOC,MAAMV,WAASQ,MAAMC,KAAQzE,GAAAA,MAAAA;;AAEtC,SAAO0E,MAAMV,WAASQ,MAAM,EAAKC,GAAAA,KAAAA;AACnC;AAMO,IAAME,WAAN,MAAMA;EACXC,YAAYC,eAAcC,WAAW;AACnC,SAAKzG,YAAYb;AACjB,SAAKuH,kBAAkB;AACvB,SAAKC,cAAc;AACnB,SAAKnI,QAAQ;AACb,SAAKoI,WAAW,CAAA;AAChB,SAAKC,mBAAmB,CAACC,YAAYA,QAAQ7E,MAAM8E,SAASC,oBAAmB;AAC/E,SAAKC,WAAW,CAAA;AAChB,SAAKC,SAAS;MACZ;MACA;MACA;MACA;MACA;IACD;AACD,SAAKC,OAAO;MACVC,QAAQ;MACRC,MAAM;MACNC,OAAO;MACPC,YAAY;MACZC,QAAQ;IACV;AACA,SAAKC,QAAQ,CAAA;AACb,SAAKC,uBAAuB,CAACC,KAAKtO,YAAYqF,cAAcrF,QAAQqN,eAAe;AACnF,SAAKkB,mBAAmB,CAACD,KAAKtO,YAAYqF,cAAcrF,QAAQsN,WAAW;AAC3E,SAAKkB,aAAa,CAACF,KAAKtO,YAAYqF,cAAcrF,QAAQmF,KAAK;AAC/D,SAAKsJ,YAAY;AACjB,SAAKC,cAAc;MACjBC,MAAM;MACNC,WAAW;MACXC,kBAAkB;IACpB;AACA,SAAKC,sBAAsB;AAC3B,SAAKC,UAAU;AACf,SAAKC,UAAU;AACf,SAAKC,UAAU;AACf,SAAKC,UAAU,CAAA;AACf,SAAKC,aAAa;AAClB,SAAKC,QAAQtJ;AACb,SAAKuJ,SAAS,CAAA;AACd,SAAKC,WAAW;AAChB,SAAKC,0BAA0B;AAE/B,SAAKnJ,SAAS+G,aAAAA;AACd,SAAKhP,MAAMiP,SAAAA;EACb;EAMAvH,IAAIkH,OAAOzE,QAAQ;AACjB,WAAOzC,IAAI,MAAMkH,OAAOzE,MAAAA;EAC1B;EAKAP,IAAIgF,OAAO;AACT,WAAOT,WAAS,MAAMS,KAAAA;EACxB;EAMA3G,SAAS2G,OAAOzE,QAAQ;AACtB,WAAOzC,IAAIwG,aAAaU,OAAOzE,MAAAA;EACjC;EAEAkH,SAASzC,OAAOzE,QAAQ;AACtB,WAAOzC,IAAIsG,WAAWY,OAAOzE,MAAAA;EAC/B;EAmBA2D,MAAMc,OAAOvG,MAAMiJ,aAAaC,YAAY;AAC1C,UAAMC,cAAcrD,WAAS,MAAMS,KAAAA;AACnC,UAAM6C,oBAAoBtD,WAAS,MAAMmD,WAAAA;AACzC,UAAMI,cAAc,MAAMrJ;AAE1B1E,WAAOgO,iBAAiBH,aAAa;MAEnC,CAACE,WAAAA,GAAc;QACb7K,OAAO2K,YAAYnJ,IAAK;QACxBuJ,UAAU;MACZ;MAEA,CAACvJ,IAAAA,GAAO;QACNwJ,YAAY;QACZjI,MAAM;AACJ,gBAAMkI,QAAQ,KAAKJ,WAAY;AAC/B,gBAAMK,SAASN,kBAAkBF,UAAW;AAC5C,cAAIS,SAASF,KAAQ,GAAA;AACnB,mBAAOnO,OAAOC,OAAO,CAAA,GAAImO,QAAQD,KAAAA;;AAEnC,iBAAOG,eAAeH,OAAOC,MAAAA;QAC/B;QACArK,IAAIb,OAAO;AACT,eAAK6K,WAAAA,IAAe7K;QACtB;MACF;IACF,CAAA;EACF;EAEA7G,MAAMkS,UAAU;AACdA,aAASC,QAAQ,CAACnS,UAAUA,MAAM,IAAI,CAAA;EACxC;AACF;AAGA,IAAA,WAA+B,oBAAI8O,SAAS;EAC1C1G,aAAa,CAACC,SAAS,CAACA,KAAK0F,WAAW,IAAA;EACxC5F,YAAY,CAACE,SAASA,SAAS;EAC/B4H,OAAO;IACL/H,WAAW;EACb;EACAqI,aAAa;IACXnI,aAAa;IACbD,YAAY;EACd;AACF,GAAG;EAACX;EAAyBuB;EAAsB2C;CAAmB;ACtJ/D,SAAS0G,aAAazC,MAAgB;AAC3C,MAAI,CAACA,QAAQ9M,cAAc8M,KAAKE,IAAI,KAAKhN,cAAc8M,KAAKC,MAAM,GAAG;AACnE,WAAO;;AAGT,UAAQD,KAAKG,QAAQH,KAAKG,QAAQ,MAAM,OACrCH,KAAKK,SAASL,KAAKK,SAAS,MAAM,MACnCL,KAAKE,OAAO,QACZF,KAAKC;AACT;AAKO,SAASyC,aACdlC,KACAmC,MACAC,IACAC,SACAC,QACA;AACA,MAAIC,YAAYJ,KAAKG,MAAO;AAC5B,MAAI,CAACC,WAAW;AACdA,gBAAYJ,KAAKG,MAAO,IAAGtC,IAAIwC,YAAYF,MAAAA,EAAQ7F;AACnD2F,OAAGK,KAAKH,MAAAA;;AAEV,MAAIC,YAAYF,SAAS;AACvBA,cAAUE;;AAEZ,SAAOF;AACT;AASO,SAASK,aACd1C,KACAR,MACAmD,eACAC,OACA;AACAA,UAAQA,SAAS,CAAA;AACjB,MAAIT,OAAOS,MAAMT,OAAOS,MAAMT,QAAQ,CAAA;AACtC,MAAIC,KAAKQ,MAAMC,iBAAiBD,MAAMC,kBAAkB,CAAA;AAExD,MAAID,MAAMpD,SAASA,MAAM;AACvB2C,WAAOS,MAAMT,OAAO,CAAA;AACpBC,SAAKQ,MAAMC,iBAAiB,CAAA;AAC5BD,UAAMpD,OAAOA;;AAGfQ,MAAI8C,KAAI;AAER9C,MAAIR,OAAOA;AACX,MAAI6C,UAAU;AACd,QAAMU,OAAOJ,cAAczR;AAC3B,MAAImN,GAAW2E,GAAWC,MAAcC,OAAwBC;AAChE,OAAK9E,IAAI,GAAGA,IAAI0E,MAAM1E,KAAK;AACzB6E,YAAQP,cAActE,CAAE;AAGxB,QAAI6E,UAAU1L,UAAa0L,UAAU,QAAQ,CAACjJ,QAAQiJ,KAAQ,GAAA;AAC5Db,gBAAUH,aAAalC,KAAKmC,MAAMC,IAAIC,SAASa,KAAAA;eACtCjJ,QAAQiJ,KAAQ,GAAA;AAGzB,WAAKF,IAAI,GAAGC,OAAOC,MAAMhS,QAAQ8R,IAAIC,MAAMD,KAAK;AAC9CG,sBAAcD,MAAMF,CAAE;AAEtB,YAAIG,gBAAgB3L,UAAa2L,gBAAgB,QAAQ,CAAClJ,QAAQkJ,WAAc,GAAA;AAC9Ed,oBAAUH,aAAalC,KAAKmC,MAAMC,IAAIC,SAASc,WAAAA;;MAEnD;;EAEJ;AAEAnD,MAAIoD,QAAO;AAEX,QAAMC,QAAQjB,GAAGlR,SAAS;AAC1B,MAAImS,QAAQV,cAAczR,QAAQ;AAChC,SAAKmN,IAAI,GAAGA,IAAIgF,OAAOhF,KAAK;AAC1B,aAAO8D,KAAKC,GAAG/D,CAAAA,CAAE;IACnB;AACA+D,OAAGkB,OAAO,GAAGD,KAAAA;;AAEf,SAAOhB;AACT;AAUO,SAASkB,YAAYjJ,OAAckJ,OAAe/G,OAAe;AACtE,QAAMyC,mBAAmB5E,MAAMmJ;AAC/B,QAAMC,YAAYjH,UAAU,IAAIxK,KAAKJ,IAAI4K,QAAQ,GAAG,GAAA,IAAO;AAC3D,SAAOxK,KAAK0R,OAAOH,QAAQE,aAAaxE,gBAAAA,IAAoBA,mBAAmBwE;AACjF;AAKO,SAASE,YAAYC,QAA4B7D,KAAgC;AACtF,MAAI,CAACA,OAAO,CAAC6D,QAAQ;AACnB;;AAGF7D,QAAMA,OAAO6D,OAAOC,WAAW,IAAA;AAE/B9D,MAAI8C,KAAI;AAGR9C,MAAI+D,eAAc;AAClB/D,MAAIgE,UAAU,GAAG,GAAGH,OAAOpH,OAAOoH,OAAOI,MAAM;AAC/CjE,MAAIoD,QAAO;AACb;AASO,SAASc,UACdlE,KACAtO,SACAyS,GACAC,GACA;AAEAC,kBAAgBrE,KAAKtO,SAASyS,GAAGC,GAAG,IAAI;AAC1C;AAGO,SAASC,gBACdrE,KACAtO,SACAyS,GACAC,GACAE,GACA;AACA,MAAI3N,MAAc4N,SAAiBC,SAAiB9E,MAAc+E,cAAsBhI,OAAeiI,UAAkBC;AACzH,QAAMhF,QAAQjO,QAAQkT;AACtB,QAAMC,WAAWnT,QAAQmT;AACzB,QAAMC,SAASpT,QAAQoT;AACvB,MAAIC,OAAOF,YAAY,KAAKG;AAE5B,MAAIrF,SAAS,OAAOA,UAAU,UAAU;AACtChJ,WAAOgJ,MAAM/I,SAAQ;AACrB,QAAID,SAAS,+BAA+BA,SAAS,8BAA8B;AACjFqJ,UAAI8C,KAAI;AACR9C,UAAIiF,UAAUd,GAAGC,CAAAA;AACjBpE,UAAIkF,OAAOH,GAAAA;AACX/E,UAAImF,UAAUxF,OAAO,CAACA,MAAMlD,QAAQ,GAAG,CAACkD,MAAMsE,SAAS,GAAGtE,MAAMlD,OAAOkD,MAAMsE,MAAM;AACnFjE,UAAIoD,QAAO;AACX;;;AAIJ,MAAIrI,MAAM+J,MAAWA,KAAAA,UAAU,GAAG;AAChC;;AAGF9E,MAAIoF,UAAS;AAEb,UAAQzF,OAAAA;IAEN;AACE,UAAI2E,GAAG;AACLtE,YAAIqF,QAAQlB,GAAGC,GAAGE,IAAI,GAAGQ,QAAQ,GAAG,GAAG7Q,GAAAA;aAClC;AACL+L,YAAIsF,IAAInB,GAAGC,GAAGU,QAAQ,GAAG7Q,GAAAA;;AAE3B+L,UAAIuF,UAAS;AACb;IACF,KAAK;AACH9I,cAAQ6H,IAAIA,IAAI,IAAIQ;AACpB9E,UAAIwF,OAAOrB,IAAIlS,KAAK+B,IAAI+Q,GAAOtI,IAAAA,OAAO2H,IAAInS,KAAKiD,IAAI6P,GAAOD,IAAAA,MAAAA;AAC1DC,aAAOU;AACPzF,UAAI0F,OAAOvB,IAAIlS,KAAK+B,IAAI+Q,GAAOtI,IAAAA,OAAO2H,IAAInS,KAAKiD,IAAI6P,GAAOD,IAAAA,MAAAA;AAC1DC,aAAOU;AACPzF,UAAI0F,OAAOvB,IAAIlS,KAAK+B,IAAI+Q,GAAOtI,IAAAA,OAAO2H,IAAInS,KAAKiD,IAAI6P,GAAOD,IAAAA,MAAAA;AAC1D9E,UAAIuF,UAAS;AACb;IACF,KAAK;AAQHd,qBAAeK,SAAS;AACxBpF,aAAOoF,SAASL;AAChBF,gBAAUtS,KAAKiD,IAAI6P,MAAMY,UAAcjG,IAAAA;AACvCgF,iBAAWzS,KAAKiD,IAAI6P,MAAMY,UAAAA,KAAerB,IAAIA,IAAI,IAAIG,eAAe/E;AACpE8E,gBAAUvS,KAAK+B,IAAI+Q,MAAMY,UAAcjG,IAAAA;AACvCiF,iBAAW1S,KAAK+B,IAAI+Q,MAAMY,UAAAA,KAAerB,IAAIA,IAAI,IAAIG,eAAe/E;AACpEM,UAAIsF,IAAInB,IAAIO,UAAUN,IAAII,SAASC,cAAcM,MAAMzP,IAAIyP,MAAM5P,OAAAA;AACjE6K,UAAIsF,IAAInB,IAAIQ,UAAUP,IAAIG,SAASE,cAAcM,MAAM5P,SAAS4P,GAAAA;AAChE/E,UAAIsF,IAAInB,IAAIO,UAAUN,IAAII,SAASC,cAAcM,KAAKA,MAAM5P,OAAAA;AAC5D6K,UAAIsF,IAAInB,IAAIQ,UAAUP,IAAIG,SAASE,cAAcM,MAAM5P,SAAS4P,MAAMzP,EAAAA;AACtE0K,UAAIuF,UAAS;AACb;IACF,KAAK;AACH,UAAI,CAACV,UAAU;AACbnF,eAAOzN,KAAK2T,UAAUd;AACtBrI,gBAAQ6H,IAAIA,IAAI,IAAI5E;AACpBM,YAAI6F,KAAK1B,IAAI1H,OAAO2H,IAAI1E,MAAM,IAAIjD,OAAO,IAAIiD,IAAAA;AAC7C;;AAEFqF,aAAOY;IAET,KAAK;AACHjB,iBAAWzS,KAAKiD,IAAI6P,GAAAA,KAAQT,IAAIA,IAAI,IAAIQ;AACxCP,gBAAUtS,KAAKiD,IAAI6P,GAAOD,IAAAA;AAC1BN,gBAAUvS,KAAK+B,IAAI+Q,GAAOD,IAAAA;AAC1BH,iBAAW1S,KAAK+B,IAAI+Q,GAAAA,KAAQT,IAAIA,IAAI,IAAIQ;AACxC9E,UAAIwF,OAAOrB,IAAIO,UAAUN,IAAII,OAAAA;AAC7BxE,UAAI0F,OAAOvB,IAAIQ,UAAUP,IAAIG,OAAAA;AAC7BvE,UAAI0F,OAAOvB,IAAIO,UAAUN,IAAII,OAAAA;AAC7BxE,UAAI0F,OAAOvB,IAAIQ,UAAUP,IAAIG,OAAAA;AAC7BvE,UAAIuF,UAAS;AACb;IACF,KAAK;AACHR,aAAOY;IAET,KAAK;AACHjB,iBAAWzS,KAAKiD,IAAI6P,GAAAA,KAAQT,IAAIA,IAAI,IAAIQ;AACxCP,gBAAUtS,KAAKiD,IAAI6P,GAAOD,IAAAA;AAC1BN,gBAAUvS,KAAK+B,IAAI+Q,GAAOD,IAAAA;AAC1BH,iBAAW1S,KAAK+B,IAAI+Q,GAAAA,KAAQT,IAAIA,IAAI,IAAIQ;AACxC9E,UAAIwF,OAAOrB,IAAIO,UAAUN,IAAII,OAAAA;AAC7BxE,UAAI0F,OAAOvB,IAAIO,UAAUN,IAAII,OAAAA;AAC7BxE,UAAIwF,OAAOrB,IAAIQ,UAAUP,IAAIG,OAAAA;AAC7BvE,UAAI0F,OAAOvB,IAAIQ,UAAUP,IAAIG,OAAAA;AAC7B;IACF,KAAK;AACHG,iBAAWzS,KAAKiD,IAAI6P,GAAAA,KAAQT,IAAIA,IAAI,IAAIQ;AACxCP,gBAAUtS,KAAKiD,IAAI6P,GAAOD,IAAAA;AAC1BN,gBAAUvS,KAAK+B,IAAI+Q,GAAOD,IAAAA;AAC1BH,iBAAW1S,KAAK+B,IAAI+Q,GAAAA,KAAQT,IAAIA,IAAI,IAAIQ;AACxC9E,UAAIwF,OAAOrB,IAAIO,UAAUN,IAAII,OAAAA;AAC7BxE,UAAI0F,OAAOvB,IAAIO,UAAUN,IAAII,OAAAA;AAC7BxE,UAAIwF,OAAOrB,IAAIQ,UAAUP,IAAIG,OAAAA;AAC7BvE,UAAI0F,OAAOvB,IAAIQ,UAAUP,IAAIG,OAAAA;AAC7BQ,aAAOY;AACPjB,iBAAWzS,KAAKiD,IAAI6P,GAAAA,KAAQT,IAAIA,IAAI,IAAIQ;AACxCP,gBAAUtS,KAAKiD,IAAI6P,GAAOD,IAAAA;AAC1BN,gBAAUvS,KAAK+B,IAAI+Q,GAAOD,IAAAA;AAC1BH,iBAAW1S,KAAK+B,IAAI+Q,GAAAA,KAAQT,IAAIA,IAAI,IAAIQ;AACxC9E,UAAIwF,OAAOrB,IAAIO,UAAUN,IAAII,OAAAA;AAC7BxE,UAAI0F,OAAOvB,IAAIO,UAAUN,IAAII,OAAAA;AAC7BxE,UAAIwF,OAAOrB,IAAIQ,UAAUP,IAAIG,OAAAA;AAC7BvE,UAAI0F,OAAOvB,IAAIQ,UAAUP,IAAIG,OAAAA;AAC7B;IACF,KAAK;AACHA,gBAAUD,IAAIA,IAAI,IAAIrS,KAAKiD,IAAI6P,GAAAA,IAAOD;AACtCN,gBAAUvS,KAAK+B,IAAI+Q,GAAOD,IAAAA;AAC1B9E,UAAIwF,OAAOrB,IAAII,SAASH,IAAII,OAAAA;AAC5BxE,UAAI0F,OAAOvB,IAAII,SAASH,IAAII,OAAAA;AAC5B;IACF,KAAK;AACHxE,UAAIwF,OAAOrB,GAAGC,CAAAA;AACdpE,UAAI0F,OAAOvB,IAAIlS,KAAKiD,IAAI6P,GAAAA,KAAQT,IAAIA,IAAI,IAAIQ,SAASV,IAAInS,KAAK+B,IAAI+Q,GAAOD,IAAAA,MAAAA;AACzE;IACF,KAAK;AACH9E,UAAIuF,UAAS;AACb;EACJ;AAEAvF,MAAI8F,KAAI;AACR,MAAIpU,QAAQqU,cAAc,GAAG;AAC3B/F,QAAIgG,OAAM;;AAEd;AASO,SAASC,eACdxT,OACAyT,MACAC,QACA;AACAA,WAASA,UAAU;AAEnB,SAAO,CAACD,QAASzT,SAASA,MAAM0R,IAAI+B,KAAKzV,OAAO0V,UAAU1T,MAAM0R,IAAI+B,KAAKxV,QAAQyV,UACjF1T,MAAM2R,IAAI8B,KAAKnN,MAAMoN,UAAU1T,MAAM2R,IAAI8B,KAAKlN,SAASmN;AACzD;AAEO,SAASC,SAASpG,KAA+BkG,MAAY;AAClElG,MAAI8C,KAAI;AACR9C,MAAIoF,UAAS;AACbpF,MAAI6F,KAAKK,KAAKzV,MAAMyV,KAAKnN,KAAKmN,KAAKxV,QAAQwV,KAAKzV,MAAMyV,KAAKlN,SAASkN,KAAKnN,GAAG;AAC5EiH,MAAIpE,KAAI;AACV;AAEO,SAASyK,WAAWrG,KAA+B;AACxDA,MAAIoD,QAAO;AACb;AAKO,SAASkD,eACdtG,KACAuG,UACA3E,QACA4E,MACAnG,MACA;AACA,MAAI,CAACkG,UAAU;AACb,WAAOvG,IAAI0F,OAAO9D,OAAOuC,GAAGvC,OAAOwC,CAAC;;AAEtC,MAAI/D,SAAS,UAAU;AACrB,UAAMoG,YAAYF,SAASpC,IAAIvC,OAAOuC,KAAK;AAC3CnE,QAAI0F,OAAOe,UAAUF,SAASnC,CAAC;AAC/BpE,QAAI0F,OAAOe,UAAU7E,OAAOwC,CAAC;EAC/B,WAAW/D,SAAS,YAAY,CAAC,CAACmG,MAAM;AACtCxG,QAAI0F,OAAOa,SAASpC,GAAGvC,OAAOwC,CAAC;SAC1B;AACLpE,QAAI0F,OAAO9D,OAAOuC,GAAGoC,SAASnC,CAAC;;AAEjCpE,MAAI0F,OAAO9D,OAAOuC,GAAGvC,OAAOwC,CAAC;AAC/B;AAKO,SAASsC,eACd1G,KACAuG,UACA3E,QACA4E,MACA;AACA,MAAI,CAACD,UAAU;AACb,WAAOvG,IAAI0F,OAAO9D,OAAOuC,GAAGvC,OAAOwC,CAAC;;AAEtCpE,MAAI2G,cACFH,OAAOD,SAASK,OAAOL,SAASM,MAChCL,OAAOD,SAASO,OAAOP,SAASQ,MAChCP,OAAO5E,OAAOiF,OAAOjF,OAAOgF,MAC5BJ,OAAO5E,OAAOmF,OAAOnF,OAAOkF,MAC5BlF,OAAOuC,GACPvC,OAAOwC,CAAC;AACZ;AAEA,SAAS4C,cAAchH,KAA+BiH,MAAsB;AAC1E,MAAIA,KAAKC,aAAa;AACpBlH,QAAIiF,UAAUgC,KAAKC,YAAY,CAAA,GAAID,KAAKC,YAAY,CAAE,CAAA;;AAGxD,MAAI,CAACxU,cAAcuU,KAAKpC,QAAQ,GAAG;AACjC7E,QAAIkF,OAAO+B,KAAKpC,QAAQ;;AAG1B,MAAIoC,KAAKpQ,OAAO;AACdmJ,QAAImH,YAAYF,KAAKpQ;;AAGvB,MAAIoQ,KAAKG,WAAW;AAClBpH,QAAIoH,YAAYH,KAAKG;;AAGvB,MAAIH,KAAKI,cAAc;AACrBrH,QAAIqH,eAAeJ,KAAKI;;AAE5B;AAEA,SAASC,aACPtH,KACAmE,GACAC,GACAmD,MACAN,MACA;AACA,MAAIA,KAAKO,iBAAiBP,KAAKQ,WAAW;AAQxC,UAAMC,UAAU1H,IAAIwC,YAAY+E,IAAAA;AAChC,UAAM9W,OAAO0T,IAAIuD,QAAQC;AACzB,UAAMjX,QAAQyT,IAAIuD,QAAQE;AAC1B,UAAM7O,MAAMqL,IAAIsD,QAAQG;AACxB,UAAM7O,SAASoL,IAAIsD,QAAQI;AAC3B,UAAMC,cAAcd,KAAKO,iBAAiBzO,MAAMC,UAAU,IAAIA;AAE9DgH,QAAIgI,cAAchI,IAAImH;AACtBnH,QAAIoF,UAAS;AACbpF,QAAIjE,YAAYkL,KAAKgB,mBAAmB;AACxCjI,QAAIwF,OAAO/U,MAAMsX,WAAAA;AACjB/H,QAAI0F,OAAOhV,OAAOqX,WAAAA;AAClB/H,QAAIgG,OAAM;;AAEd;AAEA,SAASkC,aAAalI,KAA+BiH,MAAuB;AAC1E,QAAMkB,WAAWnI,IAAImH;AAErBnH,MAAImH,YAAYF,KAAKpQ;AACrBmJ,MAAIoI,SAASnB,KAAKxW,MAAMwW,KAAKlO,KAAKkO,KAAKxK,OAAOwK,KAAKhD,MAAM;AACzDjE,MAAImH,YAAYgB;AAClB;AAKO,SAASE,WACdrI,KACArD,MACAwH,GACAC,GACA5E,MACAyH,OAAuB,CAAA,GACvB;AACA,QAAMqB,QAAQrO,QAAQ0C,IAAAA,IAAQA,OAAO;IAACA;EAAK;AAC3C,QAAMqJ,SAASiB,KAAKsB,cAAc,KAAKtB,KAAKuB,gBAAgB;AAC5D,MAAInK,GAAWkJ;AAEfvH,MAAI8C,KAAI;AACR9C,MAAIR,OAAOA,KAAK8C;AAChB0E,gBAAchH,KAAKiH,IAAAA;AAEnB,OAAK5I,IAAI,GAAGA,IAAIiK,MAAMpX,QAAQ,EAAEmN,GAAG;AACjCkJ,WAAOe,MAAMjK,CAAE;AAEf,QAAI4I,KAAKwB,UAAU;AACjBP,mBAAalI,KAAKiH,KAAKwB,QAAQ;;AAGjC,QAAIzC,QAAQ;AACV,UAAIiB,KAAKuB,aAAa;AACpBxI,YAAIgI,cAAcf,KAAKuB;;AAGzB,UAAI,CAAC9V,cAAcuU,KAAKsB,WAAW,GAAG;AACpCvI,YAAIjE,YAAYkL,KAAKsB;;AAGvBvI,UAAI0I,WAAWnB,MAAMpD,GAAGC,GAAG6C,KAAK0B,QAAQ;;AAG1C3I,QAAI4I,SAASrB,MAAMpD,GAAGC,GAAG6C,KAAK0B,QAAQ;AACtCrB,iBAAatH,KAAKmE,GAAGC,GAAGmD,MAAMN,IAAAA;AAE9B7C,SAAKyE,OAAOrJ,KAAKI,UAAU;EAC7B;AAEAI,MAAIoD,QAAO;AACb;AAOO,SAAS0F,mBACd9I,KACA6F,MACA;AACA,QAAM,EAAC1B,GAAGC,GAAGE,GAAGyE,GAAGjE,OAAM,IAAIe;AAG7B7F,MAAIsF,IAAInB,IAAIW,OAAOkE,SAAS5E,IAAIU,OAAOkE,SAASlE,OAAOkE,SAAS,MAAM1T,IAAIA,IAAI,IAAI;AAGlF0K,MAAI0F,OAAOvB,GAAGC,IAAI2E,IAAIjE,OAAOmE,UAAU;AAGvCjJ,MAAIsF,IAAInB,IAAIW,OAAOmE,YAAY7E,IAAI2E,IAAIjE,OAAOmE,YAAYnE,OAAOmE,YAAY3T,IAAIH,SAAS,IAAI;AAG9F6K,MAAI0F,OAAOvB,IAAIG,IAAIQ,OAAOoE,aAAa9E,IAAI2E,CAAAA;AAG3C/I,MAAIsF,IAAInB,IAAIG,IAAIQ,OAAOoE,aAAa9E,IAAI2E,IAAIjE,OAAOoE,aAAapE,OAAOoE,aAAa/T,SAAS,GAAG,IAAI;AAGpG6K,MAAI0F,OAAOvB,IAAIG,GAAGF,IAAIU,OAAOqE,QAAQ;AAGrCnJ,MAAIsF,IAAInB,IAAIG,IAAIQ,OAAOqE,UAAU/E,IAAIU,OAAOqE,UAAUrE,OAAOqE,UAAU,GAAG,CAAChU,SAAS,IAAI;AAGxF6K,MAAI0F,OAAOvB,IAAIW,OAAOkE,SAAS5E,CAAAA;AACjC;ACxgBA,IAAMgF,cAAc;AACpB,IAAMC,aAAa;AAcZ,SAASC,aAAa5S,OAAwBgJ,MAAsB;AACzE,QAAM6J,WAAW,KAAK7S,OAAO8S,MAAMJ,WAAAA;AACnC,MAAI,CAACG,WAAWA,QAAQ,CAAA,MAAO,UAAU;AACvC,WAAO7J,OAAO;;AAGhBhJ,UAAQ,CAAC6S,QAAQ,CAAE;AAEnB,UAAQA,QAAQ,CAAE,GAAA;IAChB,KAAK;AACH,aAAO7S;IACT,KAAK;AACHA,eAAS;AACT;EAGJ;AAEA,SAAOgJ,OAAOhJ;AAChB;AAEA,IAAM+S,eAAe,CAAC9Q,MAAe,CAACA,KAAK;AAQpC,SAAS+Q,kBAAkBhT,OAAwCiT,OAA0C;AAClH,QAAMC,MAAM,CAAA;AACZ,QAAMC,WAAWhI,SAAS8H,KAAAA;AAC1B,QAAMxL,OAAO0L,WAAWrW,OAAO2K,KAAKwL,KAAAA,IAASA;AAC7C,QAAMG,OAAOjI,SAASnL,KAAAA,IAClBmT,WACEE,CAAAA,SAAQjI,eAAepL,MAAMqT,IAAAA,GAAOrT,MAAMiT,MAAMI,IAAK,CAAA,CAAC,IACtDA,CAAAA,SAAQrT,MAAMqT,IAAAA,IAChB,MAAMrT;AAEV,aAAWqT,QAAQ5L,MAAM;AACvByL,QAAIG,IAAAA,IAAQN,aAAaK,KAAKC,IAAAA,CAAAA;EAChC;AACA,SAAOH;AACT;AAUO,SAASI,OAAOtT,OAA8B;AACnD,SAAOgT,kBAAkBhT,OAAO;IAACqC,KAAK;IAAKrI,OAAO;IAAKsI,QAAQ;IAAKvI,MAAM;EAAG,CAAA;AAC/E;AASO,SAASwZ,cAAcvT,OAA6B;AACzD,SAAOgT,kBAAkBhT,OAAO;IAAC;IAAW;IAAY;IAAc;EAAc,CAAA;AACtF;AAUO,SAASwT,UAAUxT,OAAkC;AAC1D,QAAMyT,MAAMH,OAAOtT,KAAAA;AAEnByT,MAAI1N,QAAQ0N,IAAI1Z,OAAO0Z,IAAIzZ;AAC3ByZ,MAAIlG,SAASkG,IAAIpR,MAAMoR,IAAInR;AAE3B,SAAOmR;AACT;AAUO,SAASC,OAAO1Y,SAA4B2Y,UAA8B;AAC/E3Y,YAAUA,WAAW,CAAA;AACrB2Y,aAAWA,YAAY/S,SAASkI;AAEhC,MAAIE,OAAOoC,eAAepQ,QAAQgO,MAAM2K,SAAS3K,IAAI;AAErD,MAAI,OAAOA,SAAS,UAAU;AAC5BA,WAAO4K,SAAS5K,MAAM,EAAA;;AAExB,MAAIC,QAAQmC,eAAepQ,QAAQiO,OAAO0K,SAAS1K,KAAK;AACxD,MAAIA,SAAS,EAAE,KAAKA,OAAO6J,MAAMH,UAAa,GAAA;AAC5CkB,YAAQC,KAAK,oCAAoC7K,QAAQ,GAAA;AACzDA,YAAQnI;;AAGV,QAAMgI,OAAO;IACXC,QAAQqC,eAAepQ,QAAQ+N,QAAQ4K,SAAS5K,MAAM;IACtDG,YAAY0J,aAAaxH,eAAepQ,QAAQkO,YAAYyK,SAASzK,UAAU,GAAGF,IAAAA;IAClFA;IACAC;IACAE,QAAQiC,eAAepQ,QAAQmO,QAAQwK,SAASxK,MAAM;IACtDyC,QAAQ;EACV;AAEA9C,OAAK8C,SAASL,aAAazC,IAAAA;AAC3B,SAAOA;AACT;AAaO,SAASiL,QAAQC,QAAwBvL,SAAkB/E,QAAgBuQ,MAA+B;AAC/G,MAAIC,YAAY;AAChB,MAAIvM,GAAW0E,MAAcrM;AAE7B,OAAK2H,IAAI,GAAG0E,OAAO2H,OAAOxZ,QAAQmN,IAAI0E,MAAM,EAAE1E,GAAG;AAC/C3H,YAAQgU,OAAOrM,CAAE;AACjB,QAAI3H,UAAUc,QAAW;AACvB;;AAEF,QAAI2H,YAAY3H,UAAa,OAAOd,UAAU,YAAY;AACxDA,cAAQA,MAAMyI,OAAAA;AACdyL,kBAAY;;AAEd,QAAIxQ,WAAU5C,UAAayC,QAAQvD,KAAQ,GAAA;AACzCA,cAAQA,MAAM0D,SAAQ1D,MAAMxF,MAAM;AAClC0Z,kBAAY;;AAEd,QAAIlU,UAAUc,QAAW;AACvB,UAAImT,QAAQ,CAACC,WAAW;AACtBD,aAAKC,YAAY;;AAEnB,aAAOlU;;EAEX;AACF;AAQO,SAASmU,UAAUC,QAAuCjP,OAAwBH,aAAsB;AAC7G,QAAM,EAAC9J,KAAKC,IAAAA,IAAOiZ;AACnB,QAAMC,SAASC,YAAYnP,QAAQhK,MAAMD,OAAO,CAAA;AAChD,QAAMqZ,WAAW,CAACvU,OAAewU,QAAgBxP,eAAehF,UAAU,IAAI,IAAIA,QAAQwU;AAC1F,SAAO;IACLtZ,KAAKqZ,SAASrZ,KAAK,CAACK,KAAKyI,IAAIqQ,MAAAA,CAAAA;IAC7BlZ,KAAKoZ,SAASpZ,KAAKkZ,MAAAA;EACrB;AACF;AAUO,SAASI,cAAcC,eAAuBjM,SAAiB;AACpE,SAAO3L,OAAOC,OAAOD,OAAOsK,OAAOsN,aAAgBjM,GAAAA,OAAAA;AACrD;ACnLO,SAASkM,gBAIdC,QACAC,WAAW;EAAC;GACZC,YACAnB,UACAoB,YAAY,MAAMH,OAAO,CAAA,GACzB;AACA,QAAMI,kBAAkBF,cAAcF;AACtC,MAAI,OAAOjB,aAAa,aAAa;AACnCA,eAAWsB,SAAS,aAAaL,MAAAA;;AAEnC,QAAM1I,QAA6B;IACjC,CAACgJ,OAAOC,WAAW,GAAG;IACtBC,YAAY;IACZC,SAAST;IACTU,aAAaN;IACb3T,WAAWsS;IACX4B,YAAYR;IACZvK,UAAU,CAACzC,UAAqB4M,gBAAgB;MAAC5M;MAAU6M,GAAAA;IAAO,GAAEC,UAAUG,iBAAiBrB,QAAAA;EACjG;AACA,SAAO,IAAI6B,MAAMtJ,OAAO;;;;IAItBuJ,eAAevK,QAAQmI,MAAc;AACnC,aAAOnI,OAAOmI,IAAK;AACnB,aAAOnI,OAAOwK;AACd,aAAOd,OAAO,CAAA,EAAGvB,IAAAA;AACjB,aAAO;IACT;;;;IAKAtQ,IAAImI,QAAQmI,MAAc;AACxB,aAAOsC,QAAQzK,QAAQmI,MACrB,MAAMuC,qBAAqBvC,MAAMwB,UAAUD,QAAQ1J,MAAAA,CAAAA;IACvD;;;;;IAMA2K,yBAAyB3K,QAAQmI,MAAM;AACrC,aAAOyC,QAAQD,yBAAyB3K,OAAOmK,QAAQ,CAAA,GAAIhC,IAAAA;IAC7D;;;;IAKA0C,iBAAiB;AACf,aAAOD,QAAQC,eAAenB,OAAO,CAAE,CAAA;IACzC;;;;IAKAoB,IAAI9K,QAAQmI,MAAc;AACxB,aAAO4C,qBAAqB/K,MAAQtG,EAAAA,SAASyO,IAAAA;IAC/C;;;;IAKA6C,QAAQhL,QAAQ;AACd,aAAO+K,qBAAqB/K,MAAAA;IAC9B;;;;IAKArK,IAAIqK,QAAQmI,MAAcrT,OAAO;AAC/B,YAAMmW,UAAUjL,OAAOkL,aAAalL,OAAOkL,WAAWrB,UAAU;AAChE7J,aAAOmI,IAAAA,IAAQ8C,QAAQ9C,IAAK,IAAGrT;AAC/B,aAAOkL,OAAOwK;AACd,aAAO;IACT;EACF,CAAA;AACF;AAUO,SAASW,eAIdC,OACA7N,SACA8N,UACAC,oBACA;AACA,QAAMtK,QAA4B;IAChCkJ,YAAY;IACZqB,QAAQH;IACRI,UAAUjO;IACVkO,WAAWJ;IACXK,QAAQ,oBAAIC,IAAAA;IACZ1O,cAAcA,aAAamO,OAAOE,kBAAAA;IAClCM,YAAY,CAACxN,QAAmB+M,eAAeC,OAAOhN,KAAKiN,UAAUC,kBAAAA;IACrEhM,UAAU,CAACzC,UAAqBsO,eAAeC,MAAM9L,SAASzC,KAAAA,GAAQU,SAAS8N,UAAUC,kBAAAA;EAC3F;AACA,SAAO,IAAIhB,MAAMtJ,OAAO;;;;IAItBuJ,eAAevK,QAAQmI,MAAM;AAC3B,aAAOnI,OAAOmI,IAAK;AACnB,aAAOiD,MAAMjD,IAAK;AAClB,aAAO;IACT;;;;IAKAtQ,IAAImI,QAAQmI,MAAc0D,UAAU;AAClC,aAAOpB,QAAQzK,QAAQmI,MACrB,MAAM2D,oBAAoB9L,QAAQmI,MAAM0D,QAAAA,CAAAA;IAC5C;;;;;IAMAlB,yBAAyB3K,QAAQmI,MAAM;AACrC,aAAOnI,OAAO/C,aAAa8O,UACvBnB,QAAQE,IAAIM,OAAOjD,IAAQ,IAAA;QAACrI,YAAY;QAAMkM,cAAc;MAAI,IAAIpW,SACpEgV,QAAQD,yBAAyBS,OAAOjD,IAAK;IACnD;;;;IAKA0C,iBAAiB;AACf,aAAOD,QAAQC,eAAeO,KAAAA;IAChC;;;;IAKAN,IAAI9K,QAAQmI,MAAM;AAChB,aAAOyC,QAAQE,IAAIM,OAAOjD,IAAAA;IAC5B;;;;IAKA6C,UAAU;AACR,aAAOJ,QAAQI,QAAQI,KAAAA;IACzB;;;;IAKAzV,IAAIqK,QAAQmI,MAAMrT,OAAO;AACvBsW,YAAMjD,IAAAA,IAAQrT;AACd,aAAOkL,OAAOmI,IAAK;AACnB,aAAO;IACT;EACF,CAAA;AACF;AAKO,SAASlL,aACdmO,OACA1V,YAA+B;EAACuW,YAAY;EAAMC,WAAW;AAAI,GACrD;AACZ,QAAM,EAAC7V,cAAcX,UAASuW,YAAY7V,aAAaV,UAASwW,WAAWC,WAAWzW,UAASqW,QAAO,IAAIX;AAC1G,SAAO;IACLW,SAASI;IACTF,YAAY5V;IACZ6V,WAAW9V;IACXgW,cAAcC,WAAWhW,WAAAA,IAAeA,cAAc,MAAMA;IAC5DiW,aAAaD,WAAWjW,UAAAA,IAAcA,aAAa,MAAMA;EAC3D;AACF;AAEA,IAAMmW,UAAU,CAACC,QAAgBlW,SAAiBkW,SAASA,SAASC,YAAYnW,IAAAA,IAAQA;AACxF,IAAMoW,mBAAmB,CAACvE,MAAcrT,UAAmBmL,SAASnL,KAAAA,KAAUqT,SAAS,eACpFvW,OAAOiZ,eAAe/V,KAAW,MAAA,QAAQA,MAAMkI,gBAAgBpL;AAElE,SAAS6Y,QACPzK,QACAmI,MACAU,UACA;AACA,MAAIjX,OAAO+a,UAAUC,eAAe5e,KAAKgS,QAAQmI,IAASA,KAAAA,SAAS,eAAe;AAChF,WAAOnI,OAAOmI,IAAK;;AAGrB,QAAMrT,QAAQ+T,SAAAA;AAEd7I,SAAOmI,IAAAA,IAAQrT;AACf,SAAOA;AACT;AAEA,SAASgX,oBACP9L,QACAmI,MACA0D,UACA;AACA,QAAM,EAACN,QAAQC,UAAUC,WAAWxO,cAAcd,aAAW,IAAI6D;AACjE,MAAIlL,QAAQyW,OAAOpD,IAAAA;AAGnB,MAAIkE,WAAWvX,KAAAA,KAAUqH,aAAYiQ,aAAajE,IAAO,GAAA;AACvDrT,YAAQ+X,mBAAmB1E,MAAMrT,OAAOkL,QAAQ6L,QAAAA;;AAElD,MAAIxT,QAAQvD,KAAAA,KAAUA,MAAMxF,QAAQ;AAClCwF,YAAQgY,cAAc3E,MAAMrT,OAAOkL,QAAQ7D,aAAYmQ,WAAW;;AAEpE,MAAII,iBAAiBvE,MAAMrT,KAAQ,GAAA;AAEjCA,YAAQqW,eAAerW,OAAO0W,UAAUC,aAAaA,UAAUtD,IAAAA,GAAOhM,YAAAA;;AAExE,SAAOrH;AACT;AAEA,SAAS+X,mBACP1E,MACA4E,UACA/M,QACA6L,UACA;AACA,QAAM,EAACN,QAAQC,UAAUC,WAAWC,OAAM,IAAI1L;AAC9C,MAAI0L,OAAOZ,IAAI3C,IAAO,GAAA;AACpB,UAAM,IAAI6E,MAAM,yBAAyBC,MAAMlX,KAAK2V,MAAAA,EAAQwB,KAAK,IAAQ,IAAA,OAAO/E,IAAM;;AAExFuD,SAAOpC,IAAInB,IAAAA;AACX,MAAIrT,QAAQiY,SAASvB,UAAUC,aAAaI,QAAAA;AAC5CH,SAAOyB,OAAOhF,IAAAA;AACd,MAAIuE,iBAAiBvE,MAAMrT,KAAQ,GAAA;AAEjCA,YAAQsY,kBAAkB7B,OAAOpB,SAASoB,QAAQpD,MAAMrT,KAAAA;;AAE1D,SAAOA;AACT;AAEA,SAASgY,cACP3E,MACArT,OACAkL,QACAsM,aACA;AACA,QAAM,EAACf,QAAQC,UAAUC,WAAWxO,cAAcd,aAAW,IAAI6D;AAEjE,MAAI,OAAOwL,SAAShT,UAAU,eAAe8T,YAAYnE,IAAO,GAAA;AAC9D,WAAOrT,MAAM0W,SAAShT,QAAQ1D,MAAMxF,MAAM;EAC5C,WAAW2Q,SAASnL,MAAM,CAAA,CAAE,GAAG;AAE7B,UAAMuY,MAAMvY;AACZ,UAAM4U,SAAS6B,OAAOpB,QAAQmD,OAAOrb,CAAAA,MAAKA,MAAMob,GAAAA;AAChDvY,YAAQ,CAAA;AACR,eAAWyY,QAAQF,KAAK;AACtB,YAAMG,WAAWJ,kBAAkB1D,QAAQ6B,QAAQpD,MAAMoF,IAAAA;AACzDzY,YAAM+L,KAAKsK,eAAeqC,UAAUhC,UAAUC,aAAaA,UAAUtD,IAAAA,GAAOhM,YAAAA,CAAAA;IAC9E;;AAEF,SAAOrH;AACT;AAEA,SAAS2Y,gBACPhF,UACAN,MACArT,OACA;AACA,SAAOuX,WAAW5D,QAAAA,IAAYA,SAASN,MAAMrT,KAAAA,IAAS2T;AACxD;AAEA,IAAMrM,WAAW,CAACE,KAAwBoR,WAAsBpR,QAAQ,OAAOoR,SAC3E,OAAOpR,QAAQ,WAAWqR,iBAAiBD,QAAQpR,GAAAA,IAAO1G;AAE9D,SAASgY,UACPjY,MACAkY,cACAvR,KACAwR,gBACAhZ,OACA;AACA,aAAW4Y,UAAUG,cAAc;AACjC,UAAMhR,QAAQT,SAASE,KAAKoR,MAAAA;AAC5B,QAAI7Q,OAAO;AACTlH,MAAAA,KAAI2T,IAAIzM,KAAAA;AACR,YAAM4L,WAAWgF,gBAAgB5Q,MAAM1G,WAAWmG,KAAKxH,KAAAA;AACvD,UAAI,OAAO2T,aAAa,eAAeA,aAAanM,OAAOmM,aAAaqF,gBAAgB;AAGtF,eAAOrF;;eAEA5L,UAAU,SAAS,OAAOiR,mBAAmB,eAAexR,QAAQwR,gBAAgB;AAG7F,aAAO;;EAEX;AACA,SAAO;AACT;AAEA,SAASV,kBACPS,cACAL,UACArF,MACArT,OACA;AACA,QAAM8U,aAAa4D,SAASpD;AAC5B,QAAM3B,WAAWgF,gBAAgBD,SAASrX,WAAWgS,MAAMrT,KAAAA;AAC3D,QAAMiZ,YAAY;IAAIF,GAAAA;IAAiBjE,GAAAA;EAAW;AAClD,QAAMjU,OAAM,oBAAIgW,IAAAA;AAChBhW,EAAAA,KAAI2T,IAAIxU,KAAAA;AACR,MAAIwH,MAAM0R,iBAAiBrY,MAAKoY,WAAW5F,MAAMM,YAAYN,MAAMrT,KAAAA;AACnE,MAAIwH,QAAQ,MAAM;AAChB,WAAO;;AAET,MAAI,OAAOmM,aAAa,eAAeA,aAAaN,MAAM;AACxD7L,UAAM0R,iBAAiBrY,MAAKoY,WAAWtF,UAAUnM,KAAKxH,KAAAA;AACtD,QAAIwH,QAAQ,MAAM;AAChB,aAAO;;;AAGX,SAAOmN,gBAAgBwD,MAAMlX,KAAKJ,IAAM,GAAA;IAAC;EAAG,GAAEiU,YAAYnB,UACxD,MAAMwF,aAAaT,UAAUrF,MAAgBrT,KAAAA,CAAAA;AACjD;AAEA,SAASkZ,iBACPrY,MACAoY,WACAzR,KACAmM,UACA8E,MACA;AACA,SAAOjR,KAAK;AACVA,UAAMsR,UAAUjY,MAAKoY,WAAWzR,KAAKmM,UAAU8E,IAAAA;EACjD;AACA,SAAOjR;AACT;AAEA,SAAS2R,aACPT,UACArF,MACArT,OACA;AACA,QAAM4Y,SAASF,SAASnD,WAAU;AAClC,MAAI,EAAElC,QAAQuF,SAAS;AACrBA,WAAOvF,IAAK,IAAG,CAAA;;AAEjB,QAAMnI,SAAS0N,OAAOvF,IAAK;AAC3B,MAAI9P,QAAQ2H,MAAWC,KAAAA,SAASnL,KAAQ,GAAA;AAEtC,WAAOA;;AAET,SAAOkL,UAAU,CAAA;AACnB;AAEA,SAAS0K,qBACPvC,MACAwB,UACAD,QACA0B,OACA;AACA,MAAItW;AACJ,aAAW0X,UAAU7C,UAAU;AAC7B7U,YAAQiV,SAASwC,QAAQC,QAAQrE,IAAOuB,GAAAA,MAAAA;AACxC,QAAI,OAAO5U,UAAU,aAAa;AAChC,aAAO4X,iBAAiBvE,MAAMrT,KAC1BsY,IAAAA,kBAAkB1D,QAAQ0B,OAAOjD,MAAMrT,KAAAA,IACvCA;;EAER;AACF;AAEA,SAASiV,SAASzN,KAAaoN,QAAqB;AAClD,aAAW7M,SAAS6M,QAAQ;AAC1B,QAAI,CAAC7M,OAAO;AACV;;AAEF,UAAM/H,QAAQ+H,MAAMP,GAAI;AACxB,QAAI,OAAOxH,UAAU,aAAa;AAChC,aAAOA;;EAEX;AACF;AAEA,SAASiW,qBAAqB/K,QAAuB;AACnD,MAAIzD,OAAOyD,OAAOwK;AAClB,MAAI,CAACjO,MAAM;AACTA,WAAOyD,OAAOwK,QAAQ0D,yBAAyBlO,OAAOmK,OAAO;;AAE/D,SAAO5N;AACT;AAEA,SAAS2R,yBAAyBxE,QAAqB;AACrD,QAAM/T,OAAM,oBAAIgW,IAAAA;AAChB,aAAW9O,SAAS6M,QAAQ;AAC1B,eAAWpN,OAAO1K,OAAO2K,KAAKM,KAAOyQ,EAAAA,OAAO3Q,CAAAA,MAAK,CAACA,EAAEX,WAAW,GAAO,CAAA,GAAA;AACpErG,MAAAA,KAAI2T,IAAIhN,GAAAA;IACV;EACF;AACA,SAAO2Q,MAAMlX,KAAKJ,IAAAA;AACpB;AC7aA,IAAMwY,UAAUC,OAAOD,WAAW;AAGlC,IAAME,WAAW,CAACC,QAAuBC,MAAmCA,IAAID,OAAOE,UAAU,CAACF,OAAOC,CAAE,EAACE,QAAQH,OAAOC,CAAE;AAC7H,IAAMG,eAAe,CAACC,cAAyBA,cAAc,MAAM,MAAM;AAElE,SAASC,YACdC,YACAC,aACAC,YACAC,GAIE;AAMF,QAAMC,WAAWJ,WAAWJ,OAAOK,cAAcD;AACjD,QAAMK,UAAUJ;AAChB,QAAMK,OAAOJ,WAAWN,OAAOK,cAAcC;AAC7C,QAAMK,MAAMC,sBAAsBH,SAASD,QAAAA;AAC3C,QAAMK,MAAMD,sBAAsBF,MAAMD,OAAAA;AAExC,MAAIK,MAAMH,OAAOA,MAAME;AACvB,MAAIE,MAAMF,OAAOF,MAAME;AAGvBC,QAAME,MAAMF,GAAO,IAAA,IAAIA;AACvBC,QAAMC,MAAMD,GAAO,IAAA,IAAIA;AAEvB,QAAME,KAAKV,IAAIO;AACf,QAAMI,KAAKX,IAAIQ;AAEf,SAAO;IACLP,UAAU;MACRW,GAAGV,QAAQU,IAAIF,MAAMP,KAAKS,IAAIX,SAASW;MACvCC,GAAGX,QAAQW,IAAIH,MAAMP,KAAKU,IAAIZ,SAASY;IACzC;IACAV,MAAM;MACJS,GAAGV,QAAQU,IAAID,MAAMR,KAAKS,IAAIX,SAASW;MACvCC,GAAGX,QAAQW,IAAIF,MAAMR,KAAKU,IAAIZ,SAASY;IACzC;EACF;AACF;AAKA,SAASC,eAAexB,QAAuByB,QAAkBC,IAAc;AAC7E,QAAMC,YAAY3B,OAAOE;AAEzB,MAAI0B,QAAgBC,OAAeC,MAAcC,kBAA0BC;AAC3E,MAAIC,aAAalC,SAASC,QAAQ,CAAA;AAClC,WAASC,IAAI,GAAGA,IAAI0B,YAAY,GAAG,EAAE1B,GAAG;AACtC+B,mBAAeC;AACfA,iBAAalC,SAASC,QAAQC,IAAI,CAAA;AAClC,QAAI,CAAC+B,gBAAgB,CAACC,YAAY;AAChC;;AAGF,QAAIC,aAAaT,OAAOxB,CAAE,GAAE,GAAGJ,OAAU,GAAA;AACvC6B,SAAGzB,CAAE,IAAGyB,GAAGzB,IAAI,CAAA,IAAK;AACpB;;AAGF2B,aAASF,GAAGzB,CAAAA,IAAKwB,OAAOxB,CAAE;AAC1B4B,YAAQH,GAAGzB,IAAI,CAAA,IAAKwB,OAAOxB,CAAE;AAC7B8B,uBAAmBI,KAAKC,IAAIR,QAAQ,CAAA,IAAKO,KAAKC,IAAIP,OAAO,CAAA;AACzD,QAAIE,oBAAoB,GAAG;AACzB;;AAGFD,WAAO,IAAIK,KAAKE,KAAKN,gBAAAA;AACrBL,OAAGzB,CAAE,IAAG2B,SAASE,OAAOL,OAAOxB,CAAE;AACjCyB,OAAGzB,IAAI,CAAE,IAAG4B,QAAQC,OAAOL,OAAOxB,CAAE;EACtC;AACF;AAEA,SAASqC,gBAAgBtC,QAAuB0B,IAAcrB,YAAuB,KAAK;AACxF,QAAMkC,YAAYnC,aAAaC,SAAAA;AAC/B,QAAMsB,YAAY3B,OAAOE;AACzB,MAAIsC,OAAeC,aAAkCT;AACrD,MAAIC,aAAalC,SAASC,QAAQ,CAAA;AAElC,WAASC,IAAI,GAAGA,IAAI0B,WAAW,EAAE1B,GAAG;AAClCwC,kBAAcT;AACdA,mBAAeC;AACfA,iBAAalC,SAASC,QAAQC,IAAI,CAAA;AAClC,QAAI,CAAC+B,cAAc;AACjB;;AAGF,UAAMU,SAASV,aAAa3B,SAAU;AACtC,UAAMsC,SAASX,aAAaO,SAAU;AACtC,QAAIE,aAAa;AACfD,eAASE,SAASD,YAAYpC,SAAAA,KAAc;AAC5C2B,mBAAa,MAAM3B,WAAW,IAAIqC,SAASF;AAC3CR,mBAAa,MAAMO,WAAW,IAAII,SAASH,QAAQd,GAAGzB,CAAE;;AAE1D,QAAIgC,YAAY;AACdO,eAASP,WAAW5B,SAAU,IAAGqC,UAAU;AAC3CV,mBAAa,MAAM3B,WAAW,IAAIqC,SAASF;AAC3CR,mBAAa,MAAMO,WAAW,IAAII,SAASH,QAAQd,GAAGzB,CAAE;;EAE5D;AACF;AAQO,SAAS2C,oBAAoB5C,QAAuBK,YAAuB,KAAK;AACrF,QAAMkC,YAAYnC,aAAaC,SAAAA;AAC/B,QAAMsB,YAAY3B,OAAOE;AACzB,QAAMuB,SAAmBoB,MAAMlB,SAAWmB,EAAAA,KAAK,CAAA;AAC/C,QAAMpB,KAAemB,MAAMlB,SAAAA;AAG3B,MAAI1B,GAAGwC,aAAkCT;AACzC,MAAIC,aAAalC,SAASC,QAAQ,CAAA;AAElC,OAAKC,IAAI,GAAGA,IAAI0B,WAAW,EAAE1B,GAAG;AAC9BwC,kBAAcT;AACdA,mBAAeC;AACfA,iBAAalC,SAASC,QAAQC,IAAI,CAAA;AAClC,QAAI,CAAC+B,cAAc;AACjB;;AAGF,QAAIC,YAAY;AACd,YAAMc,aAAad,WAAW5B,SAAAA,IAAa2B,aAAa3B,SAAU;AAGlEoB,aAAOxB,CAAE,IAAG8C,eAAe,KAAKd,WAAWM,SAAAA,IAAaP,aAAaO,SAAAA,KAAcQ,aAAa;;AAElGrB,OAAGzB,CAAE,IAAG,CAACwC,cAAchB,OAAOxB,CAAE,IAC5B,CAACgC,aAAaR,OAAOxB,IAAI,CAAA,IACtB+C,KAAKvB,OAAOxB,IAAI,CAAA,CAAE,MAAM+C,KAAKvB,OAAOxB,CAAE,CAAA,IAAK,KACzCwB,OAAOxB,IAAI,CAAA,IAAKwB,OAAOxB,CAAE,KAAI;EACxC;AAEAuB,iBAAexB,QAAQyB,QAAQC,EAAAA;AAE/BY,kBAAgBtC,QAAQ0B,IAAIrB,SAAAA;AAC9B;AAEA,SAAS4C,gBAAgBC,IAAYC,KAAaC,KAAa;AAC7D,SAAOjB,KAAKiB,IAAIjB,KAAKgB,IAAID,IAAIE,GAAMD,GAAAA,GAAAA;AACrC;AAEA,SAASE,gBAAgBrD,QAAuBsD,MAAiB;AAC/D,MAAIrD,GAAGsD,MAAMC,OAAOC,QAAQC;AAC5B,MAAIC,aAAaC,eAAe5D,OAAO,CAAA,GAAIsD,IAAAA;AAC3C,OAAKrD,IAAI,GAAGsD,OAAOvD,OAAOE,QAAQD,IAAIsD,MAAM,EAAEtD,GAAG;AAC/CyD,iBAAaD;AACbA,aAASE;AACTA,iBAAa1D,IAAIsD,OAAO,KAAKK,eAAe5D,OAAOC,IAAI,CAAA,GAAIqD,IAAAA;AAC3D,QAAI,CAACG,QAAQ;AACX;;AAEFD,YAAQxD,OAAOC,CAAE;AACjB,QAAIyD,YAAY;AACdF,YAAMK,OAAOZ,gBAAgBO,MAAMK,MAAMP,KAAKQ,MAAMR,KAAKS,KAAK;AAC9DP,YAAMQ,OAAOf,gBAAgBO,MAAMQ,MAAMV,KAAKW,KAAKX,KAAKY,MAAM;;AAEhE,QAAIP,YAAY;AACdH,YAAMW,OAAOlB,gBAAgBO,MAAMW,MAAMb,KAAKQ,MAAMR,KAAKS,KAAK;AAC9DP,YAAMY,OAAOnB,gBAAgBO,MAAMY,MAAMd,KAAKW,KAAKX,KAAKY,MAAM;;EAElE;AACF;AAKO,SAASG,2BACdrE,QACAsE,SACAhB,MACAiB,MACAlE,WACA;AACA,MAAIJ,GAAWsD,MAAcC,OAAoBgB;AAGjD,MAAIF,QAAQG,UAAU;AACpBzE,aAASA,OAAO0E,OAAO,CAACxB,OAAO,CAACA,GAAG/C,IAAI;;AAGzC,MAAImE,QAAQK,2BAA2B,YAAY;AACjD/B,wBAAoB5C,QAAQK,SAAAA;SACvB;AACL,QAAIuE,OAAOL,OAAOvE,OAAOA,OAAOE,SAAS,CAAE,IAAGF,OAAO,CAAE;AACvD,SAAKC,IAAI,GAAGsD,OAAOvD,OAAOE,QAAQD,IAAIsD,MAAM,EAAEtD,GAAG;AAC/CuD,cAAQxD,OAAOC,CAAE;AACjBuE,sBAAgBlE,YACdsE,MACApB,OACAxD,OAAOmC,KAAKgB,IAAIlD,IAAI,GAAGsD,QAAQgB,OAAO,IAAI,EAAA,IAAMhB,IAAK,GACrDe,QAAQO,OAAO;AAEjBrB,YAAMK,OAAOW,cAAc7D,SAASW;AACpCkC,YAAMQ,OAAOQ,cAAc7D,SAASY;AACpCiC,YAAMW,OAAOK,cAAc3D,KAAKS;AAChCkC,YAAMY,OAAOI,cAAc3D,KAAKU;AAChCqD,aAAOpB;IACT;;AAGF,MAAIc,QAAQjB,iBAAiB;AAC3BA,oBAAgBrD,QAAQsD,IAAAA;;AAE5B;ACtNO,SAASwB,kBAA2B;AACzC,SAAO,OAAOC,WAAW,eAAe,OAAOC,aAAa;AAC9D;AAKO,SAASC,eAAeC,SAA+C;AAC5E,MAAIC,SAASD,QAAQE;AACrB,MAAID,UAAUA,OAAOE,SAAQ,MAAO,uBAAuB;AACzDF,aAAUA,OAAsBG;;AAElC,SAAOH;AACT;AAOA,SAASI,cAAcC,YAA6BC,MAAmBC,gBAAwB;AAC7F,MAAIC;AACJ,MAAI,OAAOH,eAAe,UAAU;AAClCG,oBAAgBC,SAASJ,YAAY,EAAA;AAErC,QAAIA,WAAWK,QAAQ,GAAA,MAAS,IAAI;AAElCF,sBAAgB,gBAAiB,MAAOF,KAAKL,WAAWM,cAAe;;SAEpE;AACLC,oBAAgBH;;AAGlB,SAAOG;AACT;AAEA,IAAMG,mBAAmB,CAACC,YACxBA,QAAQC,cAAcC,YAAYH,iBAAiBC,SAAS,IAAI;AAE3D,SAASG,SAASC,IAAiBC,UAA0B;AAClE,SAAON,iBAAiBK,EAAIE,EAAAA,iBAAiBD,QAAAA;AAC/C;AAEA,IAAME,YAAY;EAAC;EAAO;EAAS;EAAU;AAAO;AACpD,SAASC,mBAAmBC,QAA6BC,OAAeC,QAA4B;AAClG,QAAMC,SAAS,CAAA;AACfD,WAASA,SAAS,MAAMA,SAAS;AACjC,WAASzG,IAAI,GAAGA,IAAI,GAAGA,KAAK;AAC1B,UAAM2G,MAAMN,UAAUrG,CAAE;AACxB0G,WAAOC,GAAI,IAAGC,WAAWL,OAAOC,QAAQ,MAAMG,MAAMF,MAAAA,CAAO,KAAK;EAClE;AACAC,SAAOG,QAAQH,OAAO7C,OAAO6C,OAAO5C;AACpC4C,SAAOI,SAASJ,OAAO1C,MAAM0C,OAAOzC;AACpC,SAAOyC;AACT;AAEA,IAAMK,eAAe,CAAC1F,GAAWC,GAAW0F,YACzC3F,IAAI,KAAKC,IAAI,OAAO,CAAC0F,UAAU,CAAC,OAAwBC;AAO3D,SAASC,kBACPC,GACAC,QAKE;AACF,QAAMC,UAAU,EAAkBA;AAClC,QAAMC,SAAUD,WAAWA,QAAQpH,SAASoH,QAAQ,CAAE,IAAGF;AACzD,QAAM,EAACI,SAASC,QAAAA,IAAWF;AAC3B,MAAIG,MAAM;AACV,MAAIpG,GAAGC;AACP,MAAIyF,aAAaQ,SAASC,SAASL,EAAEH,MAAM,GAAG;AAC5C3F,QAAIkG;AACJjG,QAAIkG;SACC;AACL,UAAME,OAAON,OAAOO,sBAAqB;AACzCtG,QAAIiG,OAAOM,UAAUF,KAAK7D;AAC1BvC,QAAIgG,OAAOO,UAAUH,KAAK1D;AAC1ByD,UAAM;;AAER,SAAO;IAACpG;IAAGC;IAAGmG;EAAG;AACnB;AASO,SAASK,oBACdC,OACAC,OAC0B;AAC1B,MAAI,YAAYD,OAAO;AACrB,WAAOA;;AAGT,QAAM,EAACX,QAAQa,wBAAAA,IAA2BD;AAC1C,QAAMxB,QAAQX,iBAAiBuB,MAAAA;AAC/B,QAAMc,YAAY1B,MAAM2B,cAAc;AACtC,QAAMC,WAAW9B,mBAAmBE,OAAO,SAAA;AAC3C,QAAM6B,UAAU/B,mBAAmBE,OAAO,UAAU,OAAA;AACpD,QAAM,EAACnF,GAAGC,GAAGmG,IAAG,IAAIP,kBAAkBa,OAAOX,MAAAA;AAC7C,QAAMkB,UAAUF,SAASvE,QAAQ4D,OAAOY,QAAQxE;AAChD,QAAM0E,UAAUH,SAASpE,OAAOyD,OAAOY,QAAQrE;AAE/C,MAAI,EAAC6C,OAAOC,OAAAA,IAAUkB;AACtB,MAAIE,WAAW;AACbrB,aAASuB,SAASvB,QAAQwB,QAAQxB;AAClCC,cAAUsB,SAAStB,SAASuB,QAAQvB;;AAEtC,SAAO;IACLzF,GAAGa,KAAKsG,OAAOnH,IAAIiH,WAAWzB,QAAQO,OAAOP,QAAQoB,uBAAAA;IACrD3G,GAAGY,KAAKsG,OAAOlH,IAAIiH,WAAWzB,SAASM,OAAON,SAASmB,uBAAAA;EACzD;AACF;AAEA,SAASQ,iBAAiBrB,QAA2BP,OAAeC,QAAgC;AAClG,MAAI4B,UAAkBC;AAEtB,MAAI9B,UAAU+B,UAAa9B,WAAW8B,QAAW;AAC/C,UAAMC,YAAYzB,UAAUpC,eAAeoC,MAAAA;AAC3C,QAAI,CAACyB,WAAW;AACdhC,cAAQO,OAAO0B;AACfhC,eAASM,OAAO2B;WACX;AACL,YAAMrB,OAAOmB,UAAUlB,sBAAqB;AAC5C,YAAMqB,iBAAiBnD,iBAAiBgD,SAAAA;AACxC,YAAMI,kBAAkB3C,mBAAmB0C,gBAAgB,UAAU,OAAA;AACrE,YAAME,mBAAmB5C,mBAAmB0C,gBAAgB,SAAA;AAC5DnC,cAAQa,KAAKb,QAAQqC,iBAAiBrC,QAAQoC,gBAAgBpC;AAC9DC,eAASY,KAAKZ,SAASoC,iBAAiBpC,SAASmC,gBAAgBnC;AACjE4B,iBAAWpD,cAAc0D,eAAeN,UAAUG,WAAW,aAAA;AAC7DF,kBAAYrD,cAAc0D,eAAeL,WAAWE,WAAW,cAAA;;;AAGnE,SAAO;IACLhC;IACAC;IACA4B,UAAUA,YAAYS;IACtBR,WAAWA,aAAaQ;EAC1B;AACF;AAEA,IAAMC,SAAS,CAACC,MAAcnH,KAAKsG,MAAMa,IAAI,EAAM,IAAA;AAG5C,SAASC,eACdlC,QACAmC,SACAC,UACAC,aACmC;AACnC,QAAMjD,QAAQX,iBAAiBuB,MAAAA;AAC/B,QAAMsC,UAAUpD,mBAAmBE,OAAO,QAAA;AAC1C,QAAMkC,WAAWpD,cAAckB,MAAMkC,UAAUtB,QAAQ,aAAkB+B,KAAAA;AACzE,QAAMR,YAAYrD,cAAckB,MAAMmC,WAAWvB,QAAQ,cAAmB+B,KAAAA;AAC5E,QAAMQ,gBAAgBlB,iBAAiBrB,QAAQmC,SAASC,QAAAA;AACxD,MAAI,EAAC3C,OAAOC,OAAAA,IAAU6C;AAEtB,MAAInD,MAAM2B,cAAc,eAAe;AACrC,UAAME,UAAU/B,mBAAmBE,OAAO,UAAU,OAAA;AACpD,UAAM4B,WAAW9B,mBAAmBE,OAAO,SAAA;AAC3CK,aAASuB,SAASvB,QAAQwB,QAAQxB;AAClCC,cAAUsB,SAAStB,SAASuB,QAAQvB;;AAEtCD,UAAQ3E,KAAKiB,IAAI,GAAG0D,QAAQ6C,QAAQ7C,KAAK;AACzCC,WAAS5E,KAAKiB,IAAI,GAAGsG,cAAc5C,QAAQ4C,cAAc3C,SAAS4C,QAAQ5C,MAAM;AAChFD,UAAQuC,OAAOlH,KAAKgB,IAAI2D,OAAO6B,UAAUiB,cAAcjB,QAAQ,CAAA;AAC/D5B,WAASsC,OAAOlH,KAAKgB,IAAI4D,QAAQ6B,WAAWgB,cAAchB,SAAS,CAAA;AACnE,MAAI9B,SAAS,CAACC,QAAQ;AAGpBA,aAASsC,OAAOvC,QAAQ,CAAA;;AAG1B,QAAM+C,iBAAiBL,YAAYX,UAAaY,aAAaZ;AAE7D,MAAIgB,kBAAkBH,eAAeE,cAAc7C,UAAUA,SAAS6C,cAAc7C,QAAQ;AAC1FA,aAAS6C,cAAc7C;AACvBD,YAAQuC,OAAOlH,KAAK2H,MAAM/C,SAAS2C,WAAAA,CAAAA;;AAGrC,SAAO;IAAC5C;IAAOC;EAAM;AACvB;AAQO,SAASgD,YACd9B,OACA+B,YACAC,YACgB;AAChB,QAAMC,aAAaF,cAAc;AACjC,QAAMG,eAAehI,KAAK2H,MAAM7B,MAAMlB,SAASmD,UAAAA;AAC/C,QAAME,cAAcjI,KAAK2H,MAAM7B,MAAMnB,QAAQoD,UAAAA;AAE5CjC,QAAuBlB,SAAS5E,KAAK2H,MAAM7B,MAAMlB,MAAM;AACvDkB,QAAuBnB,QAAQ3E,KAAK2H,MAAM7B,MAAMnB,KAAK;AAEtD,QAAMO,SAASY,MAAMZ;AAKrB,MAAIA,OAAOZ,UAAUwD,cAAe,CAAC5C,OAAOZ,MAAMM,UAAU,CAACM,OAAOZ,MAAMK,QAAS;AACjFO,WAAOZ,MAAMM,SAAS,GAAGkB,MAAMlB;AAC/BM,WAAOZ,MAAMK,QAAQ,GAAGmB,MAAMnB;;AAGhC,MAAImB,MAAMC,4BAA4BgC,cAC/B7C,OAAON,WAAWoD,gBAClB9C,OAAOP,UAAUsD,aAAa;AAClCnC,UAAuBC,0BAA0BgC;AAClD7C,WAAON,SAASoD;AAChB9C,WAAOP,QAAQsD;AACfnC,UAAMoC,IAAIC,aAAaJ,YAAY,GAAG,GAAGA,YAAY,GAAG,CAAA;AACxD,WAAO;;AAET,SAAO;AACT;AAOaK,IAAAA,+BAAgC,WAAW;AACtD,MAAIC,mBAAmB;AACvB,MAAI;AACF,UAAMlG,UAAU;MACd,IAAImG,UAAU;AACZD,2BAAmB;AACnB,eAAO;MACT;IACF;AAEA,QAAI1F,gBAAmB,GAAA;AACrBC,aAAO2F,iBAAiB,QAAQ,MAAMpG,OAAAA;AACtCS,aAAO4F,oBAAoB,QAAQ,MAAMrG,OAAAA;;EAE7C,SAAS8C,GAAP;EAEF;AACA,SAAOoD;AACT,EAAK;AAYE,SAASI,aACd7E,SACAK,UACoB;AACpB,QAAMyE,QAAQ3E,SAASH,SAASK,QAAAA;AAChC,QAAM0E,UAAUD,SAASA,MAAME,MAAM,mBAAA;AACrC,SAAOD,UAAU,CAACA,QAAQ,CAAA,IAAKjC;AACjC;ACtRO,SAASmC,aAAaC,IAAWC,IAAWxK,GAAWyK,MAAO;AACnE,SAAO;IACL7J,GAAG2J,GAAG3J,IAAIZ,KAAKwK,GAAG5J,IAAI2J,GAAG3J;IACzBC,GAAG0J,GAAG1J,IAAIb,KAAKwK,GAAG3J,IAAI0J,GAAG1J;EAC3B;AACF;AAKO,SAAS6J,sBACdH,IACAC,IACAxK,GAAWyK,MACX;AACA,SAAO;IACL7J,GAAG2J,GAAG3J,IAAIZ,KAAKwK,GAAG5J,IAAI2J,GAAG3J;IACzBC,GAAG4J,SAAS,WAAWzK,IAAI,MAAMuK,GAAG1J,IAAI2J,GAAG3J,IACvC4J,SAAS,UAAUzK,IAAI,IAAIuK,GAAG1J,IAAI2J,GAAG3J,IACnCb,IAAI,IAAIwK,GAAG3J,IAAI0J,GAAG1J;EAC1B;AACF;AAKO,SAAS8J,qBAAqBJ,IAAiBC,IAAiBxK,GAAWyK,MAAO;AACvF,QAAMG,MAAM;IAAChK,GAAG2J,GAAG9G;IAAM5C,GAAG0J,GAAG7G;EAAI;AACnC,QAAMmH,MAAM;IAACjK,GAAG4J,GAAGrH;IAAMtC,GAAG2J,GAAGlH;EAAI;AACnC,QAAMwH,IAAIR,aAAaC,IAAIK,KAAK5K,CAAAA;AAChC,QAAM+K,IAAIT,aAAaM,KAAKC,KAAK7K,CAAAA;AACjC,QAAMgL,IAAIV,aAAaO,KAAKL,IAAIxK,CAAAA;AAChC,QAAMiL,IAAIX,aAAaQ,GAAGC,GAAG/K,CAAAA;AAC7B,QAAM0G,IAAI4D,aAAaS,GAAGC,GAAGhL,CAAAA;AAC7B,SAAOsK,aAAaW,GAAGvE,GAAG1G,CAAAA;AAC5B;AChCA,IAAMkL,wBAAwB,SAASC,OAAe/E,OAA2B;AAC/E,SAAO;IACLxF,EAAEA,GAAG;AACH,aAAOuK,QAAQA,QAAQ/E,QAAQxF;IACjC;IACAwK,SAASC,GAAG;AACVjF,cAAQiF;IACV;IACAC,UAAUC,OAAO;AACf,UAAIA,UAAU,UAAU;AACtB,eAAOA;;AAET,aAAOA,UAAU,UAAU,SAAS;IACtC;IACAC,MAAM5K,GAAGuJ,OAAO;AACd,aAAOvJ,IAAIuJ;IACb;IACAsB,WAAW7K,GAAG8K,WAAW;AACvB,aAAO9K,IAAI8K;IACb;EACF;AACF;AAEA,IAAMC,wBAAwB,WAAuB;AACnD,SAAO;IACL/K,EAAEA,GAAG;AACH,aAAOA;IACT;IACAwK,SAASC,GAAG;IAAA;IAEZC,UAAUC,OAAO;AACf,aAAOA;IACT;IACAC,MAAM5K,GAAGuJ,OAAO;AACd,aAAOvJ,IAAIuJ;IACb;IACAsB,WAAW7K,GAAGgL,YAAY;AACxB,aAAOhL;IACT;EACF;AACF;AAEO,SAASiL,cAAcC,KAAcX,OAAe/E,OAAe;AACxE,SAAO0F,MAAMZ,sBAAsBC,OAAO/E,KAAAA,IAASuF,sBAAuB;AAC5E;AAEO,SAASI,sBAAsBpC,KAA+BqC,WAA0B;AAC7F,MAAIjG,OAA4BkG;AAChC,MAAID,cAAc,SAASA,cAAc,OAAO;AAC9CjG,YAAQ4D,IAAIhD,OAAOZ;AACnBkG,eAAW;MACTlG,MAAMJ,iBAAiB,WAAA;MACvBI,MAAMmG,oBAAoB,WAAA;IAC3B;AAEDnG,UAAMoG,YAAY,aAAaH,WAAW,WAAA;AACzCrC,QAAiDyC,oBAAoBH;;AAE1E;AAEO,SAASI,qBAAqB1C,KAA+BsC,UAA6B;AAC/F,MAAIA,aAAa9D,QAAW;AAC1B,WAAQwB,IAAiDyC;AACzDzC,QAAIhD,OAAOZ,MAAMoG,YAAY,aAAaF,SAAS,CAAA,GAAIA,SAAS,CAAE,CAAA;;AAEtE;AC/DA,SAASK,WAAW5G,UAAU;AAC5B,MAAIA,aAAa,SAAS;AACxB,WAAO;MACL6G,SAASC;MACTC,SAASC;MACTC,WAAWC;IACb;;AAEF,SAAO;IACLL,SAASM;IACTJ,SAAS,CAAC3B,GAAGC,MAAMD,IAAIC;IACvB4B,WAAW/L,CAAAA,MAAKA;EAClB;AACF;AAEA,SAASkM,iBAAiB,EAACC,OAAOC,KAAKC,OAAOpJ,MAAMkC,MAAK,GAAG;AAC1D,SAAO;IACLgH,OAAOA,QAAQE;IACfD,KAAKA,MAAMC;IACXpJ,MAAMA,SAASmJ,MAAMD,QAAQ,KAAKE,UAAU;IAC5ClH;EACF;AACF;AAEA,SAASmH,WAAWC,SAAS7N,QAAQ8N,QAAQ;AAC3C,QAAM,EAAC1H,UAAUqH,OAAOM,YAAYL,KAAKM,SAAQ,IAAIF;AACrD,QAAM,EAACb,SAASI,UAAS,IAAIL,WAAW5G,QAAAA;AACxC,QAAMuH,QAAQ3N,OAAOE;AAErB,MAAI,EAACuN,OAAOC,KAAKnJ,KAAAA,IAAQsJ;AACzB,MAAI5N,GAAGsD;AAEP,MAAIgB,MAAM;AACRkJ,aAASE;AACTD,WAAOC;AACP,SAAK1N,IAAI,GAAGsD,OAAOoK,OAAO1N,IAAIsD,MAAM,EAAEtD,GAAG;AACvC,UAAI,CAACgN,QAAQI,UAAUrN,OAAOyN,QAAQE,KAAAA,EAAOvH,QAAAA,CAAS,GAAG2H,YAAYC,QAAW,GAAA;AAC9E;;AAEFP;AACAC;IACF;AACAD,aAASE;AACTD,WAAOC;;AAGT,MAAID,MAAMD,OAAO;AACfC,WAAOC;;AAET,SAAO;IAACF;IAAOC;IAAKnJ;IAAMkC,OAAOoH,QAAQpH;EAAK;AAChD;AAgBO,SAASwH,cAAcJ,SAAS7N,QAAQ8N,QAAQ;AACrD,MAAI,CAACA,QAAQ;AACX,WAAO;MAACD;IAAQ;;AAGlB,QAAM,EAACzH,UAAUqH,OAAOM,YAAYL,KAAKM,SAAQ,IAAIF;AACrD,QAAMH,QAAQ3N,OAAOE;AACrB,QAAM,EAACiN,SAASF,SAASI,UAAS,IAAIL,WAAW5G,QAAAA;AACjD,QAAM,EAACqH,OAAOC,KAAKnJ,MAAMkC,MAAAA,IAASmH,WAAWC,SAAS7N,QAAQ8N,MAAAA;AAE9D,QAAMnH,SAAS,CAAA;AACf,MAAIuH,SAAS;AACb,MAAIC,WAAW;AACf,MAAItD,OAAOrH,OAAO4K;AAElB,QAAMC,gBAAgB,MAAMpB,QAAQc,YAAYK,WAAWvD,KAAUsC,KAAAA,QAAQY,YAAYK,SAAe,MAAA;AACxG,QAAME,cAAc,MAAMnB,QAAQa,UAAUnD,KAAAA,MAAW,KAAKoC,QAAQe,UAAUI,WAAWvD,KAAAA;AACzF,QAAM0D,cAAc,MAAML,UAAUG,cAAAA;AACpC,QAAMG,aAAa,MAAM,CAACN,UAAUI,YAAAA;AAEpC,WAASrO,IAAIwN,OAAO7I,OAAO6I,OAAOxN,KAAKyN,KAAK,EAAEzN,GAAG;AAC/CuD,YAAQxD,OAAOC,IAAI0N,KAAM;AAEzB,QAAInK,MAAMrD,MAAM;AACd;;AAGF0K,YAAQwC,UAAU7J,MAAM4C,QAAS,CAAA;AAEjC,QAAIyE,UAAUuD,WAAW;AACvB;;AAGFF,aAASjB,QAAQpC,OAAOkD,YAAYC,QAAAA;AAEpC,QAAIG,aAAa,QAAQI,YAAe,GAAA;AACtCJ,iBAAWhB,QAAQtC,OAAOkD,UAAgB,MAAA,IAAI9N,IAAI2E;;AAGpD,QAAIuJ,aAAa,QAAQK,WAAc,GAAA;AACrC7H,aAAO8H,KAAKjB,iBAAiB;QAACC,OAAOU;QAAUT,KAAKzN;QAAGsE;QAAMoJ;QAAOlH;MAAK,CAAA,CAAA;AACzE0H,iBAAW;;AAEbvJ,WAAO3E;AACPmO,gBAAYvD;EACd;AAEA,MAAIsD,aAAa,MAAM;AACrBxH,WAAO8H,KAAKjB,iBAAiB;MAACC,OAAOU;MAAUT;MAAKnJ;MAAMoJ;MAAOlH;IAAK,CAAA,CAAA;;AAGxE,SAAOE;AACT;AAYO,SAAS+H,eAAeC,MAAMb,QAAQ;AAC3C,QAAMnH,SAAS,CAAA;AACf,QAAMiI,WAAWD,KAAKC;AAEtB,WAAS3O,IAAI,GAAGA,IAAI2O,SAAS1O,QAAQD,KAAK;AACxC,UAAM4O,MAAMZ,cAAcW,SAAS3O,CAAAA,GAAI0O,KAAK3O,QAAQ8N,MAAAA;AACpD,QAAIe,IAAI3O,QAAQ;AACdyG,aAAO8H,KAAQI,GAAAA,GAAAA;;EAEnB;AACA,SAAOlI;AACT;AAKA,SAASmI,gBAAgB9O,QAAQ2N,OAAOpJ,MAAME,UAAU;AACtD,MAAIgJ,QAAQ;AACZ,MAAIC,MAAMC,QAAQ;AAElB,MAAIpJ,QAAQ,CAACE,UAAU;AAErB,WAAOgJ,QAAQE,SAAS,CAAC3N,OAAOyN,KAAM,EAACtN,MAAM;AAC3CsN;IACF;;AAIF,SAAOA,QAAQE,SAAS3N,OAAOyN,KAAM,EAACtN,MAAM;AAC1CsN;EACF;AAGAA,WAASE;AAET,MAAIpJ,MAAM;AAERmJ,WAAOD;;AAGT,SAAOC,MAAMD,SAASzN,OAAO0N,MAAMC,KAAM,EAACxN,MAAM;AAC9CuN;EACF;AAGAA,SAAOC;AAEP,SAAO;IAACF;IAAOC;EAAG;AACpB;AASA,SAASqB,cAAc/O,QAAQyN,OAAOrK,KAAKmB,MAAM;AAC/C,QAAMoJ,QAAQ3N,OAAOE;AACrB,QAAMyG,SAAS,CAAA;AACf,MAAIqI,OAAOvB;AACX,MAAI7I,OAAO5E,OAAOyN,KAAM;AACxB,MAAIC;AAEJ,OAAKA,MAAMD,QAAQ,GAAGC,OAAOtK,KAAK,EAAEsK,KAAK;AACvC,UAAMuB,MAAMjP,OAAO0N,MAAMC,KAAM;AAC/B,QAAIsB,IAAI9O,QAAQ8O,IAAIC,MAAM;AACxB,UAAI,CAACtK,KAAKzE,MAAM;AACdoE,eAAO;AACPoC,eAAO8H,KAAK;UAAChB,OAAOA,QAAQE;UAAOD,MAAMA,MAAM,KAAKC;UAAOpJ;QAAI,CAAA;AAE/DkJ,gBAAQuB,OAAOC,IAAIC,OAAOxB,MAAM;;WAE7B;AACLsB,aAAOtB;AACP,UAAI9I,KAAKzE,MAAM;AACbsN,gBAAQC;;;AAGZ9I,WAAOqK;EACT;AAEA,MAAID,SAAS,MAAM;AACjBrI,WAAO8H,KAAK;MAAChB,OAAOA,QAAQE;MAAOD,KAAKsB,OAAOrB;MAAOpJ;IAAI,CAAA;;AAG5D,SAAOoC;AACT;AAUO,SAASwI,iBAAiBR,MAAMS,gBAAgB;AACrD,QAAMpP,SAAS2O,KAAK3O;AACpB,QAAMyE,WAAWkK,KAAKrK,QAAQG;AAC9B,QAAMkJ,QAAQ3N,OAAOE;AAErB,MAAI,CAACyN,OAAO;AACV,WAAO,CAAA;;AAGT,QAAMpJ,OAAO,CAAC,CAACoK,KAAKU;AACpB,QAAM,EAAC5B,OAAOC,IAAAA,IAAOoB,gBAAgB9O,QAAQ2N,OAAOpJ,MAAME,QAAAA;AAE1D,MAAIA,aAAa,MAAM;AACrB,WAAO6K,cAAcX,MAAM;MAAC;QAAClB;QAAOC;QAAKnJ;MAAI;IAAE,GAAEvE,QAAQoP,cAAAA;;AAG3D,QAAMhM,MAAMsK,MAAMD,QAAQC,MAAMC,QAAQD;AACxC,QAAM6B,eAAe,CAAC,CAACZ,KAAKa,aAAa/B,UAAU,KAAKC,QAAQC,QAAQ;AACxE,SAAO2B,cAAcX,MAAMI,cAAc/O,QAAQyN,OAAOrK,KAAKmM,YAAAA,GAAevP,QAAQoP,cAAAA;AACtF;AAQA,SAASE,cAAcX,MAAMC,UAAU5O,QAAQoP,gBAAgB;AAC7D,MAAI,CAACA,kBAAkB,CAACA,eAAeK,cAAc,CAACzP,QAAQ;AAC5D,WAAO4O;;AAET,SAAOc,gBAAgBf,MAAMC,UAAU5O,QAAQoP,cAAAA;AACjD;AASA,SAASM,gBAAgBf,MAAMC,UAAU5O,QAAQoP,gBAAgB;AAC/D,QAAMO,eAAehB,KAAKiB,OAAOC,WAAU;AAC3C,QAAMC,YAAYC,UAAUpB,KAAKrK,OAAO;AACxC,QAAM,EAAC0L,eAAeC,cAAc3L,SAAS,EAACG,SAAQ,EAAC,IAAIkK;AAC3D,QAAMhB,QAAQ3N,OAAOE;AACrB,QAAMyG,SAAS,CAAA;AACf,MAAIuJ,YAAYJ;AAChB,MAAIrC,QAAQmB,SAAS,CAAA,EAAGnB;AACxB,MAAIxN,IAAIwN;AAER,WAAS0C,SAASC,GAAGhJ,GAAGiJ,GAAGC,IAAI;AAC7B,UAAMC,MAAM9L,WAAW,KAAK;AAC5B,QAAI2L,MAAMhJ,GAAG;AACX;;AAGFgJ,SAAKzC;AACL,WAAO3N,OAAOoQ,IAAIzC,KAAM,EAACxN,MAAM;AAC7BiQ,WAAKG;IACP;AACA,WAAOvQ,OAAOoH,IAAIuG,KAAM,EAACxN,MAAM;AAC7BiH,WAAKmJ;IACP;AACA,QAAIH,IAAIzC,UAAUvG,IAAIuG,OAAO;AAC3BhH,aAAO8H,KAAK;QAAChB,OAAO2C,IAAIzC;QAAOD,KAAKtG,IAAIuG;QAAOpJ,MAAM8L;QAAG5J,OAAO6J;MAAE,CAAA;AACjEJ,kBAAYI;AACZ7C,cAAQrG,IAAIuG;;EAEhB;AAEA,aAAWE,WAAWe,UAAU;AAC9BnB,YAAQhJ,WAAWgJ,QAAQI,QAAQJ;AACnC,QAAI7I,OAAO5E,OAAOyN,QAAQE,KAAM;AAChC,QAAIlH;AACJ,SAAKxG,IAAIwN,QAAQ,GAAGxN,KAAK4N,QAAQH,KAAKzN,KAAK;AACzC,YAAMiD,KAAKlD,OAAOC,IAAI0N,KAAM;AAC5BlH,cAAQsJ,UAAUX,eAAeK,WAAWe,cAAcb,cAAc;QACtEc,MAAM;QACNC,IAAI9L;QACJqG,IAAI/H;QACJyN,cAAc1Q,IAAI,KAAK0N;QACvBiD,aAAa3Q,IAAI0N;QACjBsC;MACF,CAAA,CAAA,CAAA;AACA,UAAIY,aAAapK,OAAOyJ,SAAY,GAAA;AAClCC,iBAAS1C,OAAOxN,IAAI,GAAG4N,QAAQtJ,MAAM2L,SAAAA;;AAEvCtL,aAAO1B;AACPgN,kBAAYzJ;IACd;AACA,QAAIgH,QAAQxN,IAAI,GAAG;AACjBkQ,eAAS1C,OAAOxN,IAAI,GAAG4N,QAAQtJ,MAAM2L,SAAAA;;EAEzC;AAEA,SAAOvJ;AACT;AAEA,SAASoJ,UAAUzL,SAAS;AAC1B,SAAO;IACLwM,iBAAiBxM,QAAQwM;IACzBC,gBAAgBzM,QAAQyM;IACxBC,YAAY1M,QAAQ0M;IACpBC,kBAAkB3M,QAAQ2M;IAC1BC,iBAAiB5M,QAAQ4M;IACzBC,aAAa7M,QAAQ6M;IACrBC,aAAa9M,QAAQ8M;EACvB;AACF;AAEA,SAASP,aAAapK,OAAOyJ,WAAW;AACtC,MAAI,CAACA,WAAW;AACd,WAAO;;AAET,QAAMmB,QAAQ,CAAA;AACd,QAAMC,WAAW,SAASC,KAAK1G,OAAO;AACpC,QAAI,CAAC2G,oBAAoB3G,KAAQ,GAAA;AAC/B,aAAOA;;AAET,QAAI,CAACwG,MAAMI,SAAS5G,KAAQ,GAAA;AAC1BwG,YAAM5C,KAAK5D,KAAAA;;AAEb,WAAOwG,MAAMxL,QAAQgF,KAAAA;EACvB;AACA,SAAO6G,KAAKC,UAAUlL,OAAO6K,QAAAA,MAAcI,KAAKC,UAAUzB,WAAWoB,QAAAA;AACvE;;;AChWO,IAAMM,WAAN,MAAMA;EACXC,cAAc;AACZ,SAAKC,WAAW;AAChB,SAAKC,UAAU,oBAAIC,IAAAA;AACnB,SAAKC,WAAW;AAChB,SAAKC,YAAYC;EACnB;EAKAC,QAAQC,OAAOC,OAAOC,MAAMC,MAAM;AAChC,UAAMC,YAAYH,MAAMI,UAAUF,IAAK;AACvC,UAAMG,WAAWL,MAAMM;AAEvBH,cAAUI,QAAQC,CAAAA,OAAMA,GAAG;MACzBT;MACAU,SAAST,MAAMS;MACfJ;MACAK,aAAaC,KAAKC,IAAIX,OAAOD,MAAMa,OAAOR,QAAAA;IAC5C,CAAA,CAAA;EACF;EAKAS,WAAW;AACT,QAAI,KAAKtB,UAAU;AACjB;;AAEF,SAAKG,WAAW;AAEhB,SAAKH,WAAWuB,iBAAiBC,KAAKC,QAAQ,MAAM;AAClD,WAAKC,QAAO;AACZ,WAAK1B,WAAW;AAEhB,UAAI,KAAKG,UAAU;AACjB,aAAKmB,SAAQ;;IAEjB,CAAA;EACF;EAKAI,QAAQjB,OAAOkB,KAAKC,IAAG,GAAI;AACzB,QAAIC,YAAY;AAEhB,SAAK5B,QAAQc,QAAQ,CAACP,OAAOD,UAAU;AACrC,UAAI,CAACC,MAAMsB,WAAW,CAACtB,MAAMuB,MAAMC,QAAQ;AACzC;;AAEF,YAAMD,QAAQvB,MAAMuB;AACpB,UAAIE,IAAIF,MAAMC,SAAS;AACvB,UAAIE,QAAO;AACX,UAAIC;AAEJ,aAAOF,KAAK,GAAG,EAAEA,GAAG;AAClBE,eAAOJ,MAAME,CAAE;AAEf,YAAIE,KAAKC,SAAS;AAChB,cAAID,KAAKE,SAAS7B,MAAMM,UAAU;AAGhCN,kBAAMM,WAAWqB,KAAKE;;AAExBF,eAAKG,KAAK7B,IAAAA;AACVyB,UAAAA,QAAO;eACF;AAGLH,gBAAME,CAAAA,IAAKF,MAAMA,MAAMC,SAAS,CAAE;AAClCD,gBAAMQ,IAAG;;MAEb;AAEA,UAAIL,OAAM;AACR3B,cAAM2B,KAAI;AACV,aAAK5B,QAAQC,OAAOC,OAAOC,MAAM,UAAA;;AAGnC,UAAI,CAACsB,MAAMC,QAAQ;AACjBxB,cAAMsB,UAAU;AAChB,aAAKxB,QAAQC,OAAOC,OAAOC,MAAM,UAAA;AACjCD,cAAMS,UAAU;;AAGlBY,mBAAaE,MAAMC;IACrB,CAAA;AAEA,SAAK5B,YAAYK;AAEjB,QAAIoB,cAAc,GAAG;AACnB,WAAK1B,WAAW;;EAEpB;EAKAqC,UAAUjC,OAAO;AACf,UAAMkC,SAAS,KAAKxC;AACpB,QAAIO,QAAQiC,OAAOC,IAAInC,KAAAA;AACvB,QAAI,CAACC,OAAO;AACVA,cAAQ;QACNsB,SAAS;QACTb,SAAS;QACTc,OAAO,CAAA;QACPnB,WAAW;UACT+B,UAAU,CAAA;UACVC,UAAU,CAAA;QACZ;MACF;AACAH,aAAOI,IAAItC,OAAOC,KAAAA;;AAEpB,WAAOA;EACT;EAOAsC,OAAOvC,OAAOwC,OAAOC,IAAI;AACvB,SAAKR,UAAUjC,KAAAA,EAAOK,UAAUmC,KAAAA,EAAOE,KAAKD,EAAAA;EAC9C;EAOAE,IAAI3C,OAAOwB,OAAO;AAChB,QAAI,CAACA,SAAS,CAACA,MAAMC,QAAQ;AAC3B;;AAEF,SAAKQ,UAAUjC,KAAAA,EAAOwB,MAAMkB,KAAQlB,GAAAA,KAAAA;EACtC;EAMAoB,IAAI5C,OAAO;AACT,WAAO,KAAKiC,UAAUjC,KAAAA,EAAOwB,MAAMC,SAAS;EAC9C;EAMAX,MAAMd,OAAO;AACX,UAAMC,QAAQ,KAAKP,QAAQyC,IAAInC,KAAAA;AAC/B,QAAI,CAACC,OAAO;AACV;;AAEFA,UAAMsB,UAAU;AAChBtB,UAAMa,QAAQM,KAAKC,IAAG;AACtBpB,UAAMM,WAAWN,MAAMuB,MAAMqB,OAAO,CAACC,KAAKC,QAAQnC,KAAKoC,IAAIF,KAAKC,IAAIE,SAAS,GAAG,CAAA;AAChF,SAAKlC,SAAQ;EACf;EAEAQ,QAAQvB,OAAO;AACb,QAAI,CAAC,KAAKJ,UAAU;AAClB,aAAO;;AAET,UAAMK,QAAQ,KAAKP,QAAQyC,IAAInC,KAAAA;AAC/B,QAAI,CAACC,SAAS,CAACA,MAAMsB,WAAW,CAACtB,MAAMuB,MAAMC,QAAQ;AACnD,aAAO;;AAET,WAAO;EACT;EAMAyB,KAAKlD,OAAO;AACV,UAAMC,QAAQ,KAAKP,QAAQyC,IAAInC,KAAAA;AAC/B,QAAI,CAACC,SAAS,CAACA,MAAMuB,MAAMC,QAAQ;AACjC;;AAEF,UAAMD,QAAQvB,MAAMuB;AACpB,QAAIE,IAAIF,MAAMC,SAAS;AAEvB,WAAOC,KAAK,GAAG,EAAEA,GAAG;AAClBF,YAAME,CAAE,EAACyB,OAAM;IACjB;AACAlD,UAAMuB,QAAQ,CAAA;AACd,SAAKzB,QAAQC,OAAOC,OAAOmB,KAAKC,IAAG,GAAI,UAAA;EACzC;EAMA+B,OAAOpD,OAAO;AACZ,WAAO,KAAKN,QAAQ2D,OAAOrD,KAAAA;EAC7B;AACF;AAGA,IAAA,WAA+B,oBAAIT,SAAW;ACjN9C,IAAM+D,cAAc;AACpB,IAAMC,gBAAgB;EACpBC,QAAQC,OAAMC,KAAIC,QAAQ;AACxB,WAAOA,SAAS,MAAMD,MAAKD;EAC7B;EAMAG,MAAMH,OAAMC,KAAIC,QAAQ;AACtB,UAAME,KAAKC,MAAaL,SAAQH,WAAAA;AAChC,UAAMS,KAAKF,GAAGG,SAASF,MAAaJ,OAAMJ,WAAAA;AAC1C,WAAOS,MAAMA,GAAGC,QACZD,GAAGE,IAAIJ,IAAIF,MAAAA,EAAQO,UAAS,IAC5BR;EACN;EACAS,OAAOV,OAAMC,KAAIC,QAAQ;AACvB,WAAOF,SAAQC,MAAKD,SAAQE;EAC9B;AACF;AAEe,IAAMS,YAAN,MAAMA;EACnB5E,YAAY6E,KAAKC,QAAQC,MAAMb,KAAI;AACjC,UAAMc,eAAeF,OAAOC,IAAK;AAEjCb,IAAAA,MAAKe,QAAQ;MAACJ,IAAIX;MAAIA;MAAIc;MAAcH,IAAIZ;IAAK,CAAA;AACjD,UAAMA,QAAOgB,QAAQ;MAACJ,IAAIZ;MAAMe;MAAcd;IAAG,CAAA;AAEjD,SAAK7B,UAAU;AACf,SAAK6C,MAAML,IAAI5D,MAAM8C,cAAcc,IAAIlE,QAAQ,OAAOsD,KAAK;AAC3D,SAAKkB,UAAUC,QAAQP,IAAIQ,MAAM,KAAKD,QAAQE;AAC9C,SAAKC,SAASnE,KAAKoE,MAAM5D,KAAKC,IAAG,KAAMgD,IAAIY,SAAS,EAAA;AACpD,SAAKhC,YAAY,KAAKnB,SAASlB,KAAKoE,MAAMX,IAAI9D,QAAQ;AACtD,SAAK2E,QAAQ,CAAC,CAACb,IAAIc;AACnB,SAAKC,UAAUd;AACf,SAAKe,QAAQd;AACb,SAAKe,QAAQ7B;AACb,SAAK8B,MAAM7B;AACX,SAAK8B,YAAY1F;EACnB;EAEA2F,SAAS;AACP,WAAO,KAAK5D;EACd;EAEA6D,OAAOrB,KAAKX,KAAIxD,MAAM;AACpB,QAAI,KAAK2B,SAAS;AAChB,WAAK9B,QAAQ,KAAK;AAElB,YAAMyE,eAAe,KAAKY,QAAQ,KAAKC,KAAK;AAC5C,YAAMM,UAAUzF,OAAO,KAAK6E;AAC5B,YAAMa,SAAS,KAAK3C,YAAY0C;AAChC,WAAKZ,SAAS7E;AACd,WAAK+C,YAAYrC,KAAKoE,MAAMpE,KAAKoC,IAAI4C,QAAQvB,IAAI9D,QAAQ,CAAA;AACzD,WAAKuB,UAAU6D;AACf,WAAKT,QAAQ,CAAC,CAACb,IAAIc;AACnB,WAAKI,MAAMd,QAAQ;QAACJ,IAAIX;QAAIA;QAAIc;QAAcH,IAAIZ;MAAK,CAAA;AACvD,WAAK6B,QAAQb,QAAQ;QAACJ,IAAIZ;QAAMe;QAAcd;MAAG,CAAA;;EAErD;EAEAP,SAAS;AACP,QAAI,KAAKtB,SAAS;AAEhB,WAAKE,KAAKX,KAAKC,IAAG,CAAA;AAClB,WAAKQ,UAAU;AACf,WAAK9B,QAAQ,KAAK;;EAEtB;EAEAgC,KAAK7B,MAAM;AACT,UAAMyF,UAAUzF,OAAO,KAAK6E;AAC5B,UAAMxE,WAAW,KAAK0C;AACtB,UAAMsB,OAAO,KAAKc;AAClB,UAAM5B,QAAO,KAAK6B;AAClB,UAAMH,OAAO,KAAKD;AAClB,UAAMxB,MAAK,KAAK6B;AAChB,QAAI5B;AAEJ,SAAK9B,UAAU4B,UAASC,QAAOyB,QAASQ,UAAUpF;AAElD,QAAI,CAAC,KAAKsB,SAAS;AACjB,WAAKuD,QAAQb,IAAAA,IAAQb;AACrB,WAAK3D,QAAQ,IAAI;AACjB;;AAGF,QAAI4F,UAAU,GAAG;AACf,WAAKP,QAAQb,IAAAA,IAAQd;AACrB;;AAGFE,aAAUgC,UAAUpF,WAAY;AAChCoD,aAASwB,QAAQxB,SAAS,IAAI,IAAIA,SAASA;AAC3CA,aAAS,KAAKgB,QAAQ/D,KAAKC,IAAI,GAAGD,KAAKoC,IAAI,GAAGW,MAAAA,CAAAA,CAAAA;AAE9C,SAAKyB,QAAQb,IAAK,IAAG,KAAKG,IAAIjB,OAAMC,KAAIC,MAAAA;EAC1C;EAEAkC,OAAO;AACL,UAAMC,WAAW,KAAKN,cAAc,KAAKA,YAAY,CAAA;AACrD,WAAO,IAAIO,QAAQ,CAACC,KAAKC,QAAQ;AAC/BH,eAASpD,KAAK;QAACsD;QAAKC;MAAG,CAAA;IACzB,CAAA;EACF;EAEAlG,QAAQmG,UAAU;AAChB,UAAMC,SAASD,WAAW,QAAQ;AAClC,UAAMJ,WAAW,KAAKN,aAAa,CAAA;AACnC,aAAS9D,IAAI,GAAGA,IAAIoE,SAASrE,QAAQC,KAAK;AACxCoE,eAASpE,CAAE,EAACyE,MAAO,EAAA;IACrB;EACF;AACF;ACjHe,IAAMC,aAAN,MAAMA;EACnB5G,YAAYQ,OAAOqG,QAAQ;AACzB,SAAKC,SAAStG;AACd,SAAKuG,cAAc,oBAAI5G,IAAAA;AACvB,SAAK6G,UAAUH,MAAAA;EACjB;EAEAG,UAAUH,QAAQ;AAChB,QAAI,CAACI,SAASJ,MAAS,GAAA;AACrB;;AAGF,UAAMK,mBAAmBC,OAAOC,KAAKC,SAASC,SAAS;AACvD,UAAMC,gBAAgB,KAAKR;AAE3BI,WAAOK,oBAAoBX,MAAAA,EAAQ7F,QAAQyG,CAAAA,QAAO;AAChD,YAAM5C,MAAMgC,OAAOY,GAAI;AACvB,UAAI,CAACR,SAASpC,GAAM,GAAA;AAClB;;AAEF,YAAM6B,WAAW,CAAA;AACjB,iBAAWgB,UAAUR,kBAAkB;AACrCR,iBAASgB,MAAAA,IAAU7C,IAAI6C,MAAO;MAChC;AAECC,OAAAA,QAAQ9C,IAAI+C,UAAU,KAAK/C,IAAI+C,cAAc;QAACH;MAAI,GAAEzG,QAAQ,CAAC+D,SAAS;AACrE,YAAIA,SAAS0C,OAAO,CAACF,cAAcnE,IAAI2B,IAAO,GAAA;AAC5CwC,wBAAczE,IAAIiC,MAAM2B,QAAAA;;MAE5B,CAAA;IACF,CAAA;EACF;EAMAmB,gBAAgB/C,QAAQgD,QAAQ;AAC9B,UAAMC,aAAaD,OAAOE;AAC1B,UAAMA,UAAUC,qBAAqBnD,QAAQiD,UAAAA;AAC7C,QAAI,CAACC,SAAS;AACZ,aAAO,CAAA;;AAGT,UAAME,aAAa,KAAKC,kBAAkBH,SAASD,UAAAA;AACnD,QAAIA,WAAWK,SAAS;AAItBC,eAASvD,OAAOkD,QAAQM,aAAaP,UAAYQ,EAAAA,KAAK,MAAM;AAC1DzD,eAAOkD,UAAUD;MACnB,GAAG,MAAM;MAET,CAAA;;AAGF,WAAOG;EACT;EAKAC,kBAAkBrD,QAAQgD,QAAQ;AAChC,UAAMP,gBAAgB,KAAKR;AAC3B,UAAMmB,aAAa,CAAA;AACnB,UAAMnG,UAAU+C,OAAOwD,gBAAgBxD,OAAOwD,cAAc,CAAA;AAC5D,UAAME,QAAQrB,OAAOC,KAAKU,MAAAA;AAC1B,UAAMpH,OAAOkB,KAAKC,IAAG;AACrB,QAAIK;AAEJ,SAAKA,IAAIsG,MAAMvG,SAAS,GAAGC,KAAK,GAAG,EAAEA,GAAG;AACtC,YAAM6C,OAAOyD,MAAMtG,CAAE;AACrB,UAAI6C,KAAK0D,OAAO,CAAA,MAAO,KAAK;AAC1B;;AAGF,UAAI1D,SAAS,WAAW;AACtBmD,mBAAWhF,KAAQ,GAAA,KAAK2E,gBAAgB/C,QAAQgD,MAAAA,CAAAA;AAChD;;AAEF,YAAMY,QAAQZ,OAAO/C,IAAK;AAC1B,UAAIuC,YAAYvF,QAAQgD,IAAK;AAC7B,YAAMF,MAAM0C,cAAc5E,IAAIoC,IAAAA;AAE9B,UAAIuC,WAAW;AACb,YAAIzC,OAAOyC,UAAUrB,OAAM,GAAI;AAE7BqB,oBAAUpB,OAAOrB,KAAK6D,OAAOhI,IAAAA;AAC7B;eACK;AACL4G,oBAAU3D,OAAM;;;AAGpB,UAAI,CAACkB,OAAO,CAACA,IAAI9D,UAAU;AAEzB+D,eAAOC,IAAAA,IAAQ2D;AACf;;AAGF3G,cAAQgD,IAAAA,IAAQuC,YAAY,IAAI1C,UAAUC,KAAKC,QAAQC,MAAM2D,KAAAA;AAC7DR,iBAAWhF,KAAKoE,SAAAA;IAClB;AACA,WAAOY;EACT;EASAhC,OAAOpB,QAAQgD,QAAQ;AACrB,QAAI,KAAKf,YAAY4B,SAAS,GAAG;AAE/BxB,aAAOyB,OAAO9D,QAAQgD,MAAAA;AACtB;;AAGF,UAAMI,aAAa,KAAKC,kBAAkBrD,QAAQgD,MAAAA;AAElD,QAAII,WAAWjG,QAAQ;AACrB4G,eAAS1F,IAAI,KAAK2D,QAAQoB,UAAAA;AAC1B,aAAO;;EAEX;AACF;AAEA,SAASG,SAASH,YAAYN,YAAY;AACxC,QAAM7F,UAAU,CAAA;AAChB,QAAMqF,OAAOD,OAAOC,KAAKQ,UAAAA;AACzB,WAAS1F,IAAI,GAAGA,IAAIkF,KAAKnF,QAAQC,KAAK;AACpC,UAAM4G,OAAOZ,WAAWd,KAAKlF,CAAAA,CAAE;AAC/B,QAAI4G,QAAQA,KAAK7C,OAAM,GAAI;AACzBlE,cAAQmB,KAAK4F,KAAKzC,KAAI,CAAA;;EAE1B;AAEA,SAAOE,QAAQwC,IAAIhH,OAAAA;AACrB;AAEA,SAASkG,qBAAqBnD,QAAQiD,YAAY;AAChD,MAAI,CAACA,YAAY;AACf;;AAEF,MAAIC,UAAUlD,OAAOkD;AACrB,MAAI,CAACA,SAAS;AACZlD,WAAOkD,UAAUD;AACjB;;AAEF,MAAIC,QAAQI,SAAS;AAGnBtD,WAAOkD,UAAUA,UAAUb,OAAOyB,OAAO,CAAA,GAAIZ,SAAS;MAACI,SAAS;MAAOE,aAAa,CAAA;IAAE,CAAA;;AAExF,SAAON;AACT;ACtJA,SAASgB,UAAUC,OAAOC,iBAAiB;AACzC,QAAMC,OAAOF,SAASA,MAAMjB,WAAW,CAAA;AACvC,QAAMoB,UAAUD,KAAKC;AACrB,QAAM/H,MAAM8H,KAAK9H,QAAQf,SAAY4I,kBAAkB;AACvD,QAAM1F,MAAM2F,KAAK3F,QAAQlD,SAAY4I,kBAAkB;AACvD,SAAO;IACL5H,OAAO8H,UAAU5F,MAAMnC;IACvBgI,KAAKD,UAAU/H,MAAMmC;EACvB;AACF;AAEA,SAAS8F,YAAYC,QAAQC,QAAQN,iBAAiB;AACpD,MAAIA,oBAAoB,OAAO;AAC7B,WAAO;;AAET,QAAMO,IAAIT,UAAUO,QAAQL,eAAAA;AAC5B,QAAMQ,IAAIV,UAAUQ,QAAQN,eAAAA;AAE5B,SAAO;IACLS,KAAKD,EAAEL;IACPO,OAAOH,EAAEJ;IACTQ,QAAQH,EAAEpI;IACVwI,MAAML,EAAEnI;EACV;AACF;AAEA,SAASyI,OAAOrB,OAAO;AACrB,MAAIsB,GAAGC,GAAGC,GAAGC;AAEb,MAAIlD,SAASyB,KAAQ,GAAA;AACnBsB,QAAItB,MAAMiB;AACVM,QAAIvB,MAAMkB;AACVM,QAAIxB,MAAMmB;AACVM,QAAIzB,MAAMoB;SACL;AACLE,QAAIC,IAAIC,IAAIC,IAAIzB;;AAGlB,SAAO;IACLiB,KAAKK;IACLJ,OAAOK;IACPJ,QAAQK;IACRJ,MAAMK;IACNC,UAAU1B,UAAU;EACtB;AACF;AAEA,SAAS2B,wBAAwB7J,OAAO8J,eAAe;AACrD,QAAMlD,OAAO,CAAA;AACb,QAAMmD,WAAW/J,MAAMgK,uBAAuBF,aAAAA;AAC9C,MAAIpI,GAAGuI;AAEP,OAAKvI,IAAI,GAAGuI,OAAOF,SAAStI,QAAQC,IAAIuI,MAAM,EAAEvI,GAAG;AACjDkF,SAAKlE,KAAKqH,SAASrI,CAAAA,EAAGwI,KAAK;EAC7B;AACA,SAAOtD;AACT;AAEA,SAASuD,WAAWC,OAAOlC,OAAOmC,SAAS7C,UAAU,CAAA,GAAI;AACvD,QAAMZ,OAAOwD,MAAMxD;AACnB,QAAM0D,aAAa9C,QAAQ+C,SAAS;AACpC,MAAI7I,GAAGuI,MAAMO,cAAcC;AAE3B,MAAIvC,UAAU,MAAM;AAClB;;AAGF,MAAIwC,QAAQ;AACZ,OAAKhJ,IAAI,GAAGuI,OAAOrD,KAAKnF,QAAQC,IAAIuI,MAAM,EAAEvI,GAAG;AAC7C8I,mBAAe,CAAC5D,KAAKlF,CAAE;AACvB,QAAI8I,iBAAiBH,SAAS;AAC5BK,cAAQ;AACR,UAAIlD,QAAQe,KAAK;AACf;;AAEF;;AAEFkC,iBAAaL,MAAM9C,OAAOkD,YAAa;AACvC,QAAIG,eAASF,UAAgBH,MAAAA,cAAepC,UAAU,KAAK0C,KAAK1C,KAAAA,MAAW0C,KAAKH,UAAAA,IAAe;AAC7FvC,eAASuC;;EAEb;AAEA,MAAI,CAACC,SAAS,CAAClD,QAAQe,KAAK;AAC1B,WAAO;;AAGT,SAAOL;AACT;AAEA,SAAS2C,yBAAyBC,MAAMC,OAAM;AAC5C,QAAM,EAACC,QAAQC,OAAAA,IAAUF;AACzB,QAAMG,WAAWF,OAAOG,SAAS,MAAM,MAAM;AAC7C,QAAMC,WAAWH,OAAOE,SAAS,MAAM,MAAM;AAC7C,QAAMvE,OAAOD,OAAOC,KAAKkE,IAAAA;AACzB,QAAMO,QAAQ,IAAIC,MAAM1E,KAAKnF,MAAM;AACnC,MAAIC,GAAGuI,MAAMhD;AACb,OAAKvF,IAAI,GAAGuI,OAAOrD,KAAKnF,QAAQC,IAAIuI,MAAM,EAAEvI,GAAG;AAC7CuF,UAAML,KAAKlF,CAAE;AACb2J,UAAM3J,CAAAA,IAAK;MACT,CAACwJ,QAAAA,GAAWjE;MACZ,CAACmE,QAAS,GAAEN,KAAK7D,GAAI;IACvB;EACF;AACA,SAAOoE;AACT;AAEA,SAASE,UAAU9C,OAAOsC,OAAM;AAC9B,QAAMS,UAAU/C,SAASA,MAAMjB,QAAQgE;AACvC,SAAOA,WAAYA,YAAY1L,UAAaiL,MAAKX,UAAUtK;AAC7D;AAEA,SAAS2L,YAAYC,YAAYC,YAAYZ,OAAM;AACjD,SAAO,GAAGW,WAAWE,MAAMD,WAAWC,MAAMb,MAAKX,SAASW,MAAK5K;AACjE;AAEA,SAAS0L,cAAcpD,OAAO;AAC5B,QAAM,EAAC5H,KAAKmC,KAAK8I,YAAYC,WAAU,IAAItD,MAAMoD,cAAa;AAC9D,SAAO;IACLhL,KAAKiL,aAAajL,MAAMmL,OAAOC;IAC/BjJ,KAAK+I,aAAa/I,MAAMgJ,OAAOE;EACjC;AACF;AAEA,SAASC,iBAAiBC,QAAQC,UAAUC,YAAY;AACtD,QAAMC,WAAWH,OAAOC,QAAS,MAAKD,OAAOC,QAAAA,IAAY,CAAA;AACzD,SAAOE,SAASD,UAAAA,MAAgBC,SAASD,UAAAA,IAAc,CAAA;AACzD;AAEA,SAASE,oBAAoBpC,OAAOa,QAAQwB,UAAUtM,MAAM;AAC1D,aAAW4K,SAAQE,OAAOyB,wBAAwBvM,IAAAA,EAAMyI,QAAO,GAAI;AACjE,UAAMV,QAAQkC,MAAMW,MAAKb,KAAK;AAC9B,QAAI,YAAahC,QAAQ,KAAO,CAACuE,YAAYvE,QAAQ,GAAI;AACvD,aAAO6C,MAAKb;;EAEhB;AAEA,SAAO;AACT;AAEA,SAASyC,aAAaC,YAAYC,QAAQ;AACxC,QAAM,EAAC7M,OAAO8M,aAAa/B,MAAAA,IAAQ6B;AACnC,QAAMR,SAASpM,MAAM+M,YAAY/M,MAAM+M,UAAU,CAAA;AACjD,QAAM,EAAC/B,QAAQC,QAAQf,OAAOM,aAAAA,IAAgBO;AAC9C,QAAMiC,QAAQhC,OAAOG;AACrB,QAAM8B,QAAQhC,OAAOE;AACrB,QAAMlE,MAAMwE,YAAYT,QAAQC,QAAQF,KAAAA;AACxC,QAAMd,OAAO4C,OAAOpL;AACpB,MAAI2I;AAEJ,WAAS1I,IAAI,GAAGA,IAAIuI,MAAM,EAAEvI,GAAG;AAC7B,UAAME,OAAOiL,OAAOnL,CAAE;AACtB,UAAM,EAAC,CAACsL,KAAAA,GAAQ9C,QAAO,CAAC+C,KAAM,GAAE/E,MAAK,IAAItG;AACzC,UAAMsL,aAAatL,KAAKmL,YAAYnL,KAAKmL,UAAU,CAAA;AACnD3C,YAAQ8C,WAAWD,KAAAA,IAASd,iBAAiBC,QAAQnF,KAAKiD,MAAAA;AAC1DE,UAAMI,YAAAA,IAAgBtC;AAEtBkC,UAAM+C,OAAOX,oBAAoBpC,OAAOa,QAAQ,MAAMF,MAAK5K,IAAI;AAC/DiK,UAAMgD,UAAUZ,oBAAoBpC,OAAOa,QAAQ,OAAOF,MAAK5K,IAAI;AAEnE,UAAMkN,eAAejD,MAAMkD,kBAAkBlD,MAAMkD,gBAAgB,CAAA;AACnED,iBAAa7C,YAAAA,IAAgBtC;EAC/B;AACF;AAEA,SAASqF,gBAAgBvN,OAAOmL,MAAM;AACpC,QAAMqC,SAASxN,MAAMwN;AACrB,SAAO7G,OAAOC,KAAK4G,MAAAA,EAAQC,OAAOxG,CAAAA,QAAOuG,OAAOvG,GAAI,EAACkE,SAASA,IAAAA,EAAMuC,MAAK;AAC3E;AAEA,SAASC,qBAAqBC,QAAQ1D,QAAO;AAC3C,SAAO2D,cAAcD,QACnB;IACEnI,QAAQ;IACRqI,SAAShO;IACT0K,cAAcN;IACdA,OAAAA;IACAK,MAAM;IACNpK,MAAM;EACR,CAAA;AAEJ;AAEA,SAAS4N,kBAAkBH,QAAQ1D,QAAO8D,SAAS;AACjD,SAAOH,cAAcD,QAAQ;IAC3BnI,QAAQ;IACRwI,WAAW/D;IACX2C,QAAQ/M;IACRoO,KAAKpO;IACLkO;IACA9D,OAAAA;IACAK,MAAM;IACNpK,MAAM;EACR,CAAA;AACF;AAEA,SAASgO,YAAYpD,OAAMvJ,OAAO;AAEhC,QAAMgJ,eAAeO,MAAK6B,WAAW1C;AACrC,QAAMiB,OAAOJ,MAAKE,UAAUF,MAAKE,OAAOE;AACxC,MAAI,CAACA,MAAM;AACT;;AAGF3J,UAAQA,SAASuJ,MAAKqD;AACtB,aAAWvB,UAAUrL,OAAO;AAC1B,UAAM4K,SAASS,OAAOE;AACtB,QAAI,CAACX,UAAUA,OAAOjB,IAAK,MAAKrL,UAAasM,OAAOjB,IAAAA,EAAMX,YAAAA,MAAkB1K,QAAW;AACrF;;AAEF,WAAOsM,OAAOjB,IAAK,EAACX,YAAa;AACjC,QAAI4B,OAAOjB,IAAK,EAACmC,kBAAkBxN,UAAasM,OAAOjB,IAAAA,EAAMmC,cAAc9C,YAAAA,MAAkB1K,QAAW;AACtG,aAAOsM,OAAOjB,IAAAA,EAAMmC,cAAc9C,YAAa;;EAEnD;AACF;AAEA,IAAM6D,qBAAqB,CAAC9D,SAASA,SAAS,WAAWA,SAAS;AAClE,IAAM+D,mBAAmB,CAACC,QAAQC,WAAWA,SAASD,SAAS5H,OAAOyB,OAAO,CAAA,GAAImG,MAAO;AACxF,IAAME,cAAc,CAACC,UAAU3D,OAAM/K,UAAU0O,YAAY,CAAC3D,MAAK4D,UAAU5D,MAAK6D,YAC3E;EAAChI,MAAMiD,wBAAwB7J,OAAO,IAAI;EAAGsH,QAAQ;AAAI;AAE/C,IAAMuH,oBAAN,MAAMA;EAqBnBrP,YAAYQ,OAAOwK,cAAc;AAC/B,SAAKxK,QAAQA;AACb,SAAK8O,OAAO9O,MAAM+O;AAClB,SAAK7E,QAAQM;AACb,SAAKwE,kBAAkB,CAAA;AACvB,SAAKlC,cAAc,KAAKmC,QAAO;AAC/B,SAAKC,QAAQ,KAAKpC,YAAY3M;AAC9B,SAAKqH,UAAU1H;AAEf,SAAKqP,WAAW;AAChB,SAAKC,QAAQtP;AACb,SAAKuP,cAAcvP;AACnB,SAAKwP,iBAAiBxP;AACtB,SAAKyP,aAAazP;AAClB,SAAK0P,aAAa1P;AAClB,SAAK2P,sBAAsB;AAC3B,SAAKC,qBAAqB;AAC1B,SAAKC,WAAW7P;AAChB,SAAK8P,YAAY,CAAA;AACjB,SAAKC,qBAAqB,WAAWA;AACrC,SAAKC,kBAAkB,WAAWA;AAElC,SAAKC,WAAU;EACjB;EAEAA,aAAa;AACX,UAAMhF,QAAO,KAAK+B;AAClB,SAAKtG,UAAS;AACd,SAAKwJ,WAAU;AACfjF,IAAAA,MAAK6D,WAAWrD,UAAUR,MAAKE,QAAQF,KAAAA;AACvC,SAAKkF,YAAW;AAEhB,QAAI,KAAKzI,QAAQ0I,QAAQ,CAAC,KAAKlQ,MAAMmQ,gBAAgB,QAAW,GAAA;AAC9DC,cAAQC,KAAK,oKAAA;;EAEjB;EAEAC,YAAY9F,cAAc;AACxB,QAAI,KAAKN,UAAUM,cAAc;AAC/B2D,kBAAY,KAAKrB,WAAW;;AAE9B,SAAK5C,QAAQM;EACf;EAEAwF,aAAa;AACX,UAAMhQ,QAAQ,KAAKA;AACnB,UAAM+K,QAAO,KAAK+B;AAClB,UAAMgB,UAAU,KAAKyC,WAAU;AAE/B,UAAMC,WAAW,CAACrF,MAAMlC,GAAGC,GAAGO,MAAM0B,SAAS,MAAMlC,IAAIkC,SAAS,MAAM1B,IAAIP;AAE1E,UAAMuH,MAAM1F,MAAK2F,UAAUC,eAAe7C,QAAQ4C,SAASnD,gBAAgBvN,OAAO,GAAA,CAAA;AAClF,UAAM4Q,MAAM7F,MAAK8F,UAAUF,eAAe7C,QAAQ+C,SAAStD,gBAAgBvN,OAAO,GAAA,CAAA;AAClF,UAAM8Q,MAAM/F,MAAKgG,UAAUJ,eAAe7C,QAAQiD,SAASxD,gBAAgBvN,OAAO,GAAA,CAAA;AAClF,UAAMgR,YAAYjG,MAAKiG;AACvB,UAAMC,MAAMlG,MAAKmG,UAAUV,SAASQ,WAAWP,KAAKG,KAAKE,GAAAA;AACzD,UAAMK,MAAMpG,MAAKqG,UAAUZ,SAASQ,WAAWJ,KAAKH,KAAKK,GAAAA;AACzD/F,IAAAA,MAAKhC,SAAS,KAAKsI,cAAcZ,GAAAA;AACjC1F,IAAAA,MAAK/B,SAAS,KAAKqI,cAAcT,GAAAA;AACjC7F,IAAAA,MAAKuG,SAAS,KAAKD,cAAcP,GAAAA;AACjC/F,IAAAA,MAAKC,SAAS,KAAKqG,cAAcJ,GAAAA;AACjClG,IAAAA,MAAKE,SAAS,KAAKoG,cAAcF,GAAAA;EACnC;EAEAZ,aAAa;AACX,WAAO,KAAKvQ,MAAM8K,KAAKyG,SAAS,KAAKrH,KAAK;EAC5C;EAEA+E,UAAU;AACR,WAAO,KAAKjP,MAAMwR,eAAe,KAAKtH,KAAK;EAC7C;EAMAmH,cAAcI,SAAS;AACrB,WAAO,KAAKzR,MAAMwN,OAAOiE,OAAQ;EACnC;EAKAC,eAAejJ,OAAO;AACpB,UAAMsC,QAAO,KAAK+B;AAClB,WAAOrE,UAAUsC,MAAKC,SAClBD,MAAKE,SACLF,MAAKC;EACX;EAEA2G,QAAQ;AACN,SAAKxQ,QAAQ,OAAA;EACf;EAKAyQ,WAAW;AACT,UAAM7G,QAAO,KAAK+B;AAClB,QAAI,KAAKsC,OAAO;AACdyC,0BAAoB,KAAKzC,OAAO,IAAI;;AAEtC,QAAIrE,MAAK6D,UAAU;AACjBT,kBAAYpD,KAAAA;;EAEhB;EAKA+G,aAAa;AACX,UAAMhE,UAAU,KAAKyC,WAAU;AAC/B,UAAMzF,OAAOgD,QAAQhD,SAASgD,QAAQhD,OAAO,CAAA;AAC7C,UAAMsE,QAAQ,KAAKA;AAMnB,QAAI3I,SAASqE,IAAO,GAAA;AAClB,YAAMC,QAAO,KAAK+B;AAClB,WAAKsC,QAAQvE,yBAAyBC,MAAMC,KAAAA;eACnCqE,UAAUtE,MAAM;AACzB,UAAIsE,OAAO;AAETyC,4BAAoBzC,OAAO,IAAI;AAE/B,cAAMrE,QAAO,KAAK+B;AAClBqB,oBAAYpD,KAAAA;AACZA,QAAAA,MAAKqD,UAAU,CAAA;;AAEjB,UAAItD,QAAQnE,OAAOoL,aAAajH,IAAO,GAAA;AACrCkH,0BAAkBlH,MAAM,IAAI;;AAE9B,WAAK8E,YAAY,CAAA;AACjB,WAAKR,QAAQtE;;EAEjB;EAEAmF,cAAc;AACZ,UAAMlF,QAAO,KAAK+B;AAElB,SAAKgF,WAAU;AAEf,QAAI,KAAKjC,oBAAoB;AAC3B9E,MAAAA,MAAK+C,UAAU,IAAI,KAAK+B,mBAAkB;;EAE9C;EAEAoC,sBAAsBC,kBAAkB;AACtC,UAAMnH,QAAO,KAAK+B;AAClB,UAAMgB,UAAU,KAAKyC,WAAU;AAC/B,QAAI4B,eAAe;AAEnB,SAAKL,WAAU;AAGf,UAAMM,aAAarH,MAAK6D;AACxB7D,IAAAA,MAAK6D,WAAWrD,UAAUR,MAAKE,QAAQF,KAAAA;AAGvC,QAAIA,MAAKX,UAAU0D,QAAQ1D,OAAO;AAChC+H,qBAAe;AAEfhE,kBAAYpD,KAAAA;AACZA,MAAAA,MAAKX,QAAQ0D,QAAQ1D;;AAKvB,SAAKiI,gBAAgBH,gBAAAA;AAGrB,QAAIC,gBAAgBC,eAAerH,MAAK6D,UAAU;AAChDjC,mBAAa,MAAM5B,MAAKqD,OAAO;AAC/BrD,MAAAA,MAAK6D,WAAWrD,UAAUR,MAAKE,QAAQF,KAAAA;;EAE3C;EAMAvE,YAAY;AACV,UAAMH,SAAS,KAAKrG,MAAMqG;AAC1B,UAAMiM,YAAYjM,OAAOkM,iBAAiB,KAAKrD,KAAK;AACpD,UAAMsD,SAASnM,OAAOoM,gBAAgB,KAAKlC,WAAU,GAAI+B,WAAW,IAAI;AACxE,SAAK9K,UAAUnB,OAAOqM,eAAeF,QAAQ,KAAKG,WAAU,CAAA;AAC5D,SAAKxD,WAAW,KAAK3H,QAAQoL;AAC7B,SAAK5D,kBAAkB,CAAA;EACzB;EAMA6D,MAAM/R,OAAOgS,OAAO;AAClB,UAAM,EAAChG,aAAa/B,OAAMqE,OAAOtE,KAAI,IAAI;AACzC,UAAM,EAACE,QAAQ4D,SAAAA,IAAY7D;AAC3B,UAAMiC,QAAQhC,OAAOG;AAErB,QAAI4H,SAASjS,UAAU,KAAKgS,UAAUhI,KAAKrJ,SAAS,OAAOsJ,MAAKiI;AAChE,QAAIC,OAAOnS,QAAQ,KAAKiK,MAAKqD,QAAQtN,QAAQ,CAAE;AAC/C,QAAIY,GAAGqB,KAAK8J;AAEZ,QAAI,KAAKsC,aAAa,OAAO;AAC3BpE,MAAAA,MAAKqD,UAAUtD;AACfC,MAAAA,MAAKiI,UAAU;AACfnG,eAAS/B;WACJ;AACL,UAAI3D,QAAQ2D,KAAKhK,KAAAA,CAAM,GAAG;AACxB+L,iBAAS,KAAKqG,eAAenI,OAAMD,MAAMhK,OAAOgS,KAAAA;MAClD,WAAWrM,SAASqE,KAAKhK,KAAAA,CAAM,GAAG;AAChC+L,iBAAS,KAAKsG,gBAAgBpI,OAAMD,MAAMhK,OAAOgS,KAAAA;aAC5C;AACLjG,iBAAS,KAAKuG,mBAAmBrI,OAAMD,MAAMhK,OAAOgS,KAAAA;;AAGtD,YAAMO,6BAA6B,MAAMtQ,IAAIiK,KAAAA,MAAW,QAASiG,QAAQlQ,IAAIiK,KAAAA,IAASiG,KAAKjG,KAAM;AACjG,WAAKtL,IAAI,GAAGA,IAAIoR,OAAO,EAAEpR,GAAG;AAC1BqJ,QAAAA,MAAKqD,QAAQ1M,IAAIZ,KAAAA,IAASiC,MAAM8J,OAAOnL,CAAE;AACzC,YAAIqR,QAAQ;AACV,cAAIM,2BAA8B,GAAA;AAChCN,qBAAS;;AAEXE,iBAAOlQ;;MAEX;AACAgI,MAAAA,MAAKiI,UAAUD;;AAGjB,QAAInE,UAAU;AACZjC,mBAAa,MAAME,MAAAA;;EAEvB;EAaAuG,mBAAmBrI,OAAMD,MAAMhK,OAAOgS,OAAO;AAC3C,UAAM,EAAC9H,QAAQC,OAAAA,IAAUF;AACzB,UAAMiC,QAAQhC,OAAOG;AACrB,UAAM8B,QAAQhC,OAAOE;AACrB,UAAMmI,SAAStI,OAAOuI,UAAS;AAC/B,UAAMC,cAAcxI,WAAWC;AAC/B,UAAM4B,SAAS,IAAIvB,MAAMwH,KAAAA;AACzB,QAAIpR,GAAGuI,MAAMC;AAEb,SAAKxI,IAAI,GAAGuI,OAAO6I,OAAOpR,IAAIuI,MAAM,EAAEvI,GAAG;AACvCwI,MAAAA,SAAQxI,IAAIZ;AACZ+L,aAAOnL,CAAAA,IAAK;QACV,CAACsL,KAAAA,GAAQwG,eAAexI,OAAO6H,MAAMS,OAAOpJ,MAAAA,GAAQA,MAAAA;QACpD,CAAC+C,KAAAA,GAAQhC,OAAO4H,MAAM/H,KAAKZ,MAAAA,GAAQA,MAAAA;MACrC;IACF;AACA,WAAO2C;EACT;EAaAqG,eAAenI,OAAMD,MAAMhK,OAAOgS,OAAO;AACvC,UAAM,EAAC/J,QAAQC,OAAAA,IAAU+B;AACzB,UAAM8B,SAAS,IAAIvB,MAAMwH,KAAAA;AACzB,QAAIpR,GAAGuI,MAAMC,QAAOtI;AAEpB,SAAKF,IAAI,GAAGuI,OAAO6I,OAAOpR,IAAIuI,MAAM,EAAEvI,GAAG;AACvCwI,MAAAA,SAAQxI,IAAIZ;AACZc,aAAOkJ,KAAKZ,MAAM;AAClB2C,aAAOnL,CAAAA,IAAK;QACVuH,GAAGF,OAAO8J,MAAMjR,KAAK,CAAA,GAAIsI,MAAAA;QACzBhB,GAAGF,OAAO6J,MAAMjR,KAAK,CAAA,GAAIsI,MAAAA;MAC3B;IACF;AACA,WAAO2C;EACT;EAaAsG,gBAAgBpI,OAAMD,MAAMhK,OAAOgS,OAAO;AACxC,UAAM,EAAC/J,QAAQC,OAAAA,IAAU+B;AACzB,UAAM,EAAC0I,WAAW,KAAKC,WAAW,IAAA,IAAO,KAAKvE;AAC9C,UAAMtC,SAAS,IAAIvB,MAAMwH,KAAAA;AACzB,QAAIpR,GAAGuI,MAAMC,QAAOtI;AAEpB,SAAKF,IAAI,GAAGuI,OAAO6I,OAAOpR,IAAIuI,MAAM,EAAEvI,GAAG;AACvCwI,MAAAA,SAAQxI,IAAIZ;AACZc,aAAOkJ,KAAKZ,MAAM;AAClB2C,aAAOnL,CAAAA,IAAK;QACVuH,GAAGF,OAAO8J,MAAMc,iBAAiB/R,MAAM6R,QAAWvJ,GAAAA,MAAAA;QAClDhB,GAAGF,OAAO6J,MAAMc,iBAAiB/R,MAAM8R,QAAWxJ,GAAAA,MAAAA;MACpD;IACF;AACA,WAAO2C;EACT;EAKA+G,UAAU1J,QAAO;AACf,WAAO,KAAK4C,YAAYsB,QAAQlE,MAAM;EACxC;EAKA2J,eAAe3J,QAAO;AACpB,WAAO,KAAK4C,YAAYhC,KAAKZ,MAAM;EACrC;EAKAC,WAAW1B,OAAOoE,QAAQtC,MAAM;AAC9B,UAAMvK,QAAQ,KAAKA;AACnB,UAAM+K,QAAO,KAAK+B;AAClB,UAAM5E,QAAQ2E,OAAOpE,MAAM0C,IAAI;AAC/B,UAAMf,QAAQ;MACZxD,MAAMiD,wBAAwB7J,OAAO,IAAI;MACzCsH,QAAQuF,OAAOE,QAAQtE,MAAM0C,IAAI,EAAEmC;IACrC;AACA,WAAOnD,WAAWC,OAAOlC,OAAO6C,MAAKb,OAAO;MAACK;IAAI,CAAA;EACnD;EAKAuJ,sBAAsBC,OAAOtL,OAAOoE,QAAQzC,OAAO;AACjD,UAAM4J,cAAcnH,OAAOpE,MAAM0C,IAAI;AACrC,QAAIjD,QAAQ8L,gBAAgB,OAAOC,MAAMD;AACzC,UAAM1M,SAAS8C,SAASyC,OAAOE,QAAQtE,MAAM0C,IAAI;AACjD,QAAIf,SAAS9C,QAAQ;AACnB8C,YAAM9C,SAASA;AACfY,cAAQiC,WAAWC,OAAO4J,aAAa,KAAKlH,YAAY5C,KAAK;;AAE/D6J,UAAMlT,MAAMD,KAAKC,IAAIkT,MAAMlT,KAAKqH,KAAAA;AAChC6L,UAAM/Q,MAAMpC,KAAKoC,IAAI+Q,MAAM/Q,KAAKkF,KAAAA;EAClC;EAKAgM,UAAUzL,OAAOiG,UAAU;AACzB,UAAM3D,QAAO,KAAK+B;AAClB,UAAMsB,UAAUrD,MAAKqD;AACrB,UAAM2E,SAAShI,MAAKiI,WAAWvK,UAAUsC,MAAKC;AAC9C,UAAMf,OAAOmE,QAAQ3M;AACrB,UAAM0S,aAAa,KAAKzC,eAAejJ,KAAAA;AACvC,UAAM2B,QAAQqE,YAAYC,UAAU3D,OAAM,KAAK/K,KAAK;AACpD,UAAM+T,QAAQ;MAAClT,KAAKmL,OAAOE;MAAmBlJ,KAAKgJ,OAAOC;IAAiB;AAC3E,UAAM,EAACpL,KAAKuT,UAAUpR,KAAKqR,SAAQ,IAAIxI,cAAcsI,UAAAA;AACrD,QAAIzS,GAAGmL;AAEP,aAASyH,QAAQ;AACfzH,eAASuB,QAAQ1M,CAAE;AACnB,YAAM+I,aAAaoC,OAAOsH,WAAWhJ,IAAI;AACzC,aAAO,CAACR,eAASkC,OAAOpE,MAAM0C,IAAI,CAAC,KAAKiJ,WAAW3J,cAAc4J,WAAW5J;IAC9E;AAEA,SAAK/I,IAAI,GAAGA,IAAIuI,MAAM,EAAEvI,GAAG;AACzB,UAAI4S,MAAS,GAAA;AACX;;AAEF,WAAKR,sBAAsBC,OAAOtL,OAAOoE,QAAQzC,KAAAA;AACjD,UAAI2I,QAAQ;AAEV;;IAEJ;AACA,QAAIA,QAAQ;AAEV,WAAKrR,IAAIuI,OAAO,GAAGvI,KAAK,GAAG,EAAEA,GAAG;AAC9B,YAAI4S,MAAS,GAAA;AACX;;AAEF,aAAKR,sBAAsBC,OAAOtL,OAAOoE,QAAQzC,KAAAA;AACjD;MACF;;AAEF,WAAO2J;EACT;EAEAQ,mBAAmB9L,OAAO;AACxB,UAAMoE,SAAS,KAAKC,YAAYsB;AAChC,UAAM9G,SAAS,CAAA;AACf,QAAI5F,GAAGuI,MAAM/B;AAEb,SAAKxG,IAAI,GAAGuI,OAAO4C,OAAOpL,QAAQC,IAAIuI,MAAM,EAAEvI,GAAG;AAC/CwG,cAAQ2E,OAAOnL,CAAAA,EAAG+G,MAAM0C,IAAI;AAC5B,UAAIR,eAASzC,KAAQ,GAAA;AACnBZ,eAAO5E,KAAKwF,KAAAA;;IAEhB;AACA,WAAOZ;EACT;EAMAkN,iBAAiB;AACf,WAAO;EACT;EAKAC,iBAAiBvK,QAAO;AACtB,UAAMa,QAAO,KAAK+B;AAClB,UAAM9B,SAASD,MAAKC;AACpB,UAAMC,SAASF,MAAKE;AACpB,UAAM4B,SAAS,KAAK+G,UAAU1J,MAAAA;AAC9B,WAAO;MACLwK,OAAO1J,SAAS,KAAKA,OAAO2J,iBAAiB9H,OAAO7B,OAAOG,IAAI,CAAC,IAAI;MACpEjD,OAAO+C,SAAS,KAAKA,OAAO0J,iBAAiB9H,OAAO5B,OAAOE,IAAI,CAAC,IAAI;IACtE;EACF;EAKAhK,QAAQoJ,MAAM;AACZ,UAAMQ,QAAO,KAAK+B;AAClB,SAAKpH,OAAO6E,QAAQ,SAAA;AACpBQ,IAAAA,MAAK6J,QAAQrL,OAAOoH,eAAe,KAAKnJ,QAAQqN,MAAM/L,YAAYiC,MAAKhC,QAAQgC,MAAK/B,QAAQ,KAAKwL,eAAc,CAAA,CAAA,CAAA;EACjH;EAKA9O,OAAO6E,MAAM;EAAA;EAEb5I,OAAO;AACL,UAAMoN,MAAM,KAAKD;AACjB,UAAM9O,QAAQ,KAAKA;AACnB,UAAM+K,QAAO,KAAK+B;AAClB,UAAMgI,WAAW/J,MAAKD,QAAQ,CAAA;AAC9B,UAAMiK,OAAO/U,MAAMgV;AACnB,UAAMvP,SAAS,CAAA;AACf,UAAM3E,QAAQ,KAAKyO,cAAc;AACjC,UAAMuD,QAAQ,KAAKtD,cAAesF,SAASrT,SAASX;AACpD,UAAMmU,0BAA0B,KAAKzN,QAAQyN;AAC7C,QAAIvT;AAEJ,QAAIqJ,MAAK+C,SAAS;AAChB/C,MAAAA,MAAK+C,QAAQnM,KAAKoN,KAAKgG,MAAMjU,OAAOgS,KAAAA;;AAGtC,SAAKpR,IAAIZ,OAAOY,IAAIZ,QAAQgS,OAAO,EAAEpR,GAAG;AACtC,YAAMsM,UAAU8G,SAASpT,CAAE;AAC3B,UAAIsM,QAAQW,QAAQ;AAClB;;AAEF,UAAIX,QAAQvI,UAAUwP,yBAAyB;AAC7CxP,eAAO/C,KAAKsL,OAAAA;aACP;AACLA,gBAAQrM,KAAKoN,KAAKgG,IAAAA;;IAEtB;AAEA,SAAKrT,IAAI,GAAGA,IAAI+D,OAAOhE,QAAQ,EAAEC,GAAG;AAClC+D,aAAO/D,CAAAA,EAAGC,KAAKoN,KAAKgG,IAAAA;IACtB;EACF;EASAG,SAAShL,QAAOzE,QAAQ;AACtB,UAAM8E,OAAO9E,SAAS,WAAW;AACjC,WAAOyE,WAAUpK,UAAa,KAAKgN,YAAYgB,UAC3C,KAAKqH,6BAA6B5K,IAAAA,IAClC,KAAK6K,0BAA0BlL,UAAS,GAAGK,IAAK;EACtD;EAKAoI,WAAWzI,QAAOzE,QAAQ8E,MAAM;AAC9B,UAAMuD,UAAU,KAAKyC,WAAU;AAC/B,QAAI8E;AACJ,QAAInL,UAAS,KAAKA,SAAQ,KAAK4C,YAAYhC,KAAKrJ,QAAQ;AACtD,YAAMuM,UAAU,KAAKlB,YAAYhC,KAAKZ,MAAM;AAC5CmL,gBAAUrH,QAAQ2B,aACf3B,QAAQ2B,WAAW5B,kBAAkB,KAAK4E,WAAU,GAAIzI,QAAO8D,OAAO;AACzEqH,cAAQxI,SAAS,KAAK+G,UAAU1J,MAAAA;AAChCmL,cAAQnH,MAAMJ,QAAQhD,KAAKZ,MAAM;AACjCmL,cAAQnL,QAAQmL,QAAQpH,YAAY/D;WAC/B;AACLmL,gBAAU,KAAK1F,aACZ,KAAKA,WAAWhC,qBAAqB,KAAK3N,MAAM2S,WAAU,GAAI,KAAKzI,KAAK;AAC3EmL,cAAQvH,UAAUA;AAClBuH,cAAQnL,QAAQmL,QAAQ7K,eAAe,KAAKN;;AAG9CmL,YAAQ5P,SAAS,CAAC,CAACA;AACnB4P,YAAQ9K,OAAOA;AACf,WAAO8K;EACT;EAMAF,6BAA6B5K,MAAM;AACjC,WAAO,KAAK+K,uBAAuB,KAAKzF,mBAAmBjE,IAAIrB,IAAAA;EACjE;EAOA6K,0BAA0BlL,QAAOK,MAAM;AACrC,WAAO,KAAK+K,uBAAuB,KAAKxF,gBAAgBlE,IAAIrB,MAAML,MAAAA;EACpE;EAKAoL,uBAAuBC,aAAahL,OAAO,WAAWL,QAAO;AAC3D,UAAMzE,SAAS8E,SAAS;AACxB,UAAMiL,QAAQ,KAAKxG;AACnB,UAAMyG,WAAWF,cAAc,MAAMhL;AACrC,UAAMgE,SAASiH,MAAMC,QAAS;AAC9B,UAAMC,UAAU,KAAKjG,uBAAuBkG,QAAQzL,MAAAA;AACpD,QAAIqE,QAAQ;AACV,aAAOD,iBAAiBC,QAAQmH,OAAAA;;AAElC,UAAMrP,SAAS,KAAKrG,MAAMqG;AAC1B,UAAMiM,YAAYjM,OAAOuP,wBAAwB,KAAK1G,OAAOqG,WAAAA;AAC7D,UAAMM,WAAWpQ,SAAS;MAAC,GAAG8P;MAAoB;MAASA;MAAa;QAAM;MAACA;MAAa;IAAG;AAC/F,UAAM/C,SAASnM,OAAOoM,gBAAgB,KAAKlC,WAAU,GAAI+B,SAAAA;AACzD,UAAMwD,SAAQnP,OAAOC,KAAKC,SAASiO,SAASS,WAAY,CAAA;AAGxD,UAAMF,UAAU,MAAM,KAAK1C,WAAWzI,QAAOzE,QAAQ8E,IAAAA;AACrD,UAAMjD,SAASjB,OAAO0P,oBAAoBvD,QAAQsD,QAAOT,SAASQ,QAAAA;AAElE,QAAIvO,OAAOM,SAAS;AAGlBN,aAAOM,UAAU8N;AAKjBF,YAAMC,QAAS,IAAG9O,OAAOqP,OAAO1H,iBAAiBhH,QAAQoO,OAAAA,CAAAA;;AAG3D,WAAOpO;EACT;EAMA2O,mBAAmB/L,QAAOgM,YAAYzQ,QAAQ;AAC5C,UAAMzF,QAAQ,KAAKA;AACnB,UAAMwV,QAAQ,KAAKxG;AACnB,UAAMyG,WAAW,aAAaS;AAC9B,UAAM3H,SAASiH,MAAMC,QAAS;AAC9B,QAAIlH,QAAQ;AACV,aAAOA;;AAET,QAAI/G;AACJ,QAAIxH,MAAMwH,QAAQV,cAAc,OAAO;AACrC,YAAMT,SAAS,KAAKrG,MAAMqG;AAC1B,YAAMiM,YAAYjM,OAAO8P,0BAA0B,KAAKjH,OAAOgH,UAAAA;AAC/D,YAAM1D,SAASnM,OAAOoM,gBAAgB,KAAKlC,WAAU,GAAI+B,SAAAA;AACzD9K,gBAAUnB,OAAOqM,eAAeF,QAAQ,KAAKG,WAAWzI,QAAOzE,QAAQyQ,UAAAA,CAAAA;;AAEzE,UAAMxO,aAAa,IAAItB,WAAWpG,OAAOwH,WAAWA,QAAQE,UAAU;AACtE,QAAIF,WAAWA,QAAQ4O,YAAY;AACjCZ,YAAMC,QAAAA,IAAY9O,OAAOqP,OAAOtO,UAAAA;;AAElC,WAAOA;EACT;EAMA2O,iBAAiB7O,SAAS;AACxB,QAAI,CAACA,QAAQI,SAAS;AACpB;;AAEF,WAAO,KAAK0H,mBAAmB,KAAKA,iBAAiB3I,OAAOyB,OAAO,CAAA,GAAIZ,OAAO;EAChF;EAMA8O,eAAe/L,MAAMgM,eAAe;AAClC,WAAO,CAACA,iBAAiBlI,mBAAmB9D,IAAAA,KAAS,KAAKvK,MAAMwW;EAClE;EAKAC,kBAAkB3V,OAAOyJ,MAAM;AAC7B,UAAMmM,YAAY,KAAKtB,0BAA0BtU,OAAOyJ,IAAAA;AACxD,UAAMoM,0BAA0B,KAAKrH;AACrC,UAAMiH,gBAAgB,KAAKF,iBAAiBK,SAAAA;AAC5C,UAAMJ,iBAAiB,KAAKA,eAAe/L,MAAMgM,aAAAA,KAAmBA,kBAAkBI;AACtF,SAAKC,oBAAoBL,eAAehM,MAAMmM,SAAAA;AAC9C,WAAO;MAACH;MAAeD;IAAc;EACvC;EAMAO,cAAc7I,SAAS9D,QAAO9C,YAAYmD,MAAM;AAC9C,QAAI8D,mBAAmB9D,IAAO,GAAA;AAC5B5D,aAAOyB,OAAO4F,SAAS5G,UAAAA;WAClB;AACL,WAAK6O,mBAAmB/L,QAAOK,IAAM7E,EAAAA,OAAOsI,SAAS5G,UAAAA;;EAEzD;EAMAwP,oBAAoBL,eAAehM,MAAMhD,YAAY;AACnD,QAAIgP,iBAAiB,CAAClI,mBAAmB9D,IAAO,GAAA;AAC9C,WAAK0L,mBAAmBnW,QAAWyK,IAAM7E,EAAAA,OAAO6Q,eAAehP,UAAAA;;EAEnE;EAKAuP,UAAU9I,SAAS9D,QAAOK,MAAM9E,QAAQ;AACtCuI,YAAQvI,SAASA;AACjB,UAAM+B,UAAU,KAAK0N,SAAShL,QAAOzE,MAAAA;AACrC,SAAKwQ,mBAAmB/L,QAAOK,MAAM9E,MAAQC,EAAAA,OAAOsI,SAAS;MAG3DxG,SAAS,CAAE/B,UAAU,KAAK4Q,iBAAiB7O,OAAaA,KAAAA;IAC1D,CAAA;EACF;EAEAuP,iBAAiB/I,SAASxD,cAAcN,QAAO;AAC7C,SAAK4M,UAAU9I,SAAS9D,QAAO,UAAU,KAAK;EAChD;EAEA8M,cAAchJ,SAASxD,cAAcN,QAAO;AAC1C,SAAK4M,UAAU9I,SAAS9D,QAAO,UAAU,IAAI;EAC/C;EAKA+M,2BAA2B;AACzB,UAAMjJ,UAAU,KAAKlB,YAAYgB;AAEjC,QAAIE,SAAS;AACX,WAAK8I,UAAU9I,SAASlO,QAAW,UAAU,KAAK;;EAEtD;EAKAoX,wBAAwB;AACtB,UAAMlJ,UAAU,KAAKlB,YAAYgB;AAEjC,QAAIE,SAAS;AACX,WAAK8I,UAAU9I,SAASlO,QAAW,UAAU,IAAI;;EAErD;EAKAuS,gBAAgBH,kBAAkB;AAChC,UAAMpH,OAAO,KAAKsE;AAClB,UAAM0F,WAAW,KAAKhI,YAAYhC;AAGlC,eAAW,CAAC3E,QAAQgR,MAAMC,IAAAA,KAAS,KAAKxH,WAAW;AACjD,WAAKzJ,MAAO,EAACgR,MAAMC,IAAAA;IACrB;AACA,SAAKxH,YAAY,CAAA;AAEjB,UAAMyH,UAAUvC,SAASrT;AACzB,UAAM6V,UAAUxM,KAAKrJ;AACrB,UAAMqR,QAAQlS,KAAKC,IAAIyW,SAASD,OAAAA;AAEhC,QAAIvE,OAAO;AAKT,WAAKD,MAAM,GAAGC,KAAAA;;AAGhB,QAAIwE,UAAUD,SAAS;AACrB,WAAKE,gBAAgBF,SAASC,UAAUD,SAASnF,gBAAAA;eACxCoF,UAAUD,SAAS;AAC5B,WAAKG,gBAAgBF,SAASD,UAAUC,OAAAA;;EAE5C;EAKAC,gBAAgBzW,OAAOgS,OAAOZ,mBAAmB,MAAM;AACrD,UAAMnH,QAAO,KAAK+B;AAClB,UAAMhC,OAAOC,MAAKD;AAClB,UAAMjC,MAAM/H,QAAQgS;AACpB,QAAIpR;AAEJ,UAAM+V,OAAO,CAACC,QAAQ;AACpBA,UAAIjW,UAAUqR;AACd,WAAKpR,IAAIgW,IAAIjW,SAAS,GAAGC,KAAKmH,KAAKnH,KAAK;AACtCgW,YAAIhW,CAAE,IAAGgW,IAAIhW,IAAIoR,KAAM;MACzB;IACF;AACA2E,SAAK3M,IAAAA;AAEL,SAAKpJ,IAAIZ,OAAOY,IAAImH,KAAK,EAAEnH,GAAG;AAC5BoJ,WAAKpJ,CAAE,IAAG,IAAI,KAAKoO,gBAAe;IACpC;AAEA,QAAI,KAAKX,UAAU;AACjBsI,WAAK1M,MAAKqD,OAAO;;AAEnB,SAAKyE,MAAM/R,OAAOgS,KAAAA;AAElB,QAAIZ,kBAAkB;AACpB,WAAKyF,eAAe7M,MAAMhK,OAAOgS,OAAO,OAAA;;EAE5C;EAEA6E,eAAe3J,SAASlN,OAAOgS,OAAOvI,MAAM;EAAA;EAK5CiN,gBAAgB1W,OAAOgS,OAAO;AAC5B,UAAM/H,QAAO,KAAK+B;AAClB,QAAI,KAAKqC,UAAU;AACjB,YAAMyI,UAAU7M,MAAKqD,QAAQyJ,OAAO/W,OAAOgS,KAAAA;AAC3C,UAAI/H,MAAK6D,UAAU;AACjBT,oBAAYpD,OAAM6M,OAAAA;;;AAGtB7M,IAAAA,MAAKD,KAAK+M,OAAO/W,OAAOgS,KAAAA;EAC1B;EAKAgF,MAAMC,MAAM;AACV,QAAI,KAAK5I,UAAU;AACjB,WAAKS,UAAUlN,KAAKqV,IAAAA;WACf;AACL,YAAM,CAAC5R,QAAQgR,MAAMC,IAAAA,IAAQW;AAC7B,WAAK5R,MAAO,EAACgR,MAAMC,IAAAA;;AAErB,SAAKpX,MAAMgY,aAAatV,KAAK;MAAC,KAAKwH;MAAU6N,GAAAA;IAAK,CAAA;EACpD;EAEAE,cAAc;AACZ,UAAMnF,QAAQoF,UAAUzW;AACxB,SAAKqW,MAAM;MAAC;MAAmB,KAAKvH,WAAU,EAAGzF,KAAKrJ,SAASqR;MAAOA;IAAM,CAAA;EAC9E;EAEAqF,aAAa;AACX,SAAKL,MAAM;MAAC;MAAmB,KAAKhL,YAAYhC,KAAKrJ,SAAS;MAAG;IAAE,CAAA;EACrE;EAEA2W,eAAe;AACb,SAAKN,MAAM;MAAC;MAAmB;MAAG;IAAE,CAAA;EACtC;EAEAO,cAAcvX,OAAOgS,OAAO;AAC1B,QAAIA,OAAO;AACT,WAAKgF,MAAM;QAAC;QAAmBhX;QAAOgS;MAAM,CAAA;;AAE9C,UAAMwF,WAAWJ,UAAUzW,SAAS;AACpC,QAAI6W,UAAU;AACZ,WAAKR,MAAM;QAAC;QAAmBhX;QAAOwX;MAAS,CAAA;;EAEnD;EAEAC,iBAAiB;AACf,SAAKT,MAAM;MAAC;MAAmB;MAAGI,UAAUzW;IAAO,CAAA;EACrD;AACF;AAt0BE,cALmBoN,mBAKZhI,YAAW,CAAA;AAKlB,cAVmBgI,mBAUZgB,sBAAqB;AAK5B,cAfmBhB,mBAeZiB,mBAAkB;AClP3B,SAAS0I,kBAAkB/P,OAAOtI,MAAM;AACtC,MAAI,CAACsI,MAAMgQ,OAAOC,MAAM;AACtB,UAAMC,eAAelQ,MAAMiE,wBAAwBvM,IAAAA;AACnD,QAAImH,SAAS,CAAA;AAEb,aAAS5F,IAAI,GAAGuI,OAAO0O,aAAalX,QAAQC,IAAIuI,MAAMvI,KAAK;AACzD4F,eAASA,OAAOsR,OAAOD,aAAajX,CAAAA,EAAGkL,WAAW2H,mBAAmB9L,KAAAA,CAAAA;IACvE;AACAA,UAAMgQ,OAAOC,OAAOG,aAAavR,OAAOwR,KAAK,CAACC,GAAGrP,MAAMqP,IAAIrP,CAAAA,CAAAA;;AAE7D,SAAOjB,MAAMgQ,OAAOC;AACtB;AAMA,SAASM,qBAAqBjO,OAAM;AAClC,QAAMtC,QAAQsC,MAAKC;AACnB,QAAM1D,SAASkR,kBAAkB/P,OAAOsC,MAAK5K,IAAI;AACjD,MAAIU,MAAM4H,MAAMwQ;AAChB,MAAIvX,GAAGuI,MAAMiP,MAAMjG;AACnB,QAAMkG,mBAAmB,MAAM;AAC7B,QAAID,SAAS,SAASA,SAAS,QAAQ;AAErC;;AAEF,QAAIvD,QAAQ1C,IAAO,GAAA;AAEjBpS,YAAMD,KAAKC,IAAIA,KAAKD,KAAKwY,IAAIF,OAAOjG,IAASpS,KAAAA,GAAAA;;AAE/CoS,WAAOiG;EACT;AAEA,OAAKxX,IAAI,GAAGuI,OAAO3C,OAAO7F,QAAQC,IAAIuI,MAAM,EAAEvI,GAAG;AAC/CwX,WAAOzQ,MAAM4Q,iBAAiB/R,OAAO5F,CAAE,CAAA;AACvCyX,qBAAAA;EACF;AAEAlG,SAAOnT;AACP,OAAK4B,IAAI,GAAGuI,OAAOxB,MAAM6Q,MAAM7X,QAAQC,IAAIuI,MAAM,EAAEvI,GAAG;AACpDwX,WAAOzQ,MAAM8Q,gBAAgB7X,CAAAA;AAC7ByX,qBAAAA;EACF;AAEA,SAAOtY;AACT;AAQA,SAAS2Y,yBAAyBtP,QAAOuP,OAAOjS,SAASkS,YAAY;AACnE,QAAMC,YAAYnS,QAAQoS;AAC1B,MAAIzR,MAAM0R;AAEV,MAAIC,cAAcH,SAAY,GAAA;AAC5BxR,WAAOsR,MAAM5Y,MAAM2G,QAAQuS;AAC3BF,YAAQrS,QAAQwS;SACX;AAIL7R,WAAOwR,YAAYD;AACnBG,YAAQ;;AAGV,SAAO;IACLI,OAAO9R,OAAOuR;IACdG;IACA/Y,OAAO2Y,MAAMS,OAAOhQ,MAAAA,IAAU/B,OAAO;EACvC;AACF;AAQA,SAASgS,0BAA0BjQ,QAAOuP,OAAOjS,SAASkS,YAAY;AACpE,QAAMQ,SAAST,MAAMS;AACrB,QAAMhB,OAAOgB,OAAOhQ,MAAM;AAC1B,MAAI+I,OAAO/I,SAAQ,IAAIgQ,OAAOhQ,SAAQ,CAAA,IAAK;AAC3C,MAAIkQ,OAAOlQ,SAAQgQ,OAAOzY,SAAS,IAAIyY,OAAOhQ,SAAQ,CAAE,IAAG;AAC3D,QAAMmQ,UAAU7S,QAAQuS;AAExB,MAAI9G,SAAS,MAAM;AAGjBA,WAAOiG,QAAQkB,SAAS,OAAOX,MAAM5Q,MAAM4Q,MAAM3Y,QAAQsZ,OAAOlB;;AAGlE,MAAIkB,SAAS,MAAM;AAEjBA,WAAOlB,OAAOA,OAAOjG;;AAGvB,QAAMnS,QAAQoY,QAAQA,OAAOtY,KAAKC,IAAIoS,MAAMmH,IAAI,KAAK,IAAIC;AACzD,QAAMlS,OAAOvH,KAAKwY,IAAIgB,OAAOnH,IAAAA,IAAQ,IAAIoH;AAEzC,SAAO;IACLJ,OAAO9R,OAAOuR;IACdG,OAAOrS,QAAQwS;IACflZ;EACF;AACF;AAEA,SAASwZ,cAAcC,OAAO3Y,MAAMqJ,QAAQvJ,GAAG;AAC7C,QAAM8Y,aAAavP,OAAO4H,MAAM0H,MAAM,CAAA,GAAI7Y,CAAAA;AAC1C,QAAM+Y,WAAWxP,OAAO4H,MAAM0H,MAAM,CAAA,GAAI7Y,CAAAA;AACxC,QAAMb,MAAMD,KAAKC,IAAI2Z,YAAYC,QAAAA;AACjC,QAAMzX,MAAMpC,KAAKoC,IAAIwX,YAAYC,QAAAA;AACjC,MAAIC,WAAW7Z;AACf,MAAI8Z,SAAS3X;AAEb,MAAIpC,KAAKwY,IAAIvY,GAAAA,IAAOD,KAAKwY,IAAIpW,GAAM,GAAA;AACjC0X,eAAW1X;AACX2X,aAAS9Z;;AAKXe,OAAKqJ,OAAOE,IAAI,IAAIwP;AAEpB/Y,OAAKgZ,UAAU;IACbF;IACAC;IACA7Z,OAAO0Z;IACP3R,KAAK4R;IACL5Z;IACAmC;EACF;AACF;AAEA,SAAS6X,WAAWN,OAAO3Y,MAAMqJ,QAAQvJ,GAAG;AAC1C,MAAIyF,QAAQoT,KAAQ,GAAA;AAClBD,kBAAcC,OAAO3Y,MAAMqJ,QAAQvJ,CAAAA;SAC9B;AACLE,SAAKqJ,OAAOE,IAAI,IAAIF,OAAO4H,MAAM0H,OAAO7Y,CAAAA;;AAE1C,SAAOE;AACT;AAEA,SAASkZ,sBAAsB/P,OAAMD,MAAMhK,OAAOgS,OAAO;AACvD,QAAM9H,SAASD,MAAKC;AACpB,QAAMC,SAASF,MAAKE;AACpB,QAAMqI,SAAStI,OAAOuI,UAAS;AAC/B,QAAMC,cAAcxI,WAAWC;AAC/B,QAAM4B,SAAS,CAAA;AACf,MAAInL,GAAGuI,MAAMrI,MAAM2Y;AAEnB,OAAK7Y,IAAIZ,OAAOmJ,OAAOnJ,QAAQgS,OAAOpR,IAAIuI,MAAM,EAAEvI,GAAG;AACnD6Y,YAAQzP,KAAKpJ,CAAE;AACfE,WAAO,CAAA;AACPA,SAAKoJ,OAAOG,IAAI,IAAIqI,eAAexI,OAAO6H,MAAMS,OAAO5R,CAAAA,GAAIA,CAAAA;AAC3DmL,WAAOnK,KAAKmY,WAAWN,OAAO3Y,MAAMqJ,QAAQvJ,CAAAA,CAAAA;EAC9C;AACA,SAAOmL;AACT;AAEA,SAASkO,WAAWC,QAAQ;AAC1B,SAAOA,UAAUA,OAAON,aAAa5a,UAAakb,OAAOL,WAAW7a;AACtE;AAEA,SAASmb,QAAQ9S,MAAM8C,QAAQiQ,YAAY;AACzC,MAAI/S,SAAS,GAAG;AACd,WAAOyC,KAAKzC,IAAAA;;AAEd,UAAQ8C,OAAOkQ,aAAY,IAAK,IAAI,OAAOlQ,OAAOpK,OAAOqa,aAAa,IAAI;AAC5E;AAEA,SAASE,YAAYhU,YAAY;AAC/B,MAAIwB,SAAS9H,OAAO+H,KAAKM,KAAKE;AAC9B,MAAIjC,WAAWiU,YAAY;AACzBzS,cAAUxB,WAAWkU,OAAOlU,WAAW6B;AACvCnI,YAAQ;AACR+H,UAAM;SACD;AACLD,cAAUxB,WAAWkU,OAAOlU,WAAW8B;AACvCpI,YAAQ;AACR+H,UAAM;;AAER,MAAID,SAAS;AACXO,UAAM;AACNE,aAAS;SACJ;AACLF,UAAM;AACNE,aAAS;;AAEX,SAAO;IAACvI;IAAO+H;IAAKD;IAASO;IAAKE;EAAM;AAC1C;AAEA,SAASkS,iBAAiBnU,YAAYI,SAAS4C,OAAOF,QAAO;AAC3D,MAAIsR,OAAOhU,QAAQiU;AACnB,QAAMzV,MAAM,CAAA;AAEZ,MAAI,CAACwV,MAAM;AACTpU,eAAWqU,gBAAgBzV;AAC3B;;AAGF,MAAIwV,SAAS,MAAM;AACjBpU,eAAWqU,gBAAgB;MAACtS,KAAK;MAAMC,OAAO;MAAMC,QAAQ;MAAMC,MAAM;IAAI;AAC5E;;AAGF,QAAM,EAACxI,OAAO+H,KAAKD,SAASO,KAAKE,OAAAA,IAAU+R,YAAYhU,UAAAA;AAEvD,MAAIoU,SAAS,YAAYpR,OAAO;AAC9BhD,eAAWsU,qBAAqB;AAChC,SAAKtR,MAAM+C,QAAQ,OAAOjD,QAAO;AAC/BsR,aAAOrS;gBACGiB,MAAMgD,WAAW,OAAOlD,QAAO;AACzCsR,aAAOnS;WACF;AACLrD,UAAI2V,UAAUtS,QAAQvI,OAAO+H,KAAKD,OAAAA,CAAAA,IAAY;AAC9C4S,aAAOrS;;;AAIXnD,MAAI2V,UAAUH,MAAM1a,OAAO+H,KAAKD,OAAAA,CAAAA,IAAY;AAC5CxB,aAAWqU,gBAAgBzV;AAC7B;AAEA,SAAS2V,UAAUH,MAAMzC,GAAGrP,GAAGd,SAAS;AACtC,MAAIA,SAAS;AACX4S,WAAOI,KAAKJ,MAAMzC,GAAGrP,CAAAA;AACrB8R,WAAOK,SAASL,MAAM9R,GAAGqP,CAAAA;SACpB;AACLyC,WAAOK,SAASL,MAAMzC,GAAGrP,CAAAA;;AAE3B,SAAO8R;AACT;AAEA,SAASI,KAAKE,MAAMC,IAAIC,IAAI;AAC1B,SAAOF,SAASC,KAAKC,KAAKF,SAASE,KAAKD,KAAKD;AAC/C;AAEA,SAASD,SAASI,GAAGnb,OAAO+H,KAAK;AAC/B,SAAOoT,MAAM,UAAUnb,QAAQmb,MAAM,QAAQpT,MAAMoT;AACrD;AAEA,SAASC,iBAAiB9U,YAAY,EAAC+U,cAAAA,GAAgBtC,OAAO;AAC5DzS,aAAW+U,gBAAgBA,kBAAkB,SACzCtC,UAAU,IAAI,OAAO,IACrBsC;AACN;AAEe,IAAMC,gBAAN,cAA4BvN,kBAAAA;EAgDzCuE,mBAAmBrI,OAAMD,MAAMhK,OAAOgS,OAAO;AAC3C,WAAOgI,sBAAsB/P,OAAMD,MAAMhK,OAAOgS,KAAAA;EAClD;EAOAI,eAAenI,OAAMD,MAAMhK,OAAOgS,OAAO;AACvC,WAAOgI,sBAAsB/P,OAAMD,MAAMhK,OAAOgS,KAAAA;EAClD;EAOAK,gBAAgBpI,OAAMD,MAAMhK,OAAOgS,OAAO;AACxC,UAAM,EAAC9H,QAAQC,OAAAA,IAAUF;AACzB,UAAM,EAAC0I,WAAW,KAAKC,WAAW,IAAA,IAAO,KAAKvE;AAC9C,UAAMjE,WAAWF,OAAOG,SAAS,MAAMsI,WAAWC;AAClD,UAAMtI,WAAWH,OAAOE,SAAS,MAAMsI,WAAWC;AAClD,UAAM7G,SAAS,CAAA;AACf,QAAInL,GAAGuI,MAAMrI,MAAMya;AACnB,SAAK3a,IAAIZ,OAAOmJ,OAAOnJ,QAAQgS,OAAOpR,IAAIuI,MAAM,EAAEvI,GAAG;AACnD2a,YAAMvR,KAAKpJ,CAAE;AACbE,aAAO,CAAA;AACPA,WAAKoJ,OAAOG,IAAI,IAAIH,OAAO6H,MAAMc,iBAAiB0I,KAAKnR,QAAWxJ,GAAAA,CAAAA;AAClEmL,aAAOnK,KAAKmY,WAAWlH,iBAAiB0I,KAAKjR,QAAAA,GAAWxJ,MAAMqJ,QAAQvJ,CAAAA,CAAAA;IACxE;AACA,WAAOmL;EACT;EAKAiH,sBAAsBC,OAAOtL,OAAOoE,QAAQzC,OAAO;AACjD,UAAM0J,sBAAsBC,OAAOtL,OAAOoE,QAAQzC,KAAAA;AAClD,UAAM4Q,SAASnO,OAAO+N;AACtB,QAAII,UAAUvS,UAAU,KAAKqE,YAAY7B,QAAQ;AAE/C8I,YAAMlT,MAAMD,KAAKC,IAAIkT,MAAMlT,KAAKma,OAAOna,GAAG;AAC1CkT,YAAM/Q,MAAMpC,KAAKoC,IAAI+Q,MAAM/Q,KAAKgY,OAAOhY,GAAG;;EAE9C;EAMAwR,iBAAiB;AACf,WAAO;EACT;EAKAC,iBAAiBvK,QAAO;AACtB,UAAMa,QAAO,KAAK+B;AAClB,UAAM,EAAC9B,QAAQC,OAAAA,IAAUF;AACzB,UAAM8B,SAAS,KAAK+G,UAAU1J,MAAAA;AAC9B,UAAM8Q,SAASnO,OAAO+N;AACtB,UAAM1S,QAAQ6S,WAAWC,MACrB,IAAA,MAAMA,OAAOla,QAAQ,OAAOka,OAAOnS,MAAM,MACzC,KAAKoC,OAAO0J,iBAAiB9H,OAAO5B,OAAOE,IAAI,CAAC;AAEpD,WAAO;MACLuJ,OAAO,KAAK1J,OAAO2J,iBAAiB9H,OAAO7B,OAAOG,IAAI,CAAC;MACvDjD;IACF;EACF;EAEA6H,aAAa;AACX,SAAKN,sBAAsB;AAE3B,UAAMM,WAAU;AAEhB,UAAMhF,QAAO,KAAK+B;AAClB/B,IAAAA,MAAKX,QAAQ,KAAKmG,WAAU,EAAGnG;EACjC;EAEA1E,OAAO6E,MAAM;AACX,UAAMQ,QAAO,KAAK+B;AAClB,SAAK6K,eAAe5M,MAAKD,MAAM,GAAGC,MAAKD,KAAKrJ,QAAQ8I,IAAAA;EACtD;EAEAoN,eAAe2E,MAAMxb,OAAOgS,OAAOvI,MAAM;AACvC,UAAMoH,QAAQpH,SAAS;AACvB,UAAM,EAACL,OAAAA,QAAO4C,aAAa,EAAC7B,OAAAA,EAAO,IAAI;AACvC,UAAMqQ,OAAOrQ,OAAOsR,aAAY;AAChC,UAAMlB,aAAapQ,OAAOkQ,aAAY;AACtC,UAAM1B,QAAQ,KAAK+C,UAAS;AAC5B,UAAM,EAACjG,eAAeD,eAAc,IAAI,KAAKG,kBAAkB3V,OAAOyJ,IAAAA;AAEtE,aAAS7I,IAAIZ,OAAOY,IAAIZ,QAAQgS,OAAOpR,KAAK;AAC1C,YAAMmL,SAAS,KAAK+G,UAAUlS,CAAAA;AAC9B,YAAM+a,UAAU9K,SAASmI,cAAcjN,OAAO5B,OAAOE,IAAI,CAAC,IAAI;QAACmQ;QAAMoB,MAAMpB;MAAI,IAAI,KAAKqB,yBAAyBjb,CAAE;AACnH,YAAMkb,UAAU,KAAKC,yBAAyBnb,GAAG+X,KAAAA;AACjD,YAAMrP,SAASyC,OAAOE,WAAW,CAAA,GAAI9B,OAAOE,IAAI;AAEhD,YAAM/D,aAAa;QACjBiU;QACAC,MAAMmB,QAAQnB;QACdI,oBAAoB,CAACtR,SAAS2Q,WAAWlO,OAAO+N,OAAO,KAAM1Q,WAAUE,MAAM+C,QAAQjD,WAAUE,MAAMgD;QACrGnE,GAAGoS,aAAaoB,QAAQC,OAAOE,QAAQE;QACvC5T,GAAGmS,aAAauB,QAAQE,SAASL,QAAQC;QACzCK,QAAQ1B,aAAauB,QAAQzU,OAAOvH,KAAKwY,IAAIqD,QAAQtU,IAAI;QACzD6U,OAAO3B,aAAaza,KAAKwY,IAAIqD,QAAQtU,IAAI,IAAIyU,QAAQzU;MACvD;AAEA,UAAImO,gBAAgB;AAClBlP,mBAAWI,UAAU+O,iBAAiB,KAAKnB,0BAA0B1T,GAAG4a,KAAK5a,CAAE,EAAC+D,SAAS,WAAW8E,IAAI;;AAE1G,YAAM/C,UAAUJ,WAAWI,WAAW8U,KAAK5a,CAAAA,EAAG8F;AAC9C+T,uBAAiBnU,YAAYI,SAAS4C,OAAOF,MAAAA;AAC7CgS,uBAAiB9U,YAAYI,SAASiS,MAAMI,KAAK;AACjD,WAAKhD,cAAcyF,KAAK5a,CAAE,GAAEA,GAAG0F,YAAYmD,IAAAA;IAC7C;EACF;EASA0S,WAAWC,MAAMjP,WAAW;AAC1B,UAAM,EAACjD,OAAM,IAAI,KAAK8B;AACtB,UAAM/C,WAAWiB,OAAO0B,wBAAwB,KAAKwC,KAAK,EACvDzB,OAAO1C,CAAAA,UAAQA,MAAK6B,WAAWpF,QAAQ2V,OAAO;AACjD,UAAM3R,UAAUR,OAAOxD,QAAQgE;AAC/B,UAAMY,SAAS,CAAA;AACf,UAAMgR,gBAAgB,KAAKtQ,YAAYF,WAAWgH,UAAU3F,SAAAA;AAC5D,UAAMoP,cAAcD,iBAAiBA,cAAcpS,OAAOG,IAAI;AAE9D,UAAMmS,WAAW,CAACvS,UAAS;AACzB,YAAM8B,SAAS9B,MAAKqD,QAAQmP,KAAK3b,CAAAA,SAAQA,KAAKoJ,OAAOG,IAAI,MAAMkS,WAAAA;AAC/D,YAAMG,MAAM3Q,UAAUA,OAAO9B,MAAKE,OAAOE,IAAI;AAE7C,UAAI2O,cAAc0D,GAAQC,KAAAA,MAAMD,GAAM,GAAA;AACpC,eAAO;;IAEX;AAEA,eAAWzS,SAAQhB,UAAU;AAC3B,UAAIkE,cAAcnO,UAAawd,SAASvS,KAAO,GAAA;AAC7C;;AAQF,UAAIS,YAAY,SAASY,OAAOsR,QAAQ3S,MAAKX,KAAK,MAAM,MACzDoB,YAAY1L,UAAaiL,MAAKX,UAAUtK,QAAY;AACjDsM,eAAO1J,KAAKqI,MAAKX,KAAK;;AAExB,UAAIW,MAAKb,UAAUgT,MAAM;AACvB;;IAEJ;AAKA,QAAI,CAAC9Q,OAAO3K,QAAQ;AAClB2K,aAAO1J,KAAK5C,MAAAA;;AAGd,WAAOsM;EACT;EAMAuR,eAAezT,QAAO;AACpB,WAAO,KAAK+S,WAAWnd,QAAWoK,MAAAA,EAAOzI;EAC3C;EAUAmc,eAAepT,cAAcqT,MAAM5P,WAAW;AAC5C,UAAM7B,SAAS,KAAK6Q,WAAWzS,cAAcyD,SAAAA;AAC7C,UAAM/D,SAAQ,SAAUpK,SACpBsM,OAAOsR,QAAQG,IACf,IAAA;AAEJ,WAAQ3T,WAAU,KACdkC,OAAO3K,SAAS,IAChByI;EACN;EAKAsS,YAAY;AACV,UAAM7T,OAAO,KAAKnB;AAClB,UAAMuD,QAAO,KAAK+B;AAClB,UAAM9B,SAASD,MAAKC;AACpB,UAAMkP,SAAS,CAAA;AACf,QAAIxY,GAAGuI;AAEP,SAAKvI,IAAI,GAAGuI,OAAOc,MAAKD,KAAKrJ,QAAQC,IAAIuI,MAAM,EAAEvI,GAAG;AAClDwY,aAAOxX,KAAKsI,OAAOqO,iBAAiB,KAAKzF,UAAUlS,CAAE,EAACsJ,OAAOG,IAAI,GAAGzJ,CAAAA,CAAAA;IACtE;AAEA,UAAMkY,eAAejR,KAAKiR;AAC1B,UAAM/Y,MAAM+Y,gBAAgBZ,qBAAqBjO,KAAAA;AAEjD,WAAO;MACLlK;MACAqZ;MACApZ,OAAOkK,OAAO8S;MACdjV,KAAKmC,OAAO+S;MACZrE,YAAY,KAAKiE,eAAc;MAC/BlV,OAAOuC;MACPmS,SAASxU,KAAKwU;MAEdtD,OAAOD,eAAe,IAAIjR,KAAKoR,qBAAqBpR,KAAKqR;IAC3D;EACF;EAMA2C,yBAAyBzS,QAAO;AAC9B,UAAM,EAAC4C,aAAa,EAAC7B,QAAQ2D,UAAU1E,OAAOM,aAAAA,GAAehD,SAAS,EAAC8T,MAAM0C,WAAWC,aAAAA,EAAa,IAAI;AACzG,UAAM/C,aAAa8C,aAAa;AAChC,UAAMnR,SAAS,KAAK+G,UAAU1J,MAAAA;AAC9B,UAAM8Q,SAASnO,OAAO+N;AACtB,UAAMsD,WAAWnD,WAAWC,MAAAA;AAC5B,QAAI9S,QAAQ2E,OAAO5B,OAAOE,IAAI;AAC9B,QAAIrK,QAAQ;AACZ,QAAIW,SAASmN,WAAW,KAAKzE,WAAWc,QAAQ4B,QAAQ+B,QAAAA,IAAY1G;AACpE,QAAIwU,MAAMvU;AAEV,QAAI1G,WAAWyG,OAAO;AACpBpH,cAAQW,SAASyG;AACjBzG,eAASyG;;AAGX,QAAIgW,UAAU;AACZhW,cAAQ8S,OAAON;AACfjZ,eAASuZ,OAAOL,SAASK,OAAON;AAEhC,UAAIxS,UAAU,KAAK0C,KAAK1C,KAAAA,MAAW0C,KAAKoQ,OAAOL,MAAM,GAAG;AACtD7Z,gBAAQ;;AAEVA,eAASoH;;AAGX,UAAMsS,aAAa,CAACV,cAAckE,SAAAA,KAAc,CAACE,WAAWF,YAAYld;AACxE,QAAIwa,OAAOrQ,OAAOoO,iBAAiBmB,UAAAA;AAEnC,QAAI,KAAKxa,MAAMme,kBAAkBjU,MAAQ,GAAA;AACvCwS,aAAOzR,OAAOoO,iBAAiBvY,QAAQW,MAAAA;WAClC;AAELib,aAAOpB;;AAGTnT,WAAOuU,OAAOpB;AAEd,QAAI1a,KAAKwY,IAAIjR,IAAAA,IAAQ8V,cAAc;AACjC9V,aAAO8S,QAAQ9S,MAAM8C,QAAQiQ,UAAc+C,IAAAA;AAC3C,UAAI/V,UAAUgT,YAAY;AACxBI,gBAAQnT,OAAO;;AAEjB,YAAMiW,aAAanT,OAAOoT,mBAAmB,CAAA;AAC7C,YAAMC,WAAWrT,OAAOoT,mBAAmB,CAAA;AAC3C,YAAMxd,MAAMD,KAAKC,IAAIud,YAAYE,QAAAA;AACjC,YAAMtb,MAAMpC,KAAKoC,IAAIob,YAAYE,QAAAA;AACjChD,aAAO1a,KAAKoC,IAAIpC,KAAKC,IAAIya,MAAMtY,GAAMnC,GAAAA,GAAAA;AACrC6b,aAAOpB,OAAOnT;AAEd,UAAIyG,YAAY,CAACsP,UAAU;AAEzBrR,eAAOE,QAAQ9B,OAAOE,IAAI,EAAEmC,cAAc9C,YAAa,IAAGS,OAAOsT,iBAAiB7B,IAAQzR,IAAAA,OAAOsT,iBAAiBjD,IAAAA;;;AAItH,QAAIA,SAASrQ,OAAOoO,iBAAiB6B,UAAa,GAAA;AAChD,YAAMsD,WAAW5T,KAAKzC,IAAAA,IAAQ8C,OAAOwT,qBAAqBvD,UAAc,IAAA;AACxEI,cAAQkD;AACRrW,cAAQqW;;AAGV,WAAO;MACLrW;MACAmT;MACAoB;MACAI,QAAQJ,OAAOvU,OAAO;IACxB;EACF;EAKA0U,yBAAyB3S,QAAOuP,OAAO;AACrC,UAAMhR,QAAQgR,MAAMhR;AACpB,UAAMjB,UAAU,KAAKA;AACrB,UAAM8V,WAAW9V,QAAQ8V;AACzB,UAAMoB,kBAAkB/N,eAAenJ,QAAQkX,iBAAiBC,QAAAA;AAChE,QAAI7B,QAAQ3U;AACZ,QAAIsR,MAAM0D,SAAS;AACjB,YAAMzD,aAAa4D,WAAW,KAAKK,eAAezT,MAAAA,IAASuP,MAAMC;AACjE,YAAM3F,QAAQvM,QAAQoS,iBAAiB,SACnCO,0BAA0BjQ,QAAOuP,OAAOjS,SAASkS,UACjDF,IAAAA,yBAAyBtP,QAAOuP,OAAOjS,SAASkS,UAAW;AAE/D,YAAMkF,aAAa,KAAKhB,eAAe,KAAK1T,OAAO,KAAK4C,YAAY1C,OAAOkT,WAAWpT,SAAQpK,MAAS;AACvGgd,eAAS/I,MAAMjT,QAASiT,MAAMkG,QAAQ2E,aAAe7K,MAAMkG,QAAQ;AACnE9R,aAAOvH,KAAKC,IAAI6d,iBAAiB3K,MAAMkG,QAAQlG,MAAM8F,KAAK;WACrD;AAELiD,eAASrU,MAAM4Q,iBAAiB,KAAKzF,UAAU1J,MAAAA,EAAOzB,MAAM0C,IAAI,GAAGjB,MAAAA;AACnE/B,aAAOvH,KAAKC,IAAI6d,iBAAiBjF,MAAM5Y,MAAM4Y,MAAMI,KAAK;;AAG1D,WAAO;MACLyB,MAAMwB,SAAS3U,OAAO;MACtBuU,MAAMI,SAAS3U,OAAO;MACtB2U;MACA3U;IACF;EACF;EAEAxG,OAAO;AACL,UAAMoJ,QAAO,KAAK+B;AAClB,UAAM7B,SAASF,MAAKE;AACpB,UAAM4T,QAAQ9T,MAAKD;AACnB,UAAMb,OAAO4U,MAAMpd;AACnB,QAAIC,IAAI;AAER,WAAOA,IAAIuI,MAAM,EAAEvI,GAAG;AACpB,UAAI,KAAKkS,UAAUlS,CAAE,EAACuJ,OAAOE,IAAI,MAAM,QAAQ,CAAC0T,MAAMnd,CAAE,EAACiN,QAAQ;AAC/DkQ,cAAMnd,CAAE,EAACC,KAAK,KAAKmN,IAAI;;IAE3B;EACF;AAEF;AA9YE,cAFmBsN,eAEZxQ,MAAK;AAKZ,cAPmBwQ,eAOZvV,YAAW;EAChBgJ,oBAAoB;EACpBC,iBAAiB;EAEjBiK,oBAAoB;EACpBC,eAAe;EACfmD,SAAS;EAETzV,YAAY;IACVoX,SAAS;MACP3e,MAAM;MACNiH,YAAY;QAAC;QAAK;QAAK;QAAQ;QAAS;MAAS;IACnD;EACF;;AAMF,cA1BmBgV,eA0BZ2C,aAAY;EACjBvR,QAAQ;IACNwR,SAAS;MACP7e,MAAM;MACN8e,QAAQ;MACRC,MAAM;QACJD,QAAQ;MACV;IACF;IACAE,SAAS;MACPhf,MAAM;MACNif,aAAa;IACf;EACF;;AGnSW,IAAMC,iBAAN,cAA6BC,kBAAAA;EA6B1CC,aAAa;AACX,SAAKC,sBAAsB;AAC3B,SAAKC,qBAAqB;AAC1B,UAAMF,WAAU;EAClB;EAEAG,OAAOC,MAAM;AACX,UAAMC,QAAO,KAAKC;AAClB,UAAM,EAACC,SAASC,MAAMC,MAAMC,SAAS,CAAA,GAAIC,SAAQ,IAAIN;AAErD,UAAMO,qBAAqB,KAAKC,MAAMC;AACtC,QAAI,EAACC,OAAOC,MAAAA,IAASC,iCAAiCZ,OAAMK,QAAQE,kBAAAA;AAEpE,SAAKM,aAAaH;AAClB,SAAKI,aAAaH;AAElB,QAAII,oBAAoBf,KAAO,GAAA;AAC7BU,cAAQ;AACRC,cAAQN,OAAOW;;AAIjBb,SAAKc,SAAS,KAAKT;AACnBL,SAAKe,gBAAgB,KAAKC;AAC1BhB,SAAKiB,aAAa,CAAC,CAACd,SAASc;AAC7BjB,SAAKE,SAASA;AAEd,UAAMgB,UAAU,KAAKC,6BAA6BvB,IAAAA;AAClD,QAAI,CAAC,KAAKsB,QAAQE,UAAU;AAC1BF,cAAQG,cAAc;;AAExBH,YAAQI,UAAU,KAAKJ,QAAQI;AAC/B,SAAKC,cAAcvB,MAAMwB,QAAW;MAClCC,UAAU,CAACrB;MACXc;OACCtB,IAAAA;AAGH,SAAK8B,eAAexB,QAAQK,OAAOC,OAAOZ,IAAAA;EAC5C;EAEA8B,eAAexB,QAAQK,OAAOC,OAAOZ,MAAM;AACzC,UAAM+B,QAAQ/B,SAAS;AACvB,UAAM,EAACgC,QAAQC,QAAQC,UAAU3B,SAAAA,IAAY,KAAKL;AAClD,UAAM,EAACiC,eAAeC,eAAc,IAAI,KAAKC,kBAAkB1B,OAAOX,IAAAA;AACtE,UAAMsC,QAAQN,OAAOO;AACrB,UAAMC,QAAQP,OAAOM;AACrB,UAAM,EAACE,UAAUf,QAAAA,IAAW,KAAKJ;AACjC,UAAMoB,eAAeC,SAASF,QAAYA,IAAAA,WAAWG,OAAOC;AAC5D,UAAMC,eAAe,KAAKrC,MAAMC,uBAAuBqB,SAAS/B,SAAS;AACzE,UAAM+C,MAAMpC,QAAQC;AACpB,UAAMoC,cAAc1C,OAAOW;AAC3B,QAAIgC,aAAatC,QAAQ,KAAK,KAAKuC,UAAUvC,QAAQ,CAAA;AAErD,aAASwC,IAAI,GAAGA,IAAIH,aAAa,EAAEG,GAAG;AACpC,YAAMC,QAAQ9C,OAAO6C,CAAE;AACvB,YAAME,aAAaP,eAAeM,QAAQ,CAAA;AAE1C,UAAID,IAAIxC,SAASwC,KAAKJ,KAAK;AACzBM,mBAAWC,OAAO;AAClB;;AAGF,YAAMC,SAAS,KAAKL,UAAUC,CAAAA;AAC9B,YAAMK,WAAWC,cAAcF,OAAOf,KAAM,CAAA;AAC5C,YAAMkB,SAASL,WAAWf,KAAM,IAAGN,OAAO2B,iBAAiBJ,OAAOjB,KAAAA,GAAQa,CAAAA;AAC1E,YAAMS,SAASP,WAAWb,KAAM,IAAGT,SAASyB,WAAWvB,OAAO4B,aAAY,IAAK5B,OAAO0B,iBAAiBzB,WAAW,KAAK4B,WAAW7B,QAAQsB,QAAQrB,QAAAA,IAAYqB,OAAOf,KAAM,GAAEW,CAAE;AAE/KE,iBAAWC,OAAOS,MAAML,MAAAA,KAAWK,MAAMH,MAAWJ,KAAAA;AACpDH,iBAAWW,OAAOb,IAAI,KAAK,KAAMc,IAAIV,OAAOjB,KAAM,IAAGW,WAAWX,KAAAA,CAAM,IAAKI;AAC3E,UAAIhB,SAAS;AACX2B,mBAAWE,SAASA;AACpBF,mBAAWa,MAAM3D,SAASF,KAAK8C,CAAE;;AAGnC,UAAIf,gBAAgB;AAClBiB,mBAAW/B,UAAUa,iBAAiB,KAAKgC,0BAA0BhB,GAAGC,MAAMgB,SAAS,WAAWpE,IAAI;;AAGxG,UAAI,CAAC8C,cAAc;AACjB,aAAKnB,cAAcyB,OAAOD,GAAGE,YAAYrD,IAAAA;;AAG3CiD,mBAAaM;IACf;EACF;EAKAc,iBAAiB;AACf,UAAMpE,QAAO,KAAKC;AAClB,UAAMC,UAAUF,MAAKE;AACrB,UAAMmE,SAASnE,QAAQmB,WAAWnB,QAAQmB,QAAQG,eAAe;AACjE,UAAMpB,OAAOJ,MAAKI,QAAQ,CAAA;AAC1B,QAAI,CAACA,KAAKY,QAAQ;AAChB,aAAOqD;;AAET,UAAMC,aAAalE,KAAK,CAAE,EAACmE,KAAK,KAAKL,0BAA0B,CAAA,CAAA;AAC/D,UAAMM,YAAYpE,KAAKA,KAAKY,SAAS,CAAE,EAACuD,KAAK,KAAKL,0BAA0B9D,KAAKY,SAAS,CAAA,CAAA;AAC1F,WAAOyD,KAAKC,IAAIL,QAAQC,YAAYE,SAAa,IAAA;EACnD;EAEAG,OAAO;AACL,UAAM3E,QAAO,KAAKC;AAClBD,IAAAA,MAAKE,QAAQ0E,oBAAoB,KAAKpE,MAAMqE,WAAW7E,MAAK+B,OAAOO,IAAI;AACvE,UAAMqC,KAAI;EACZ;AACF;AAvIE,cAFmBlF,gBAEZqF,MAAK;AAKZ,cAPmBrF,gBAOZsF,YAAW;EAChBC,oBAAoB;EACpBC,iBAAiB;EAEjB1D,UAAU;EACViB,UAAU;;AAMZ,cAlBmB/C,gBAkBZyF,aAAY;EACjBC,QAAQ;IACNC,SAAS;MACPC,MAAM;IACR;IACAC,SAAS;MACPD,MAAM;IACR;EACF;;AKiCJ,SAASE,WAAwB;AAC/B,QAAM,IAAIC,MAAM,iFAAmF;AACrG;AAQA,IAAMC,kBAAN,MAAMA;;;;;;;;;;;EAYJ,OAAOC,SACLC,SACA;AACAC,WAAOC,OAAOJ,gBAAgBK,WAAWH,OAAAA;EAC3C;EAESI;EAETC,YAAYD,SAAqB;AAC/B,SAAKA,UAAUA,WAAW,CAAA;EAC5B;;EAGAE,OAAO;EAAA;EAEPC,UAAiD;AAC/C,WAAOX,SAAAA;EACT;EAEAY,QAAuB;AACrB,WAAOZ,SAAAA;EACT;EAEAa,SAAiB;AACf,WAAOb,SAAAA;EACT;EAEAc,MAAc;AACZ,WAAOd,SAAAA;EACT;EAEAe,OAAe;AACb,WAAOf,SAAAA;EACT;EAEAgB,UAAkB;AAChB,WAAOhB,SAAAA;EACT;EAEAiB,QAAgB;AACd,WAAOjB,SAAAA;EACT;AACF;AAEA,IAAA,WAAe;EACbkB,OAAOhB;AAMT;ACpHA,SAASiB,aAAaC,SAASC,MAAMC,OAAOC,WAAW;AACrD,QAAM,EAACC,YAAYC,MAAMC,QAAAA,IAAWN;AACpC,QAAMO,SAASH,WAAWI,YAAYD;AACtC,QAAME,WAAWT,QAAQU,UAAUV,QAAQU,QAAQtB,UAAUY,QAAQU,QAAQtB,QAAQqB,WAAW,OAAO;AAEvG,MAAIF,UAAUN,SAASM,OAAON,QAAQA,SAAS,OAAOK,WAAWD,KAAKM,QAAQ;AAC5E,UAAMC,eAAeL,OAAOM,iBAAiBC,gBAAgBC;AAC7D,QAAI,CAACZ,WAAW;AACd,YAAMa,SAASJ,aAAaP,MAAMJ,MAAMC,KAAAA;AACxC,UAAIO,UAAU;AACZ,cAAM,EAACQ,OAAAA,IAAUb,WAAWI;AAC5B,cAAM,EAACU,QAAO,IAAIlB;AAElB,cAAMmB,sBAAuBD,QAC1BE,MAAM,GAAGJ,OAAOK,KAAK,CACrBC,EAAAA,QAAO,EACPC,UACCC,CAAAA,UAAS,CAACC,cAAcD,MAAMP,OAAOhB,IAAI,CAAC,CAAA;AAC9Ce,eAAOK,MAAMK,KAAKC,IAAI,GAAGR,mBAAAA;AAEzB,cAAMS,sBAAuBV,QAC1BE,MAAMJ,OAAOa,EAAE,EACfN,UACCC,CAAAA,UAAS,CAACC,cAAcD,MAAMP,OAAOhB,IAAI,CAAC,CAAA;AAC9Ce,eAAOa,MAAMH,KAAKC,IAAI,GAAGC,mBAAAA;;AAE3B,aAAOZ;eACEZ,WAAW0B,gBAAgB;AAIpC,YAAMC,KAAK1B,KAAK,CAAE;AAClB,YAAM2B,QAAQ,OAAOD,GAAGE,aAAa,cAAcF,GAAGE,SAAShC,IAAAA;AAC/D,UAAI+B,OAAO;AACT,cAAME,QAAQtB,aAAaP,MAAMJ,MAAMC,QAAQ8B,KAAAA;AAC/C,cAAMG,MAAMvB,aAAaP,MAAMJ,MAAMC,QAAQ8B,KAAAA;AAC7C,eAAO;UAACX,IAAIa,MAAMb;UAAIQ,IAAIM,IAAIN;QAAE;;;;AAKtC,SAAO;IAACR,IAAI;IAAGQ,IAAIxB,KAAKM,SAAS;EAAC;AACpC;AAUA,SAASyB,yBAAyBC,OAAOpC,MAAMqC,UAAUC,SAASpC,WAAW;AAC3E,QAAMqC,WAAWH,MAAMI,6BAA4B;AACnD,QAAMvC,QAAQoC,SAASrC,IAAK;AAC5B,WAASyC,IAAI,GAAGC,OAAOH,SAAS7B,QAAQ+B,IAAIC,MAAM,EAAED,GAAG;AACrD,UAAM,EAACE,OAAAA,QAAOvC,KAAAA,IAAQmC,SAASE,CAAE;AACjC,UAAM,EAACrB,IAAIQ,GAAAA,IAAM9B,aAAayC,SAASE,CAAAA,GAAIzC,MAAMC,OAAOC,SAAAA;AACxD,aAAS0C,IAAIxB,IAAIwB,KAAKhB,IAAI,EAAEgB,GAAG;AAC7B,YAAMC,UAAUzC,KAAKwC,CAAE;AACvB,UAAI,CAACC,QAAQC,MAAM;AACjBR,gBAAQO,SAASF,QAAOC,CAAAA;;IAE5B;EACF;AACF;AAOA,SAASG,yBAAyB/C,MAAM;AACtC,QAAMgD,OAAOhD,KAAKiD,QAAQ,GAAA,MAAS;AACnC,QAAMC,OAAOlD,KAAKiD,QAAQ,GAAA,MAAS;AAEnC,SAAO,SAASE,KAAKC,KAAK;AACxB,UAAMC,SAASL,OAAOvB,KAAK6B,IAAIH,IAAII,IAAIH,IAAIG,CAAC,IAAI;AAChD,UAAMC,SAASN,OAAOzB,KAAK6B,IAAIH,IAAIM,IAAIL,IAAIK,CAAC,IAAI;AAChD,WAAOhC,KAAKiC,KAAKjC,KAAKkC,IAAIN,QAAQ,CAAK5B,IAAAA,KAAKkC,IAAIH,QAAQ,CAAA,CAAA;EAC1D;AACF;AAWA,SAASI,kBAAkBxB,OAAOC,UAAUrC,MAAM6D,kBAAkBC,kBAAkB;AACpF,QAAMC,QAAQ,CAAA;AAEd,MAAI,CAACD,oBAAoB,CAAC1B,MAAM4B,cAAc3B,QAAW,GAAA;AACvD,WAAO0B;;AAGT,QAAME,iBAAiB,SAASpB,SAASqB,cAAcvB,QAAO;AAC5D,QAAI,CAACmB,oBAAoB,CAACK,eAAetB,SAAST,MAAMgC,WAAW,CAAI,GAAA;AACrE;;AAEF,QAAIvB,QAAQwB,QAAQhC,SAASkB,GAAGlB,SAASoB,GAAGI,gBAAmB,GAAA;AAC7DE,YAAMO,KAAK;QAACzB;QAASqB;QAAcvB,OAAAA;MAAK,CAAA;;EAE5C;AAEAR,2BAAyBC,OAAOpC,MAAMqC,UAAU4B,gBAAgB,IAAI;AACpE,SAAOF;AACT;AAUA,SAASQ,sBAAsBnC,OAAOC,UAAUrC,MAAM6D,kBAAkB;AACtE,MAAIE,QAAQ,CAAA;AAEZ,WAASE,eAAepB,SAASqB,cAAcvB,QAAO;AACpD,UAAM,EAAC6B,YAAYC,SAAAA,IAAY5B,QAAQ6B,SAAS;MAAC;MAAc;OAAab,gBAAAA;AAC5E,UAAM,EAACc,MAAAA,IAASC,kBAAkB/B,SAAS;MAACU,GAAGlB,SAASkB;MAAGE,GAAGpB,SAASoB;IAAC,CAAA;AAExE,QAAIoB,cAAcF,OAAOH,YAAYC,QAAW,GAAA;AAC9CV,YAAMO,KAAK;QAACzB;QAASqB;QAAcvB,OAAAA;MAAK,CAAA;;EAE5C;AAEAR,2BAAyBC,OAAOpC,MAAMqC,UAAU4B,cAAAA;AAChD,SAAOF;AACT;AAYA,SAASe,yBAAyB1C,OAAOC,UAAUrC,MAAME,WAAW2D,kBAAkBC,kBAAkB;AACtG,MAAIC,QAAQ,CAAA;AACZ,QAAMgB,iBAAiBhC,yBAAyB/C,IAAAA;AAChD,MAAIgF,cAAcC,OAAOC;AAEzB,WAASjB,eAAepB,SAASqB,cAAcvB,QAAO;AACpD,UAAM0B,WAAUxB,QAAQwB,QAAQhC,SAASkB,GAAGlB,SAASoB,GAAGI,gBAAAA;AACxD,QAAI3D,aAAa,CAACmE,UAAS;AACzB;;AAGF,UAAMc,SAAStC,QAAQuC,eAAevB,gBAAAA;AACtC,UAAMwB,cAAc,CAAC,CAACvB,oBAAoB1B,MAAM4B,cAAcmB,MAAAA;AAC9D,QAAI,CAACE,eAAe,CAAChB,UAAS;AAC5B;;AAGF,UAAMiB,WAAWP,eAAe1C,UAAU8C,MAAAA;AAC1C,QAAIG,WAAWN,aAAa;AAC1BjB,cAAQ;QAAC;UAAClB;UAASqB;UAAcvB,OAAAA;QAAK;MAAE;AACxCqC,oBAAcM;eACLA,aAAaN,aAAa;AAEnCjB,YAAMO,KAAK;QAACzB;QAASqB;QAAcvB,OAAAA;MAAK,CAAA;;EAE5C;AAEAR,2BAAyBC,OAAOpC,MAAMqC,UAAU4B,cAAAA;AAChD,SAAOF;AACT;AAYA,SAASwB,gBAAgBnD,OAAOC,UAAUrC,MAAME,WAAW2D,kBAAkBC,kBAAkB;AAC7F,MAAI,CAACA,oBAAoB,CAAC1B,MAAM4B,cAAc3B,QAAW,GAAA;AACvD,WAAO,CAAA;;AAGT,SAAOrC,SAAS,OAAO,CAACE,YACpBqE,sBAAsBnC,OAAOC,UAAUrC,MAAM6D,gBAAAA,IAC7CiB,yBAAyB1C,OAAOC,UAAUrC,MAAME,WAAW2D,kBAAkBC,gBAAiB;AACpG;AAWA,SAAS0B,aAAapD,OAAOC,UAAUrC,MAAME,WAAW2D,kBAAkB;AACxE,QAAME,QAAQ,CAAA;AACd,QAAM0B,cAAczF,SAAS,MAAM,aAAa;AAChD,MAAI0F,iBAAiB;AAErBvD,2BAAyBC,OAAOpC,MAAMqC,UAAU,CAACQ,SAASqB,cAAcvB,WAAU;AAChF,QAAIE,QAAQ4C,WAAY,KAAI5C,QAAQ4C,WAAY,EAACpD,SAASrC,IAAK,GAAE6D,gBAAmB,GAAA;AAClFE,YAAMO,KAAK;QAACzB;QAASqB;QAAcvB,OAAAA;MAAK,CAAA;AACxC+C,uBAAiBA,kBAAkB7C,QAAQwB,QAAQhC,SAASkB,GAAGlB,SAASoB,GAAGI,gBAAAA;;EAE/E,CAAA;AAIA,MAAI3D,aAAa,CAACwF,gBAAgB;AAChC,WAAO,CAAA;;AAET,SAAO3B;AACT;AAMA,IAAA,cAAe;EAEb5B;EAGAwD,OAAO;IAYLhD,MAAMP,OAAOwD,GAAGzG,SAAS0E,kBAAkB;AACzC,YAAMxB,WAAWwD,oBAAoBD,GAAGxD,KAAAA;AAExC,YAAMpC,OAAOb,QAAQa,QAAQ;AAC7B,YAAM8D,mBAAmB3E,QAAQ2E,oBAAoB;AACrD,YAAMC,QAAQ5E,QAAQe,YAClB0D,kBAAkBxB,OAAOC,UAAUrC,MAAM6D,kBAAkBC,gBAAAA,IAC3DyB,gBAAgBnD,OAAOC,UAAUrC,MAAM,OAAO6D,kBAAkBC,gBAAiB;AACrF,YAAMgC,WAAW,CAAA;AAEjB,UAAI,CAAC/B,MAAMrD,QAAQ;AACjB,eAAO,CAAA;;AAGT0B,YAAMI,6BAA4B,EAAGuD,QAAQ,CAACC,UAAS;AACrD,cAAMrD,SAAQoB,MAAM,CAAA,EAAGpB;AACvB,cAAME,UAAUmD,MAAK5F,KAAKuC,MAAM;AAGhC,YAAIE,WAAW,CAACA,QAAQC,MAAM;AAC5BgD,mBAASxB,KAAK;YAACzB;YAASqB,cAAc8B,MAAKrD;YAAOA,OAAAA;UAAK,CAAA;;MAE3D,CAAA;AAEA,aAAOmD;IACT;IAYArF,QAAQ2B,OAAOwD,GAAGzG,SAAS0E,kBAAkB;AAC3C,YAAMxB,WAAWwD,oBAAoBD,GAAGxD,KAAAA;AACxC,YAAMpC,OAAOb,QAAQa,QAAQ;AAC7B,YAAM8D,mBAAmB3E,QAAQ2E,oBAAoB;AACrD,UAAIC,QAAQ5E,QAAQe,YAChB0D,kBAAkBxB,OAAOC,UAAUrC,MAAM6D,kBAAkBC,gBAAAA,IAC7DyB,gBAAgBnD,OAAOC,UAAUrC,MAAM,OAAO6D,kBAAkBC,gBAAiB;AAEnF,UAAIC,MAAMrD,SAAS,GAAG;AACpB,cAAMwD,eAAeH,MAAM,CAAA,EAAGG;AAC9B,cAAM9D,OAAOgC,MAAM6D,eAAe/B,YAAAA,EAAc9D;AAChD2D,gBAAQ,CAAA;AACR,iBAAStB,IAAI,GAAGA,IAAIrC,KAAKM,QAAQ,EAAE+B,GAAG;AACpCsB,gBAAMO,KAAK;YAACzB,SAASzC,KAAKqC,CAAE;YAAEyB;YAAcvB,OAAOF;UAAC,CAAA;QACtD;;AAGF,aAAOsB;IACT;IAYAxC,MAAMa,OAAOwD,GAAGzG,SAAS0E,kBAAkB;AACzC,YAAMxB,WAAWwD,oBAAoBD,GAAGxD,KAAAA;AACxC,YAAMpC,OAAOb,QAAQa,QAAQ;AAC7B,YAAM8D,mBAAmB3E,QAAQ2E,oBAAoB;AACrD,aAAOF,kBAAkBxB,OAAOC,UAAUrC,MAAM6D,kBAAkBC,gBAAAA;IACpE;IAWAoC,QAAQ9D,OAAOwD,GAAGzG,SAAS0E,kBAAkB;AAC3C,YAAMxB,WAAWwD,oBAAoBD,GAAGxD,KAAAA;AACxC,YAAMpC,OAAOb,QAAQa,QAAQ;AAC7B,YAAM8D,mBAAmB3E,QAAQ2E,oBAAoB;AACrD,aAAOyB,gBAAgBnD,OAAOC,UAAUrC,MAAMb,QAAQe,WAAW2D,kBAAkBC,gBAAAA;IACrF;IAWAP,EAAEnB,OAAOwD,GAAGzG,SAAS0E,kBAAkB;AACrC,YAAMxB,WAAWwD,oBAAoBD,GAAGxD,KAAAA;AACxC,aAAOoD,aAAapD,OAAOC,UAAU,KAAKlD,QAAQe,WAAW2D,gBAAAA;IAC/D;IAWAJ,EAAErB,OAAOwD,GAAGzG,SAAS0E,kBAAkB;AACrC,YAAMxB,WAAWwD,oBAAoBD,GAAGxD,KAAAA;AACxC,aAAOoD,aAAapD,OAAOC,UAAU,KAAKlD,QAAQe,WAAW2D,gBAAAA;IAC/D;EACF;AACF;AC3XA,IAAMsC,mBAAmB;EAAC;EAAQ;EAAO;EAAS;AAAS;AAE3D,SAASC,iBAAiBC,OAAOhE,UAAU;AACzC,SAAOgE,MAAMC,OAAOC,CAAAA,MAAKA,EAAEC,QAAQnE,QAAAA;AACrC;AAEA,SAASoE,4BAA4BJ,OAAOrG,MAAM;AAChD,SAAOqG,MAAMC,OAAOC,CAAAA,MAAKJ,iBAAiBlD,QAAQsD,EAAEC,GAAG,MAAM,MAAMD,EAAEG,IAAI1G,SAASA,IAAAA;AACpF;AAEA,SAAS2G,aAAaN,OAAOhF,SAAS;AACpC,SAAOgF,MAAMO,KAAK,CAACC,GAAGC,MAAM;AAC1B,UAAMC,KAAK1F,UAAUyF,IAAID;AACzB,UAAMG,KAAK3F,UAAUwF,IAAIC;AACzB,WAAOC,GAAGE,WAAWD,GAAGC,SACtBF,GAAGpE,QAAQqE,GAAGrE,QACdoE,GAAGE,SAASD,GAAGC;EACnB,CAAA;AACF;AAEA,SAASC,UAAUC,OAAO;AACxB,QAAMC,cAAc,CAAA;AACpB,MAAI3E,GAAGC,MAAMgE,KAAKF,KAAKa,OAAOC;AAE9B,OAAK7E,IAAI,GAAGC,QAAQyE,SAAS,CAAA,GAAIzG,QAAQ+B,IAAIC,MAAM,EAAED,GAAG;AACtDiE,UAAMS,MAAM1E,CAAE;AACb,KAAA,EAACJ,UAAUmE,KAAKrH,SAAS,EAACkI,OAAOC,cAAc,EAAC,EAAC,IAAIZ;AACtDU,gBAAY9C,KAAK;MACf3B,OAAOF;MACPiE;MACAF;MACAe,YAAYb,IAAIc,aAAY;MAC5BP,QAAQP,IAAIO;MACZI,OAAOA,SAAUb,MAAMa;MACvBC;IACF,CAAA;EACF;AACA,SAAOF;AACT;AAEA,SAASK,YAAYC,UAAS;AAC5B,QAAMC,SAAS,CAAA;AACf,aAAWC,QAAQF,UAAS;AAC1B,UAAM,EAACL,OAAOb,KAAKc,YAAAA,IAAeM;AAClC,QAAI,CAACP,SAAS,CAAClB,iBAAiB0B,SAASrB,GAAM,GAAA;AAC7C;;AAEF,UAAMsB,SAASH,OAAON,KAAAA,MAAWM,OAAON,KAAAA,IAAS;MAACU,OAAO;MAAGC,QAAQ;MAAGf,QAAQ;MAAGgB,MAAM;;AACxFH,WAAOC;AACPD,WAAOb,UAAUK;EACnB;AACA,SAAOK;AACT;AAKA,SAASO,cAAcR,UAASS,QAAQ;AACtC,QAAMR,SAASF,YAAYC,QAAAA;AAC3B,QAAM,EAACU,cAAcC,cAAAA,IAAiBF;AACtC,MAAI1F,GAAGC,MAAM4F;AACb,OAAK7F,IAAI,GAAGC,OAAOgF,SAAQhH,QAAQ+B,IAAIC,MAAM,EAAED,GAAG;AAChD6F,aAASZ,SAAQjF,CAAE;AACnB,UAAM,EAAC8F,SAAAA,IAAYD,OAAO5B;AAC1B,UAAMW,QAAQM,OAAOW,OAAOjB,KAAK;AACjC,UAAMmB,SAASnB,SAASiB,OAAOhB,cAAcD,MAAMJ;AACnD,QAAIqB,OAAOf,YAAY;AACrBe,aAAOG,QAAQD,SAASA,SAASJ,eAAeG,YAAYJ,OAAOO;AACnEJ,aAAOK,SAASN;WACX;AACLC,aAAOG,QAAQL;AACfE,aAAOK,SAASH,SAASA,SAASH,gBAAgBE,YAAYJ,OAAOS;;EAEzE;AACA,SAAOjB;AACT;AAEA,SAASkB,iBAAiB1B,OAAO;AAC/B,QAAMC,cAAcF,UAAUC,KAAAA;AAC9B,QAAMoB,WAAW5B,aAAaS,YAAYd,OAAOsB,CAAAA,SAAQA,KAAKlB,IAAI6B,QAAQ,GAAG,IAAI;AACjF,QAAMO,OAAOnC,aAAaP,iBAAiBgB,aAAa,MAAA,GAAS,IAAI;AACrE,QAAM2B,QAAQpC,aAAaP,iBAAiBgB,aAAa,OAAA,CAAA;AACzD,QAAM4B,MAAMrC,aAAaP,iBAAiBgB,aAAa,KAAA,GAAQ,IAAI;AACnE,QAAM6B,SAAStC,aAAaP,iBAAiBgB,aAAa,QAAA,CAAA;AAC1D,QAAM8B,mBAAmBzC,4BAA4BW,aAAa,GAAA;AAClE,QAAM+B,iBAAiB1C,4BAA4BW,aAAa,GAAA;AAEhE,SAAO;IACLmB;IACAa,YAAYN,KAAKO,OAAOL,GAAAA;IACxBM,gBAAgBP,MAAMM,OAAOF,cAAAA,EAAgBE,OAAOJ,MAAAA,EAAQI,OAAOH,gBAAAA;IACnE9E,WAAWgC,iBAAiBgB,aAAa,WAAA;IACzCmC,UAAUT,KAAKO,OAAON,KAAAA,EAAOM,OAAOF,cAAAA;IACpC5B,YAAYyB,IAAIK,OAAOJ,MAAAA,EAAQI,OAAOH,gBAAAA;EACxC;AACF;AAEA,SAASM,eAAeC,YAAYrF,WAAWyC,GAAGC,GAAG;AACnD,SAAOrF,KAAKC,IAAI+H,WAAW5C,CAAE,GAAEzC,UAAUyC,CAAAA,CAAE,IAAIpF,KAAKC,IAAI+H,WAAW3C,CAAAA,GAAI1C,UAAU0C,CAAE,CAAA;AACrF;AAEA,SAAS4C,iBAAiBD,YAAYE,YAAY;AAChDF,aAAWT,MAAMvH,KAAKC,IAAI+H,WAAWT,KAAKW,WAAWX,GAAG;AACxDS,aAAWX,OAAOrH,KAAKC,IAAI+H,WAAWX,MAAMa,WAAWb,IAAI;AAC3DW,aAAWR,SAASxH,KAAKC,IAAI+H,WAAWR,QAAQU,WAAWV,MAAM;AACjEQ,aAAWV,QAAQtH,KAAKC,IAAI+H,WAAWV,OAAOY,WAAWZ,KAAK;AAChE;AAEA,SAASa,WAAWxF,WAAW+D,QAAQG,QAAQX,QAAQ;AACrD,QAAM,EAACnB,KAAKE,IAAAA,IAAO4B;AACnB,QAAMmB,aAAarF,UAAUqF;AAG7B,MAAI,CAACI,SAASrD,GAAM,GAAA;AAClB,QAAI8B,OAAOL,MAAM;AAEf7D,gBAAUoC,GAAAA,KAAQ8B,OAAOL;;AAE3B,UAAMZ,QAAQM,OAAOW,OAAOjB,KAAK,KAAK;MAACY,MAAM;MAAGF,OAAO;IAAC;AACxDV,UAAMY,OAAOxG,KAAKC,IAAI2F,MAAMY,MAAMK,OAAOf,aAAab,IAAIiC,SAASjC,IAAI+B,KAAK;AAC5EH,WAAOL,OAAOZ,MAAMY,OAAOZ,MAAMU;AACjC3D,cAAUoC,GAAAA,KAAQ8B,OAAOL;;AAG3B,MAAIvB,IAAIoD,YAAY;AAClBJ,qBAAiBD,YAAY/C,IAAIoD,WAAU,CAAA;;AAG7C,QAAMC,WAAWtI,KAAKC,IAAI,GAAGyG,OAAO6B,aAAaR,eAAeC,YAAYrF,WAAW,QAAQ,OAAA,CAAA;AAC/F,QAAM6F,YAAYxI,KAAKC,IAAI,GAAGyG,OAAO+B,cAAcV,eAAeC,YAAYrF,WAAW,OAAO,QAAA,CAAA;AAChG,QAAM+F,eAAeJ,aAAa3F,UAAUgG;AAC5C,QAAMC,gBAAgBJ,cAAc7F,UAAUkG;AAC9ClG,YAAUgG,IAAIL;AACd3F,YAAUkG,IAAIL;AAGd,SAAO3B,OAAOf,aACV;IAACgD,MAAMJ;IAAcK,OAAOH;MAC5B;IAACE,MAAMF;IAAeG,OAAOL;;AACnC;AAEA,SAASM,iBAAiBrG,WAAW;AACnC,QAAMqF,aAAarF,UAAUqF;AAE7B,WAASiB,UAAUlE,KAAK;AACtB,UAAMmE,SAASlJ,KAAKC,IAAI+H,WAAWjD,GAAAA,IAAOpC,UAAUoC,GAAAA,GAAM,CAAA;AAC1DpC,cAAUoC,GAAAA,KAAQmE;AAClB,WAAOA;EACT;AACAvG,YAAUX,KAAKiH,UAAU,KAAA;AACzBtG,YAAUb,KAAKmH,UAAU,MAAA;AACzBA,YAAU,OAAA;AACVA,YAAU,QAAA;AACZ;AAEA,SAASE,WAAWrD,YAAYnD,WAAW;AACzC,QAAMqF,aAAarF,UAAUqF;AAE7B,WAASoB,mBAAmBC,YAAW;AACrC,UAAMC,SAAS;MAACjC,MAAM;MAAGE,KAAK;MAAGD,OAAO;MAAGE,QAAQ;IAAC;AACpD6B,IAAAA,WAAU/E,QAAQ,CAACS,QAAQ;AACzBuE,aAAOvE,GAAAA,IAAO/E,KAAKC,IAAI0C,UAAUoC,GAAI,GAAEiD,WAAWjD,GAAI,CAAA;IACxD,CAAA;AACA,WAAOuE;EACT;AAEA,SAAOxD,aACHsD,mBAAmB;IAAC;IAAQ;EAAQ,CAAA,IACpCA,mBAAmB;IAAC;IAAO;GAAS;AAC1C;AAEA,SAASG,SAAS7D,OAAO/C,WAAW+D,QAAQR,QAAQ;AAClD,QAAMsD,aAAa,CAAA;AACnB,MAAIxI,GAAGC,MAAM4F,QAAQ5B,KAAKwE,OAAOC;AAEjC,OAAK1I,IAAI,GAAGC,OAAOyE,MAAMzG,QAAQwK,QAAQ,GAAGzI,IAAIC,MAAM,EAAED,GAAG;AACzD6F,aAASnB,MAAM1E,CAAE;AACjBiE,UAAM4B,OAAO5B;AAEbA,QAAI0E,OACF9C,OAAOG,SAASrE,UAAUgG,GAC1B9B,OAAOK,UAAUvE,UAAUkG,GAC3BM,WAAWtC,OAAOf,YAAYnD,SAAAA,CAAAA;AAEhC,UAAM,EAACmG,MAAMC,MAAAA,IAASZ,WAAWxF,WAAW+D,QAAQG,QAAQX,MAAAA;AAI5DuD,aAASX,QAAQU,WAAWvK;AAG5ByK,cAAUA,WAAWX;AAErB,QAAI,CAAC9D,IAAI6B,UAAU;AACjB0C,iBAAW3G,KAAKgE,MAAAA;;EAEpB;AAEA,SAAO4C,SAASF,SAASC,YAAY7G,WAAW+D,QAAQR,MAAWwD,KAAAA;AACrE;AAEA,SAASE,WAAW3E,KAAKoC,MAAME,KAAKP,OAAOE,QAAQ;AACjDjC,MAAIsC,MAAMA;AACVtC,MAAIoC,OAAOA;AACXpC,MAAIqC,QAAQD,OAAOL;AACnB/B,MAAIuC,SAASD,MAAML;AACnBjC,MAAI+B,QAAQA;AACZ/B,MAAIiC,SAASA;AACf;AAEA,SAAS2C,WAAWnE,OAAO/C,WAAW+D,QAAQR,QAAQ;AACpD,QAAM4D,cAAcpD,OAAOqD;AAC3B,MAAI,EAACjI,GAAGE,EAAAA,IAAKW;AAEb,aAAWkE,UAAUnB,OAAO;AAC1B,UAAMT,MAAM4B,OAAO5B;AACnB,UAAMW,QAAQM,OAAOW,OAAOjB,KAAK,KAAK;MAACU,OAAO;MAAGC,QAAQ;MAAGf,QAAQ;IAAC;AACrE,UAAMA,SAAS,OAAQK,cAAcD,MAAMJ,UAAW;AACtD,QAAIqB,OAAOf,YAAY;AACrB,YAAMkB,QAAQrE,UAAUgG,IAAInD;AAC5B,YAAM0B,SAAStB,MAAMY,QAAQvB,IAAIiC;AACjC,UAAI8C,QAAQpE,MAAMpF,KAAK,GAAG;AACxBwB,YAAI4D,MAAMpF;;AAEZ,UAAIyE,IAAI6B,UAAU;AAChB8C,mBAAW3E,KAAK6E,YAAYzC,MAAMrF,GAAG0E,OAAO6B,aAAauB,YAAYxC,QAAQwC,YAAYzC,MAAMH,MAAAA;aAC1F;AACL0C,mBAAW3E,KAAKtC,UAAU0E,OAAOzB,MAAMW,QAAQvE,GAAGgF,OAAOE,MAAAA;;AAE3DtB,YAAMpF,QAAQwB;AACd4D,YAAMW,UAAUS;AAChBhF,UAAIiD,IAAIuC;WACH;AACL,YAAMN,SAASvE,UAAUkG,IAAIrD;AAC7B,YAAMwB,QAAQpB,MAAMY,QAAQvB,IAAI+B;AAChC,UAAIgD,QAAQpE,MAAMpF,KAAK,GAAG;AACxBsB,YAAI8D,MAAMpF;;AAEZ,UAAIyE,IAAI6B,UAAU;AAChB8C,mBAAW3E,KAAKnD,GAAGgI,YAAYvC,KAAKP,OAAON,OAAO+B,cAAcqB,YAAYtC,SAASsC,YAAYvC,GAAG;aAC/F;AACLqC,mBAAW3E,KAAKnD,GAAGa,UAAU4E,MAAM3B,MAAMW,QAAQS,OAAOE,MAAAA;;AAE1DtB,YAAMpF,QAAQsB;AACd8D,YAAMW,UAAUW;AAChBpF,UAAImD,IAAIqC;;EAEZ;AAEA3E,YAAUb,IAAIA;AACda,YAAUX,IAAIA;AAChB;AAwBA,IAAA,UAAe;EAQbiI,OAAOtJ,OAAOuJ,MAAM;AAClB,QAAI,CAACvJ,MAAM+E,OAAO;AAChB/E,YAAM+E,QAAQ,CAAA;;AAIhBwE,SAAKpD,WAAWoD,KAAKpD,YAAY;AACjCoD,SAAKtJ,WAAWsJ,KAAKtJ,YAAY;AACjCsJ,SAAK1E,SAAS0E,KAAK1E,UAAU;AAE7B0E,SAAKC,UAAUD,KAAKC,WAAW,WAAW;AACxC,aAAO;QAAC;UACNC,GAAG;UACHC,KAAK1H,WAAW;AACduH,iBAAKG,KAAK1H,SAAAA;UACZ;QACF;MAAE;IACJ;AAEAhC,UAAM+E,MAAM7C,KAAKqH,IAAAA;EACnB;EAOAI,UAAU3J,OAAO4J,YAAY;AAC3B,UAAMrJ,SAAQP,MAAM+E,QAAQ/E,MAAM+E,MAAMlE,QAAQ+I,UAAc,IAAA;AAC9D,QAAIrJ,WAAU,IAAI;AAChBP,YAAM+E,MAAM8E,OAAOtJ,QAAO,CAAA;;EAE9B;EAQAuJ,UAAU9J,OAAOuJ,MAAMxM,SAAS;AAC9BwM,SAAKpD,WAAWpJ,QAAQoJ;AACxBoD,SAAKtJ,WAAWlD,QAAQkD;AACxBsJ,SAAK1E,SAAS9H,QAAQ8H;EACxB;EAUAmE,OAAOhJ,OAAOqG,OAAOE,QAAQwD,YAAY;AACvC,QAAI,CAAC/J,OAAO;AACV;;AAGF,UAAMoJ,UAAUY,UAAUhK,MAAMjD,QAAQmJ,OAAOkD,OAAO;AACtD,UAAM9C,iBAAiBjH,KAAKC,IAAI+G,QAAQ+C,QAAQ/C,OAAO,CAAA;AACvD,UAAMG,kBAAkBnH,KAAKC,IAAIiH,SAAS6C,QAAQ7C,QAAQ,CAAA;AAC1D,UAAMxB,QAAQ0B,iBAAiBzG,MAAM+E,KAAK;AAC1C,UAAMkF,gBAAgBlF,MAAMoC;AAC5B,UAAM+C,kBAAkBnF,MAAMI;AAI9BgF,SAAKnK,MAAM+E,OAAOT,CAAAA,QAAO;AACvB,UAAI,OAAOA,IAAI8F,iBAAiB,YAAY;AAC1C9F,YAAI8F,aAAY;;IAEpB,CAAA;AA6BA,UAAMC,0BAA0BJ,cAAcK,OAAO,CAACC,OAAO/E,SAC3DA,KAAKlB,IAAIvH,WAAWyI,KAAKlB,IAAIvH,QAAQyN,YAAY,QAAQD,QAAQA,QAAQ,GAAG,CAAM,KAAA;AAEpF,UAAMxE,SAASnJ,OAAO6N,OAAO;MAC3B7C,YAAYvB;MACZyB,aAAavB;MACb6C;MACA9C;MACAE;MACAR,cAAcM,iBAAiB,IAAI+D;MACnCpE,eAAeO,kBAAkB;IACnC,CAAA;AACA,UAAMa,aAAazK,OAAOC,OAAO,CAAA,GAAIuM,OAAAA;AACrC9B,qBAAiBD,YAAY2C,UAAUD,UAAAA,CAAAA;AACvC,UAAM/H,YAAYpF,OAAOC,OAAO;MAC9BwK;MACAW,GAAG1B;MACH4B,GAAG1B;MACHrF,GAAGiI,QAAQ1C;MACXrF,GAAG+H,QAAQxC;OACVwC,OAAAA;AAEH,UAAM7D,SAASO,cAAcmE,cAAchD,OAAOiD,eAAkBnE,GAAAA,MAAAA;AAGpE6C,aAAS7D,MAAMoB,UAAUnE,WAAW+D,QAAQR,MAAAA;AAG5CqD,aAASqB,eAAejI,WAAW+D,QAAQR,MAAAA;AAG3C,QAAIqD,SAASsB,iBAAiBlI,WAAW+D,QAAQR,MAAS,GAAA;AAExDqD,eAASqB,eAAejI,WAAW+D,QAAQR,MAAAA;;AAG7C8C,qBAAiBrG,SAAAA;AAGjBkH,eAAWnE,MAAMiC,YAAYhF,WAAW+D,QAAQR,MAAAA;AAGhDvD,cAAUb,KAAKa,UAAUgG;AACzBhG,cAAUX,KAAKW,UAAUkG;AAEzBgB,eAAWnE,MAAMmC,gBAAgBlF,WAAW+D,QAAQR,MAAAA;AAEpDvF,UAAMgC,YAAY;MAChB0E,MAAM1E,UAAU0E;MAChBE,KAAK5E,UAAU4E;MACfD,OAAO3E,UAAU0E,OAAO1E,UAAUgG;MAClCnB,QAAQ7E,UAAU4E,MAAM5E,UAAUkG;MAClC3B,QAAQvE,UAAUkG;MAClB7B,OAAOrE,UAAUgG;IACnB;AAGAmC,SAAKpF,MAAM/C,WAAW,CAACkE,WAAW;AAChC,YAAM5B,MAAM4B,OAAO5B;AACnB1H,aAAOC,OAAOyH,KAAKtE,MAAMgC,SAAS;AAClCsC,UAAI0E,OAAOhH,UAAUgG,GAAGhG,UAAUkG,GAAG;QAACxB,MAAM;QAAGE,KAAK;QAAGD,OAAO;QAAGE,QAAQ;MAAC,CAAA;IAC5E,CAAA;EACF;AACF;AC9be,IAAM6D,eAAN,MAAMA;EAOnBC,eAAeC,QAAQC,aAAa;EAAA;EAQpCC,eAAeC,SAAS;AACtB,WAAO;EACT;EASAC,iBAAiBhL,OAAOiL,MAAMC,UAAU;EAAA;EAQxCC,oBAAoBnL,OAAOiL,MAAMC,UAAU;EAAA;EAK3CE,sBAAsB;AACpB,WAAO;EACT;EASAC,eAAe5K,SAAS4F,OAAOE,QAAQsE,aAAa;AAClDxE,YAAQhH,KAAKC,IAAI,GAAG+G,SAAS5F,QAAQ4F,KAAK;AAC1CE,aAASA,UAAU9F,QAAQ8F;AAC3B,WAAO;MACLF;MACAE,QAAQlH,KAAKC,IAAI,GAAGuL,cAAcxL,KAAKiM,MAAMjF,QAAQwE,WAAAA,IAAetE,MAAM;IAC5E;EACF;EAMAgF,WAAWX,QAAQ;AACjB,WAAO;EACT;EAMAY,aAAaC,QAAQ;EAErB;AACF;ACtEe,IAAMC,gBAAN,cAA4BhB,aAAAA;EACzCC,eAAepB,MAAM;AAInB,WAAOA,QAAQA,KAAKoC,cAAcpC,KAAKoC,WAAW,IAAA,KAAS;EAC7D;EACAH,aAAaC,QAAQ;AACnBA,WAAO1O,QAAQ6O,YAAY;EAC7B;AACF;ACTA,IAAMC,cAAc;AAOpB,IAAMC,cAAc;EAClBC,YAAY;EACZC,WAAW;EACXC,UAAU;EACVC,cAAc;EACdC,aAAa;EACbC,aAAa;EACbC,WAAW;EACXC,cAAc;EACdC,YAAY;AACd;AAEA,IAAMC,gBAAgB3O,CAAAA,UAASA,UAAU,QAAQA,UAAU;AAQ3D,SAAS4O,WAAW7B,QAAQC,aAAa;AACvC,QAAM6B,QAAQ9B,OAAO8B;AAIrB,QAAMC,eAAe/B,OAAOgC,aAAa,QAAA;AACzC,QAAMC,cAAcjC,OAAOgC,aAAa,OAAA;AAGxChC,SAAOiB,WAAAA,IAAe;IACpBiB,SAAS;MACPvG,QAAQoG;MACRtG,OAAOwG;MACPH,OAAO;QACLlC,SAASkC,MAAMlC;QACfjE,QAAQmG,MAAMnG;QACdF,OAAOqG,MAAMrG;MACf;IACF;EACF;AAKAqG,QAAMlC,UAAUkC,MAAMlC,WAAW;AAEjCkC,QAAMK,YAAYL,MAAMK,aAAa;AAErC,MAAIP,cAAcK,WAAc,GAAA;AAC9B,UAAMG,eAAeC,aAAarC,QAAQ,OAAA;AAC1C,QAAIoC,iBAAiBE,QAAW;AAC9BtC,aAAOvE,QAAQ2G;;;AAInB,MAAIR,cAAcG,YAAe,GAAA;AAC/B,QAAI/B,OAAO8B,MAAMnG,WAAW,IAAI;AAI9BqE,aAAOrE,SAASqE,OAAOvE,SAASwE,eAAe;WAC1C;AACL,YAAMsC,gBAAgBF,aAAarC,QAAQ,QAAA;AAC3C,UAAIuC,kBAAkBD,QAAW;AAC/BtC,eAAOrE,SAAS4G;;;;AAKtB,SAAOvC;AACT;AAIA,IAAMwC,uBAAuBC,+BAA+B;EAACC,SAAS;AAAI,IAAI;AAE9E,SAASC,YAAYC,MAAMvC,MAAMC,UAAU;AACzC,MAAIsC,MAAM;AACRA,SAAKxC,iBAAiBC,MAAMC,UAAUkC,oBAAAA;;AAE1C;AAEA,SAASK,eAAezN,OAAOiL,MAAMC,UAAU;AAC7C,MAAIlL,SAASA,MAAM4K,QAAQ;AACzB5K,UAAM4K,OAAOO,oBAAoBF,MAAMC,UAAUkC,oBAAAA;;AAErD;AAEA,SAASM,gBAAgBC,OAAO3N,OAAO;AACrC,QAAMiL,OAAOa,YAAY6B,MAAM1C,IAAI,KAAK0C,MAAM1C;AAC9C,QAAM,EAAC9J,GAAGE,EAAAA,IAAKoC,oBAAoBkK,OAAO3N,KAAAA;AAC1C,SAAO;IACLiL;IACAjL;IACA4N,QAAQD;IACRxM,GAAGA,MAAM+L,SAAY/L,IAAI;IACzBE,GAAGA,MAAM6L,SAAY7L,IAAI;EAC3B;AACF;AAEA,SAASwM,iBAAiBC,UAAUlD,QAAQ;AAC1C,aAAW4C,QAAQM,UAAU;AAC3B,QAAIN,SAAS5C,UAAU4C,KAAKO,SAASnD,MAAS,GAAA;AAC5C,aAAO;;EAEX;AACF;AAEA,SAASoD,qBAAqBhO,OAAOiL,MAAMC,UAAU;AACnD,QAAMN,SAAS5K,MAAM4K;AACrB,QAAMqD,WAAW,IAAIC,iBAAiBC,CAAAA,YAAW;AAC/C,QAAIC,UAAU;AACd,eAAWC,SAASF,SAAS;AAC3BC,gBAAUA,WAAWP,iBAAiBQ,MAAMC,YAAY1D,MAAAA;AACxDwD,gBAAUA,WAAW,CAACP,iBAAiBQ,MAAME,cAAc3D,MAAAA;IAC7D;AACA,QAAIwD,SAAS;AACXlD,eAAAA;;EAEJ,CAAA;AACA+C,WAASO,QAAQC,UAAU;IAACC,WAAW;IAAMC,SAAS;EAAI,CAAA;AAC1D,SAAOV;AACT;AAEA,SAASW,qBAAqB5O,OAAOiL,MAAMC,UAAU;AACnD,QAAMN,SAAS5K,MAAM4K;AACrB,QAAMqD,WAAW,IAAIC,iBAAiBC,CAAAA,YAAW;AAC/C,QAAIC,UAAU;AACd,eAAWC,SAASF,SAAS;AAC3BC,gBAAUA,WAAWP,iBAAiBQ,MAAME,cAAc3D,MAAAA;AAC1DwD,gBAAUA,WAAW,CAACP,iBAAiBQ,MAAMC,YAAY1D,MAAAA;IAC3D;AACA,QAAIwD,SAAS;AACXlD,eAAAA;;EAEJ,CAAA;AACA+C,WAASO,QAAQC,UAAU;IAACC,WAAW;IAAMC,SAAS;EAAI,CAAA;AAC1D,SAAOV;AACT;AAEA,IAAMY,qBAAqB,oBAAIC,IAAAA;AAC/B,IAAIC,sBAAsB;AAE1B,SAASC,iBAAiB;AACxB,QAAMC,MAAMC,OAAOC;AACnB,MAAIF,QAAQF,qBAAqB;AAC/B;;AAEFA,wBAAsBE;AACtBJ,qBAAmBlL,QAAQ,CAACyL,QAAQpP,UAAU;AAC5C,QAAIA,MAAMqP,4BAA4BJ,KAAK;AACzCG,aAAAA;;EAEJ,CAAA;AACF;AAEA,SAASE,8BAA8BtP,OAAOoP,QAAQ;AACpD,MAAI,CAACP,mBAAmBhJ,MAAM;AAC5BqJ,WAAOlE,iBAAiB,UAAUgE,cAAAA;;AAEpCH,qBAAmBU,IAAIvP,OAAOoP,MAAAA;AAChC;AAEA,SAASI,gCAAgCxP,OAAO;AAC9C6O,qBAAmBY,OAAOzP,KAAAA;AAC1B,MAAI,CAAC6O,mBAAmBhJ,MAAM;AAC5BqJ,WAAO/D,oBAAoB,UAAU6D,cAAAA;;AAEzC;AAEA,SAASU,qBAAqB1P,OAAOiL,MAAMC,UAAU;AACnD,QAAMN,SAAS5K,MAAM4K;AACrB,QAAM+E,YAAY/E,UAAUgF,eAAehF,MAAAA;AAC3C,MAAI,CAAC+E,WAAW;AACd;;AAEF,QAAMP,SAASS,UAAU,CAACxJ,OAAOE,WAAW;AAC1C,UAAMyB,IAAI2H,UAAUG;AACpB5E,aAAS7E,OAAOE,MAAAA;AAChB,QAAIyB,IAAI2H,UAAUG,aAAa;AAQ7B5E,eAAAA;;KAEDgE,MAAAA;AAGH,QAAMjB,WAAW,IAAI8B,eAAe5B,CAAAA,YAAW;AAC7C,UAAME,QAAQF,QAAQ,CAAE;AACxB,UAAM9H,QAAQgI,MAAM2B,YAAY3J;AAChC,UAAME,SAAS8H,MAAM2B,YAAYzJ;AAIjC,QAAIF,UAAU,KAAKE,WAAW,GAAG;AAC/B;;AAEF6I,WAAO/I,OAAOE,MAAAA;EAChB,CAAA;AACA0H,WAASO,QAAQmB,SAAAA;AACjBL,gCAA8BtP,OAAOoP,MAAAA;AAErC,SAAOnB;AACT;AAEA,SAASgC,gBAAgBjQ,OAAOiL,MAAMgD,UAAU;AAC9C,MAAIA,UAAU;AACZA,aAASiC,WAAU;;AAErB,MAAIjF,SAAS,UAAU;AACrBuE,oCAAgCxP,KAAAA;;AAEpC;AAEA,SAASmQ,qBAAqBnQ,OAAOiL,MAAMC,UAAU;AACnD,QAAMN,SAAS5K,MAAM4K;AACrB,QAAMwF,QAAQP,UAAU,CAAClC,UAAU;AAIjC,QAAI3N,MAAMqQ,QAAQ,MAAM;AACtBnF,eAASwC,gBAAgBC,OAAO3N,KAAAA,CAAAA;;KAEjCA,KAAAA;AAEHuN,cAAY3C,QAAQK,MAAMmF,KAAAA;AAE1B,SAAOA;AACT;AAMe,IAAME,cAAN,cAA0B5F,aAAAA;EAOvCC,eAAeC,QAAQC,aAAa;AAIlC,UAAME,UAAUH,UAAUA,OAAOe,cAAcf,OAAOe,WAAW,IAAA;AASjE,QAAIZ,WAAWA,QAAQH,WAAWA,QAAQ;AAGxC6B,iBAAW7B,QAAQC,WAAAA;AACnB,aAAOE;;AAGT,WAAO;EACT;EAKAD,eAAeC,SAAS;AACtB,UAAMH,SAASG,QAAQH;AACvB,QAAI,CAACA,OAAOiB,WAAAA,GAAc;AACxB,aAAO;;AAGT,UAAMiB,UAAUlC,OAAOiB,WAAAA,EAAaiB;AACpC;MAAC;MAAU;MAASnJ,QAAQ,CAAC4M,SAAS;AACpC,YAAM1S,QAAQiP,QAAQyD,IAAK;AAC3B,UAAInR,cAAcvB,KAAQ,GAAA;AACxB+M,eAAO4F,gBAAgBD,IAAAA;aAClB;AACL3F,eAAO6F,aAAaF,MAAM1S,KAAAA;;IAE9B,CAAA;AAEA,UAAM6O,QAAQI,QAAQJ,SAAS,CAAA;AAC/B9P,WAAO8T,KAAKhE,KAAAA,EAAO/I,QAAQ,CAACgN,QAAQ;AAClC/F,aAAO8B,MAAMiE,GAAAA,IAAOjE,MAAMiE,GAAI;IAChC,CAAA;AAOA/F,WAAOvE,QAAQuE,OAAOvE;AAEtB,WAAOuE,OAAOiB,WAAY;AAC1B,WAAO;EACT;EAQAb,iBAAiBhL,OAAOiL,MAAMC,UAAU;AAEtC,SAAKC,oBAAoBnL,OAAOiL,IAAAA;AAEhC,UAAM2F,UAAU5Q,MAAM6Q,aAAa7Q,MAAM6Q,WAAW,CAAA;AACpD,UAAMC,WAAW;MACfC,QAAQ/C;MACRgD,QAAQpC;MACRQ,QAAQM;IACV;AACA,UAAMxP,UAAU4Q,SAAS7F,IAAAA,KAASkF;AAClCS,YAAQ3F,IAAAA,IAAQ/K,QAAQF,OAAOiL,MAAMC,QAAAA;EACvC;EAOAC,oBAAoBnL,OAAOiL,MAAM;AAC/B,UAAM2F,UAAU5Q,MAAM6Q,aAAa7Q,MAAM6Q,WAAW,CAAA;AACpD,UAAMT,QAAQQ,QAAQ3F,IAAK;AAE3B,QAAI,CAACmF,OAAO;AACV;;AAGF,UAAMU,WAAW;MACfC,QAAQd;MACRe,QAAQf;MACRb,QAAQa;IACV;AACA,UAAM/P,UAAU4Q,SAAS7F,IAAAA,KAASwC;AAClCvN,YAAQF,OAAOiL,MAAMmF,KAAAA;AACrBQ,YAAQ3F,IAAAA,IAAQiC;EAClB;EAEA9B,sBAAsB;AACpB,WAAO8D,OAAOC;EAChB;EAQA9D,eAAeT,QAAQvE,OAAOE,QAAQsE,aAAa;AACjD,WAAOQ,eAAeT,QAAQvE,OAAOE,QAAQsE,WAAAA;EAC/C;EAKAU,WAAWX,QAAQ;AACjB,UAAM+E,YAAY/E,UAAUgF,eAAehF,MAAAA;AAC3C,WAAO,CAAC,EAAE+E,aAAaA,UAAUsB;EACnC;AACF;AC/XO,SAASC,gBAAgBtG,QAAQ;AACtC,MAAI,CAACuG,gBAAsB,KAAA,OAAOC,oBAAoB,eAAexG,kBAAkBwG,iBAAkB;AACvG,WAAO1F;;AAET,SAAO4E;AACT;ACLe,IAAMe,UAAN,MAAMA;EAKnBlQ;EACAE;EACAiQ,SAAS;EACTvU;EACAwU;EAEAC,gBAAgB/P,kBAAkC;AAChD,UAAM,EAACN,GAAGE,EAAAA,IAAK,KAAKiB,SAAS;MAAC;MAAK;OAAMb,gBAAAA;AACzC,WAAO;MAACN;MAAGE;IAAC;EACd;EAEAoQ,WAAW;AACT,WAAOC,SAAS,KAAKvQ,CAAC,KAAKuQ,SAAS,KAAKrQ,CAAC;EAC5C;EASAiB,SAASqP,OAAiBC,OAAmD;AAC3E,UAAMC,QAAQ,KAAKN;AACnB,QAAI,CAACK,SAAS,CAACC,OAAO;AAEpB,aAAO;;AAET,UAAMC,MAA+B,CAAA;AACrCH,UAAMhO,QAAQ,CAAC4M,SAAS;AACtBuB,UAAIvB,IAAAA,IAAQsB,MAAMtB,IAAK,KAAIsB,MAAMtB,IAAAA,EAAMe,OAAM,IAAKO,MAAMtB,IAAAA,EAAMwB,MAAM,KAAKxB,IAAe;IAC1F,CAAA;AACA,WAAOuB;EACT;AACF;AArCE,cAFmBT,SAEZW,YAAW,CAAA;AAClB,cAHmBX,SAGZY;ACQF,SAASC,SAASC,OAAOC,OAAO;AACrC,QAAMC,WAAWF,MAAMpV,QAAQqV;AAC/B,QAAME,qBAAqBC,kBAAkBJ,KAAAA;AAC7C,QAAMK,aAAanT,KAAKoT,IAAIJ,SAASK,iBAAiBJ,oBAAoBA,kBAAAA;AAC1E,QAAMK,eAAeN,SAASO,MAAMC,UAAUC,gBAAgBV,KAAAA,IAAS,CAAA;AACvE,QAAMW,kBAAkBJ,aAAarU;AACrC,QAAM0U,QAAQL,aAAa,CAAE;AAC7B,QAAMM,OAAON,aAAaI,kBAAkB,CAAE;AAC9C,QAAMG,WAAW,CAAA;AAGjB,MAAIH,kBAAkBP,YAAY;AAChCW,eAAWf,OAAOc,UAAUP,cAAcI,kBAAkBP,UAAAA;AAC5D,WAAOU;;AAGT,QAAME,UAAUC,iBAAiBV,cAAcP,OAAOI,UAAAA;AAEtD,MAAIO,kBAAkB,GAAG;AACvB,QAAI1S,GAAGC;AACP,UAAMgT,kBAAkBP,kBAAkB,IAAI1T,KAAKkU,OAAON,OAAOD,UAAUD,kBAAkB,EAAA,IAAM;AACnGrS,SAAK0R,OAAOc,UAAUE,SAAShU,cAAckU,eAAAA,IAAmB,IAAIN,QAAQM,iBAAiBN,KAAAA;AAC7F,SAAK3S,IAAI,GAAGC,OAAOyS,kBAAkB,GAAG1S,IAAIC,MAAMD,KAAK;AACrDK,WAAK0R,OAAOc,UAAUE,SAAST,aAAatS,CAAAA,GAAIsS,aAAatS,IAAI,CAAE,CAAA;IACrE;AACAK,SAAK0R,OAAOc,UAAUE,SAASH,MAAM7T,cAAckU,eAAAA,IAAmBlB,MAAM9T,SAAS2U,OAAOK,eAAe;AAC3G,WAAOJ;;AAETxS,OAAK0R,OAAOc,UAAUE,OAAAA;AACtB,SAAOF;AACT;AAEA,SAASX,kBAAkBJ,OAAO;AAChC,QAAMqB,SAASrB,MAAMpV,QAAQyW;AAC7B,QAAMC,aAAatB,MAAMuB,UAAS;AAClC,QAAMC,WAAWxB,MAAMyB,UAAUH,cAAcD,SAAS,IAAI;AAC5D,QAAMK,WAAW1B,MAAM2B,aAAaL;AACpC,SAAOpU,KAAKiM,MAAMjM,KAAKoT,IAAIkB,UAAUE,QAAAA,CAAAA;AACvC;AAOA,SAASR,iBAAiBV,cAAcP,OAAOI,YAAY;AACzD,QAAMuB,mBAAmBC,eAAerB,YAAAA;AACxC,QAAMS,UAAUhB,MAAM9T,SAASkU;AAI/B,MAAI,CAACuB,kBAAkB;AACrB,WAAO1U,KAAKC,IAAI8T,SAAS,CAAA;;AAG3B,QAAMa,UAAUC,WAAWH,gBAAAA;AAC3B,WAAS1T,IAAI,GAAGC,OAAO2T,QAAQ3V,SAAS,GAAG+B,IAAIC,MAAMD,KAAK;AACxD,UAAM+F,SAAS6N,QAAQ5T,CAAE;AACzB,QAAI+F,SAASgN,SAAS;AACpB,aAAOhN;;EAEX;AACA,SAAO/G,KAAKC,IAAI8T,SAAS,CAAA;AAC3B;AAKA,SAASN,gBAAgBV,OAAO;AAC9B,QAAMzT,SAAS,CAAA;AACf,MAAI0B,GAAGC;AACP,OAAKD,IAAI,GAAGC,OAAO8R,MAAM9T,QAAQ+B,IAAIC,MAAMD,KAAK;AAC9C,QAAI+R,MAAM/R,CAAE,EAACuS,OAAO;AAClBjU,aAAOuD,KAAK7B,CAAAA;;EAEhB;AACA,SAAO1B;AACT;AAQA,SAASwU,WAAWf,OAAOc,UAAUP,cAAcS,SAAS;AAC1D,MAAIzN,QAAQ;AACZ,MAAIwO,OAAOxB,aAAa,CAAE;AAC1B,MAAItS;AAEJ+S,YAAU/T,KAAK+U,KAAKhB,OAAAA;AACpB,OAAK/S,IAAI,GAAGA,IAAI+R,MAAM9T,QAAQ+B,KAAK;AACjC,QAAIA,MAAM8T,MAAM;AACdjB,eAAShR,KAAKkQ,MAAM/R,CAAE,CAAA;AACtBsF;AACAwO,aAAOxB,aAAahN,QAAQyN,OAAQ;;EAExC;AACF;AASA,SAAS1S,KAAK0R,OAAOc,UAAUE,SAASiB,YAAYC,UAAU;AAC5D,QAAMzU,QAAQ0U,eAAeF,YAAY,CAAA;AACzC,QAAMvU,MAAMT,KAAKoT,IAAI8B,eAAeD,UAAUlC,MAAM9T,MAAM,GAAG8T,MAAM9T,MAAM;AACzE,MAAIqH,QAAQ;AACZ,MAAIrH,QAAQ+B,GAAG8T;AAEff,YAAU/T,KAAK+U,KAAKhB,OAAAA;AACpB,MAAIkB,UAAU;AACZhW,aAASgW,WAAWD;AACpBjB,cAAU9U,SAASe,KAAKiM,MAAMhN,SAAS8U,OAAAA;;AAGzCe,SAAOtU;AAEP,SAAOsU,OAAO,GAAG;AACfxO;AACAwO,WAAO9U,KAAKkU,MAAM1T,QAAQ8F,QAAQyN,OAAAA;EACpC;AAEA,OAAK/S,IAAIhB,KAAKC,IAAIO,OAAO,CAAIQ,GAAAA,IAAIP,KAAKO,KAAK;AACzC,QAAIA,MAAM8T,MAAM;AACdjB,eAAShR,KAAKkQ,MAAM/R,CAAE,CAAA;AACtBsF;AACAwO,aAAO9U,KAAKkU,MAAM1T,QAAQ8F,QAAQyN,OAAAA;;EAEtC;AACF;AAMA,SAASY,eAAeQ,KAAK;AAC3B,QAAMC,MAAMD,IAAIlW;AAChB,MAAI+B,GAAG/C;AAEP,MAAImX,MAAM,GAAG;AACX,WAAO;;AAGT,OAAKnX,OAAOkX,IAAI,CAAE,GAAEnU,IAAI,GAAGA,IAAIoU,KAAK,EAAEpU,GAAG;AACvC,QAAImU,IAAInU,CAAE,IAAGmU,IAAInU,IAAI,CAAE,MAAK/C,MAAM;AAChC,aAAO;;EAEX;AACA,SAAOA;AACT;ACjKA,IAAMoX,eAAe,CAACC,UAAUA,UAAU,SAAS,UAAUA,UAAU,UAAU,SAASA;AAC1F,IAAMC,iBAAiB,CAACzC,OAAO0C,MAAMrB,WAAWqB,SAAS,SAASA,SAAS,SAAS1C,MAAM0C,IAAAA,IAAQrB,SAASrB,MAAM0C,IAAAA,IAAQrB;AACzH,IAAMsB,gBAAgB,CAACC,aAAarC,kBAAkBrT,KAAKoT,IAAIC,iBAAiBqC,aAAaA,WAAAA;AAY7F,SAASC,OAAOR,KAAKS,UAAU;AAC7B,QAAMtW,SAAS,CAAA;AACf,QAAMuW,YAAYV,IAAIlW,SAAS2W;AAC/B,QAAMR,MAAMD,IAAIlW;AAChB,MAAI+B,IAAI;AAER,SAAOA,IAAIoU,KAAKpU,KAAK6U,WAAW;AAC9BvW,WAAOuD,KAAKsS,IAAInV,KAAKiM,MAAMjL,CAAG,CAAA,CAAA;EAChC;AACA,SAAO1B;AACT;AAOA,SAASwW,oBAAoBhD,OAAO5R,QAAO6U,iBAAiB;AAC1D,QAAM9W,SAAS6T,MAAMC,MAAM9T;AAC3B,QAAM+W,cAAahW,KAAKoT,IAAIlS,QAAOjC,SAAS,CAAA;AAC5C,QAAMuB,QAAQsS,MAAMmD;AACpB,QAAMxV,MAAMqS,MAAMoD;AAClB,QAAMC,UAAU;AAChB,MAAIC,YAAYtD,MAAMuD,gBAAgBL,WAAAA;AACtC,MAAI7B;AAEJ,MAAI4B,iBAAiB;AACnB,QAAI9W,WAAW,GAAG;AAChBkV,eAASnU,KAAKC,IAAImW,YAAY5V,OAAOC,MAAM2V,SAAAA;eAClClV,WAAU,GAAG;AACtBiT,gBAAUrB,MAAMuD,gBAAgB,CAAA,IAAKD,aAAa;WAC7C;AACLjC,gBAAUiC,YAAYtD,MAAMuD,gBAAgBL,cAAa,CAAA,KAAM;;AAEjEI,iBAAaJ,cAAa9U,SAAQiT,SAAS,CAACA;AAG5C,QAAIiC,YAAY5V,QAAQ2V,WAAWC,YAAY3V,MAAM0V,SAAS;AAC5D;;;AAGJ,SAAOC;AACT;AAMA,SAASE,eAAeC,QAAQtX,QAAQ;AACtC6L,OAAKyL,QAAQ,CAACC,UAAU;AACtB,UAAMC,KAAKD,MAAMC;AACjB,UAAMC,QAAQD,GAAGxX,SAAS;AAC1B,QAAI+B;AACJ,QAAI0V,QAAQzX,QAAQ;AAClB,WAAK+B,IAAI,GAAGA,IAAI0V,OAAO,EAAE1V,GAAG;AAC1B,eAAOwV,MAAM7X,KAAK8X,GAAGzV,CAAAA,CAAE;MACzB;AACAyV,SAAGjM,OAAO,GAAGkM,KAAAA;;EAEjB,CAAA;AACF;AAKA,SAASC,kBAAkBjZ,SAAS;AAClC,SAAOA,QAAQkZ,YAAYlZ,QAAQ0W,aAAa;AAClD;AAKA,SAASyC,eAAenZ,SAASoZ,UAAU;AACzC,MAAI,CAACpZ,QAAQyN,SAAS;AACpB,WAAO;;AAGT,QAAM4L,OAAOC,OAAOtZ,QAAQqZ,MAAMD,QAAAA;AAClC,QAAM/M,UAAUY,UAAUjN,QAAQqM,OAAO;AACzC,QAAMkN,QAAQC,QAAQxZ,QAAQyZ,IAAI,IAAIzZ,QAAQyZ,KAAKlY,SAAS;AAE5D,SAAO,QAAS8X,KAAKK,aAAcrN,QAAQ7C;AAC7C;AAEA,SAASmQ,mBAAmBC,QAAQxE,OAAO;AACzC,SAAOyE,cAAcD,QAAQ;IAC3BxE;IACAlH,MAAM;EACR,CAAA;AACF;AAEA,SAAS4L,kBAAkBF,QAAQpW,QAAOuW,MAAM;AAC9C,SAAOF,cAAcD,QAAQ;IAC3BG;IACAvW,OAAAA;IACA0K,MAAM;EACR,CAAA;AACF;AAEA,SAAS8L,WAAWpC,OAAO1U,UAAUhB,SAAS;AAE5C,MAAI6S,MAAMkF,mBAAmBrC,KAAAA;AAC7B,MAAI,WAAY1U,aAAa,WAAa,CAAChB,WAAWgB,aAAa,SAAU;AAC3E6R,UAAM4C,aAAa5C,GAAAA;;AAErB,SAAOA;AACT;AAEA,SAASmF,UAAU9E,OAAOqB,QAAQvT,UAAU0U,OAAO;AACjD,QAAM,EAAC/N,KAAKF,MAAMG,QAAQF,OAAO3G,MAAK,IAAImS;AAC1C,QAAM,EAACnQ,WAAWkV,OAAAA,IAAUlX;AAC5B,MAAImX,WAAW;AACf,MAAIC,UAAUC,QAAQC;AACtB,QAAM/Q,SAASM,SAASD;AACxB,QAAMP,QAAQM,QAAQD;AAEtB,MAAIyL,MAAM/M,aAAY,GAAI;AACxBiS,aAASE,eAAe5C,OAAOjO,MAAMC,KAAAA;AAErC,QAAIc,SAASxH,QAAW,GAAA;AACtB,YAAMuX,iBAAiB5a,OAAO8T,KAAKzQ,QAAAA,EAAU,CAAE;AAC/C,YAAMpC,QAAQoC,SAASuX,cAAe;AACtCF,eAASJ,OAAOM,cAAAA,EAAgBC,iBAAiB5Z,KAAAA,IAAS0I,SAASiN;eAC1DvT,aAAa,UAAU;AAChCqX,gBAAUtV,UAAU6E,SAAS7E,UAAU4E,OAAO,IAAIL,SAASiN;WACtD;AACL8D,eAAS1C,eAAezC,OAAOlS,UAAUuT,MAAAA;;AAE3C4D,eAAWzQ,QAAQD;SACd;AACL,QAAIe,SAASxH,QAAW,GAAA;AACtB,YAAMuX,iBAAiB5a,OAAO8T,KAAKzQ,QAAAA,EAAU,CAAE;AAC/C,YAAMpC,QAAQoC,SAASuX,cAAe;AACtCH,eAASH,OAAOM,cAAAA,EAAgBC,iBAAiB5Z,KAAAA,IAASwI,QAAQmN;eACzDvT,aAAa,UAAU;AAChCoX,gBAAUrV,UAAU0E,OAAO1E,UAAU2E,SAAS,IAAIN,QAAQmN;WACrD;AACL6D,eAASzC,eAAezC,OAAOlS,UAAUuT,MAAAA;;AAE3C8D,aAASC,eAAe5C,OAAO9N,QAAQD,GAAAA;AACvCuQ,eAAWlX,aAAa,SAAS,CAACyX,UAAUA;;AAE9C,SAAO;IAACL;IAAQC;IAAQF;IAAUD;EAAQ;AAC5C;AAEe,IAAMQ,QAAN,cAAoBtG,QAAAA;EAGjCrU,YAAY4a,KAAK;AACf,UAAK;AAGL,SAAKC,KAAKD,IAAIC;AAEd,SAAK5M,OAAO2M,IAAI3M;AAEhB,SAAKlO,UAAUmQ;AAEf,SAAKmD,MAAMuH,IAAIvH;AAEf,SAAKrQ,QAAQ4X,IAAI5X;AAIjB,SAAK4G,MAAMsG;AAEX,SAAKrG,SAASqG;AAEd,SAAKxG,OAAOwG;AAEZ,SAAKvG,QAAQuG;AAEb,SAAK7G,QAAQ6G;AAEb,SAAK3G,SAAS2G;AACd,SAAK4K,WAAW;MACdpR,MAAM;MACNC,OAAO;MACPC,KAAK;MACLC,QAAQ;IACV;AAEA,SAAKuQ,WAAWlK;AAEhB,SAAK6K,YAAY7K;AAEjB,SAAK8K,aAAa9K;AAElB,SAAK+K,gBAAgB/K;AAErB,SAAKgL,cAAchL;AAEnB,SAAKiL,eAAejL;AAIpB,SAAKtP,OAAOsP;AAEZ,SAAKkL,gBAAgBlL;AACrB,SAAKuF,MAAMvF;AACX,SAAK5N,MAAM4N;AACX,SAAKmL,SAASnL;AAEd,SAAKkF,QAAQ,CAAA;AAEb,SAAKkG,iBAAiB;AAEtB,SAAKC,cAAc;AAEnB,SAAKC,cAAc;AACnB,SAAK5E,UAAU;AACf,SAAKE,aAAa;AAClB,SAAK2E,oBAAoB,CAAA;AAEzB,SAAKnD,cAAcpI;AAEnB,SAAKqI,YAAYrI;AACjB,SAAK1O,iBAAiB;AACtB,SAAKka,WAAWxL;AAChB,SAAKyL,WAAWzL;AAChB,SAAK0L,gBAAgB1L;AACrB,SAAK2L,gBAAgB3L;AACrB,SAAK4L,eAAe;AACpB,SAAKC,eAAe;AACpB,SAAKC,SAAS,CAAA;AACd,SAAKC,oBAAoB;AACzB,SAAKC,WAAWhM;EAClB;EAMAjQ,KAAKF,SAAS;AACZ,SAAKA,UAAUA,QAAQoc,WAAW,KAAKxN,WAAU,CAAA;AAEjD,SAAK/N,OAAOb,QAAQa;AAGpB,SAAK+a,WAAW,KAAKxb,MAAMJ,QAAQ0V,GAAG;AACtC,SAAKiG,WAAW,KAAKvb,MAAMJ,QAAQuC,GAAG;AACtC,SAAKuZ,gBAAgB,KAAK1b,MAAMJ,QAAQqc,YAAY;AACpD,SAAKR,gBAAgB,KAAKzb,MAAMJ,QAAQsc,YAAY;EACtD;EAQAlc,MAAMmc,KAAK/Y,QAAO;AAChB,WAAO+Y;EACT;EAOAC,gBAAgB;AACd,QAAI,EAACZ,UAAUD,UAAUG,eAAeD,cAAAA,IAAiB;AACzDD,eAAWa,gBAAgBb,UAAU9V,OAAOC,iBAAiB;AAC7D4V,eAAWc,gBAAgBd,UAAU7V,OAAO4W,iBAAiB;AAC7DZ,oBAAgBW,gBAAgBX,eAAehW,OAAOC,iBAAiB;AACvE8V,oBAAgBY,gBAAgBZ,eAAe/V,OAAO4W,iBAAiB;AACvE,WAAO;MACLhH,KAAK+G,gBAAgBb,UAAUE,aAAAA;MAC/BvZ,KAAKka,gBAAgBd,UAAUE,aAAAA;MAC/Bc,YAAYC,eAAShB,QAAAA;MACrBiB,YAAYD,eAASjB,QAAAA;IACvB;EACF;EAQAmB,UAAUC,UAAU;AAClB,QAAI,EAACrH,KAAKnT,KAAKoa,YAAYE,WAAAA,IAAc,KAAKL,cAAa;AAC3D,QAAI5Z;AAEJ,QAAI+Z,cAAcE,YAAY;AAC5B,aAAO;QAACnH;QAAKnT;MAAG;;AAGlB,UAAMya,QAAQ,KAAKC,wBAAuB;AAC1C,aAAS3Z,IAAI,GAAGC,OAAOyZ,MAAMzb,QAAQ+B,IAAIC,MAAM,EAAED,GAAG;AAClDV,cAAQoa,MAAM1Z,CAAE,EAACtC,WAAW8b,UAAU,MAAMC,QAAAA;AAC5C,UAAI,CAACJ,YAAY;AACfjH,cAAMpT,KAAKoT,IAAIA,KAAK9S,MAAM8S,GAAG;;AAE/B,UAAI,CAACmH,YAAY;AACfta,cAAMD,KAAKC,IAAIA,KAAKK,MAAML,GAAG;;IAEjC;AAGAmT,UAAMmH,cAAcnH,MAAMnT,MAAMA,MAAMmT;AACtCnT,UAAMoa,cAAcjH,MAAMnT,MAAMmT,MAAMnT;AAEtC,WAAO;MACLmT,KAAK+G,gBAAgB/G,KAAK+G,gBAAgBla,KAAKmT,GAAAA,CAAAA;MAC/CnT,KAAKka,gBAAgBla,KAAKka,gBAAgB/G,KAAKnT,GAAAA,CAAAA;IACjD;EACF;EAOAoI,aAAa;AACX,WAAO;MACLhB,MAAM,KAAKwR,eAAe;MAC1BtR,KAAK,KAAKoR,cAAc;MACxBrR,OAAO,KAAKwR,gBAAgB;MAC5BtR,QAAQ,KAAKoR,iBAAiB;IAChC;EACF;EAOAgC,WAAW;AACT,WAAO,KAAK7H;EACd;EAKA8H,YAAY;AACV,UAAMlc,OAAO,KAAKgC,MAAMhC;AACxB,WAAO,KAAKjB,QAAQod,WAAW,KAAK/U,aAAY,IAAKpH,KAAKoc,UAAUpc,KAAKqc,YAAYrc,KAAKmc,UAAU,CAAA;EACtG;EAKAG,cAActY,YAAY,KAAKhC,MAAMgC,WAAW;AAC9C,UAAML,QAAQ,KAAK4W,gBAAgB,KAAKA,cAAc,KAAKgC,mBAAmBvY,SAAS;AACvF,WAAOL;EACT;EAGAyI,eAAe;AACb,SAAK4O,SAAS,CAAA;AACd,SAAKC,oBAAoB;EAC3B;EAMAuB,eAAe;AACbC,aAAK,KAAK1d,QAAQyd,cAAc;MAAC;IAAK,CAAA;EACxC;EAUAxR,OAAOoO,UAAUW,WAAW2C,SAAS;AACnC,UAAM,EAACC,aAAaC,OAAOxI,OAAOC,SAAAA,IAAY,KAAKtV;AACnD,UAAM8d,aAAaxI,SAASwI;AAG5B,SAAKL,aAAY;AAGjB,SAAKpD,WAAWA;AAChB,SAAKW,YAAYA;AACjB,SAAKD,WAAW4C,UAAU9d,OAAOC,OAAO;MACtC6J,MAAM;MACNC,OAAO;MACPC,KAAK;MACLC,QAAQ;OACP6T,OAAAA;AAEH,SAAKtI,QAAQ;AACb,SAAKoG,cAAc;AACnB,SAAKF,iBAAiB;AACtB,SAAKC,cAAc;AAGnB,SAAKuC,oBAAmB;AACxB,SAAKC,cAAa;AAClB,SAAKC,mBAAkB;AAEvB,SAAKlH,aAAa,KAAK1O,aAAY,IAC/B,KAAKiB,QAAQqU,QAAQhU,OAAOgU,QAAQ/T,QACpC,KAAKJ,SAASmU,QAAQ9T,MAAM8T,QAAQ7T;AAGxC,QAAI,CAAC,KAAKoS,mBAAmB;AAC3B,WAAKgC,iBAAgB;AACrB,WAAKC,oBAAmB;AACxB,WAAKC,gBAAe;AACpB,WAAK9C,SAAS+C,UAAU,MAAMR,OAAOD,WAAAA;AACrC,WAAK1B,oBAAoB;;AAG3B,SAAKoC,iBAAgB;AAErB,SAAKjJ,QAAQ,KAAKkJ,WAAU,KAAM,CAAA;AAGlC,SAAKC,gBAAe;AAIpB,UAAMC,kBAAkBX,aAAa,KAAKzI,MAAM9T;AAChD,SAAKmd,sBAAsBD,kBAAkBxG,OAAO,KAAK5C,OAAOyI,UAAAA,IAAc,KAAKzI,KAAK;AAMxF,SAAKtI,UAAS;AAGd,SAAK4R,6BAA4B;AACjC,SAAKC,uBAAsB;AAC3B,SAAKC,4BAA2B;AAGhC,QAAIvJ,SAAS7H,YAAY6H,SAASH,YAAYG,SAASwJ,WAAW,SAAS;AACzE,WAAKzJ,QAAQF,SAAS,MAAM,KAAKE,KAAK;AACtC,WAAKoG,cAAc;AACnB,WAAKsD,cAAa;;AAGpB,QAAIN,iBAAiB;AAEnB,WAAKC,sBAAsB,KAAKrJ,KAAK;;AAGvC,SAAK2J,UAAS;AACd,SAAKC,IAAG;AACR,SAAKC,SAAQ;AAIb,SAAKC,YAAW;EAClB;EAKApS,YAAY;AACV,QAAIqS,gBAAgB,KAAKpf,QAAQkC;AACjC,QAAImd,YAAYC;AAEhB,QAAI,KAAKjX,aAAY,GAAI;AACvBgX,mBAAa,KAAK1V;AAClB2V,iBAAW,KAAK1V;WACX;AACLyV,mBAAa,KAAKxV;AAClByV,iBAAW,KAAKxV;AAEhBsV,sBAAgB,CAACA;;AAEnB,SAAK7G,cAAc8G;AACnB,SAAK7G,YAAY8G;AACjB,SAAK7d,iBAAiB2d;AACtB,SAAKvI,UAAUyI,WAAWD;AAC1B,SAAKE,iBAAiB,KAAKvf,QAAQwf;EACrC;EAEAL,cAAc;AACZzB,aAAK,KAAK1d,QAAQmf,aAAa;MAAC;IAAK,CAAA;EACvC;EAIApB,sBAAsB;AACpBL,aAAK,KAAK1d,QAAQ+d,qBAAqB;MAAC;IAAK,CAAA;EAC/C;EACAC,gBAAgB;AAEd,QAAI,KAAK3V,aAAY,GAAI;AAEvB,WAAKiB,QAAQ,KAAK+Q;AAClB,WAAK1Q,OAAO;AACZ,WAAKC,QAAQ,KAAKN;WACb;AACL,WAAKE,SAAS,KAAKwR;AAGnB,WAAKnR,MAAM;AACX,WAAKC,SAAS,KAAKN;;AAIrB,SAAK2R,cAAc;AACnB,SAAKF,aAAa;AAClB,SAAKG,eAAe;AACpB,SAAKF,gBAAgB;EACvB;EACA+C,qBAAqB;AACnBP,aAAK,KAAK1d,QAAQie,oBAAoB;MAAC;IAAK,CAAA;EAC9C;EAEAwB,WAAWC,MAAM;AACf,SAAKzc,MAAM0c,cAAcD,MAAM,KAAK9Q,WAAU,CAAA;AAC9C8O,aAAK,KAAK1d,QAAQ0f,IAAAA,GAAO;MAAC;IAAK,CAAA;EACjC;EAGAxB,mBAAmB;AACjB,SAAKuB,WAAW,kBAAA;EAClB;EACAtB,sBAAsB;EAAA;EACtBC,kBAAkB;AAChB,SAAKqB,WAAW,iBAAA;EAClB;EAGAnB,mBAAmB;AACjB,SAAKmB,WAAW,kBAAA;EAClB;EAIAlB,aAAa;AACX,WAAO,CAAA;EACT;EACAC,kBAAkB;AAChB,SAAKiB,WAAW,iBAAA;EAClB;EAEAG,8BAA8B;AAC5BlC,aAAK,KAAK1d,QAAQ4f,6BAA6B;MAAC;IAAK,CAAA;EACvD;EAKAC,mBAAmBxK,OAAO;AACxB,UAAMC,WAAW,KAAKtV,QAAQqV;AAC9B,QAAI/R,GAAGC,MAAMwW;AACb,SAAKzW,IAAI,GAAGC,OAAO8R,MAAM9T,QAAQ+B,IAAIC,MAAMD,KAAK;AAC9CyW,aAAO1E,MAAM/R,CAAE;AACfyW,WAAK+F,QAAQpC,SAAKpI,SAASyK,UAAU;QAAChG,KAAKjZ;QAAOwC;QAAG+R;MAAM,GAAE,IAAI;IACnE;EACF;EACA2K,6BAA6B;AAC3BtC,aAAK,KAAK1d,QAAQggB,4BAA4B;MAAC;IAAK,CAAA;EACtD;EAIArB,+BAA+B;AAC7BjB,aAAK,KAAK1d,QAAQ2e,8BAA8B;MAAC;IAAK,CAAA;EACxD;EACAC,yBAAyB;AACvB,UAAM5e,UAAU,KAAKA;AACrB,UAAMsV,WAAWtV,QAAQqV;AACzB,UAAM4K,WAAWlI,cAAc,KAAK1C,MAAM9T,QAAQvB,QAAQqV,MAAMM,aAAa;AAC7E,UAAMuK,cAAc5K,SAAS4K,eAAe;AAC5C,UAAMC,cAAc7K,SAAS6K;AAC7B,QAAI9E,gBAAgB6E;AACpB,QAAIE,WAAWpF,WAAWqF;AAE1B,QAAI,CAAC,KAAKC,WAAU,KAAM,CAAChL,SAAS7H,WAAWyS,eAAeC,eAAeF,YAAY,KAAK,CAAC,KAAK5X,aAAY,GAAI;AAClH,WAAKgT,gBAAgB6E;AACrB;;AAGF,UAAMK,aAAa,KAAKC,eAAc;AACtC,UAAMC,gBAAgBF,WAAWG,OAAOpX;AACxC,UAAMqX,iBAAiBJ,WAAWK,QAAQpX;AAI1C,UAAM6Q,WAAWwG,YAAY,KAAK5d,MAAMqG,QAAQmX,eAAe,GAAG,KAAKpG,QAAQ;AAC/E+F,gBAAYpgB,QAAQyW,SAAS,KAAK4D,WAAW4F,WAAW5F,YAAY4F,WAAW;AAG/E,QAAIQ,gBAAgB,IAAIL,WAAW;AACjCA,kBAAY/F,YAAY4F,YAAYjgB,QAAQyW,SAAS,MAAM;AAC3DuE,kBAAY,KAAKA,YAAY/B,kBAAkBjZ,QAAQ8gB,IAAI,IAC3DxL,SAASjJ,UAAU8M,eAAenZ,QAAQ+gB,OAAO,KAAK9d,MAAMjD,QAAQqZ,IAAI;AACxEgH,yBAAmB/d,KAAKiC,KAAKkc,gBAAgBA,gBAAgBE,iBAAiBA,cAAAA;AAC9EtF,sBAAgB2F,UAAU1e,KAAKoT,IAC7BpT,KAAK2e,KAAKJ,aAAaN,WAAWK,QAAQpX,SAAS,KAAK4W,WAAW,IAAI,CAAA,CAAA,GACvE9d,KAAK2e,KAAKJ,YAAY7F,YAAYqF,kBAAkB,IAAI,CAAA,CAAA,IAAM/d,KAAK2e,KAAKJ,YAAYF,iBAAiBN,kBAAkB,IAAI,CAAA,CAAA,CAAA,CAAA;AAE7HhF,sBAAgB/Y,KAAKC,IAAI2d,aAAa5d,KAAKoT,IAAIyK,aAAa9E,aAAAA,CAAAA;;AAG9D,SAAKA,gBAAgBA;EACvB;EACAwD,8BAA8B;AAC5BnB,aAAK,KAAK1d,QAAQ6e,6BAA6B;MAAC;IAAK,CAAA;EACvD;EACAE,gBAAgB;EAAA;EAIhBC,YAAY;AACVtB,aAAK,KAAK1d,QAAQgf,WAAW;MAAC;IAAK,CAAA;EACrC;EACAC,MAAM;AAEJ,UAAMiC,UAAU;MACd5X,OAAO;MACPE,QAAQ;IACV;AAEA,UAAM,EAACvG,OAAOjD,SAAS,EAACqV,OAAOC,UAAUyL,OAAOI,WAAWL,MAAMM,SAAAA,EAAS,IAAI;AAC9E,UAAM3T,UAAU,KAAK6S,WAAU;AAC/B,UAAMjY,eAAe,KAAKA,aAAY;AAEtC,QAAIoF,SAAS;AACX,YAAM4T,cAAclI,eAAegI,WAAWle,MAAMjD,QAAQqZ,IAAI;AAChE,UAAIhR,cAAc;AAChB6Y,gBAAQ5X,QAAQ,KAAK+Q;AACrB6G,gBAAQ1X,SAASyP,kBAAkBmI,QAAYC,IAAAA;aAC1C;AACLH,gBAAQ1X,SAAS,KAAKwR;AACtBkG,gBAAQ5X,QAAQ2P,kBAAkBmI,QAAYC,IAAAA;;AAIhD,UAAI/L,SAAS7H,WAAW,KAAK4H,MAAM9T,QAAQ;AACzC,cAAM,EAAC0U,OAAOC,MAAMwK,QAAQE,QAAAA,IAAW,KAAKJ,eAAc;AAC1D,cAAMc,cAAchM,SAASjJ,UAAU;AACvC,cAAMkV,eAAeC,UAAU,KAAKnG,aAAa;AACjD,cAAMoG,MAAMnf,KAAKmf,IAAIF,YAAAA;AACrB,cAAMG,MAAMpf,KAAKof,IAAIH,YAAAA;AAErB,YAAIlZ,cAAc;AAEhB,gBAAMsZ,cAAcrM,SAASsM,SAAS,IAAIF,MAAMhB,OAAOpX,QAAQmY,MAAMb,QAAQpX;AAC7E0X,kBAAQ1X,SAASlH,KAAKoT,IAAI,KAAKsF,WAAWkG,QAAQ1X,SAASmY,cAAcL,WAAAA;eACpE;AAGL,gBAAMO,aAAavM,SAASsM,SAAS,IAAIH,MAAMf,OAAOpX,QAAQoY,MAAMd,QAAQpX;AAE5E0X,kBAAQ5X,QAAQhH,KAAKoT,IAAI,KAAK2E,UAAU6G,QAAQ5X,QAAQuY,aAAaP,WAAAA;;AAEvE,aAAKQ,kBAAkB7L,OAAOC,MAAMwL,KAAKD,GAAAA;;;AAI7C,SAAKM,eAAc;AAEnB,QAAI1Z,cAAc;AAChB,WAAKiB,QAAQ,KAAKuN,UAAU5T,MAAMqG,QAAQ,KAAKyR,SAASpR,OAAO,KAAKoR,SAASnR;AAC7E,WAAKJ,SAAS0X,QAAQ1X;WACjB;AACL,WAAKF,QAAQ4X,QAAQ5X;AACrB,WAAKE,SAAS,KAAKqN,UAAU5T,MAAMuG,SAAS,KAAKuR,SAASlR,MAAM,KAAKkR,SAASjR;;EAElF;EAEAgY,kBAAkB7L,OAAOC,MAAMwL,KAAKD,KAAK;AACvC,UAAM,EAACpM,OAAO,EAACuC,OAAOvL,QAAO,GAAGnJ,SAAQ,IAAI,KAAKlD;AACjD,UAAMgiB,YAAY,KAAK3G,kBAAkB;AACzC,UAAM4G,mBAAmB/e,aAAa,SAAS,KAAKrC,SAAS;AAE7D,QAAI,KAAKwH,aAAY,GAAI;AACvB,YAAM6Z,aAAa,KAAKvJ,gBAAgB,CAAK,IAAA,KAAKhP;AAClD,YAAMwY,cAAc,KAAKvY,QAAQ,KAAK+O,gBAAgB,KAAKtD,MAAM9T,SAAS,CAAA;AAC1E,UAAI4Z,cAAc;AAClB,UAAIC,eAAe;AAInB,UAAI4G,WAAW;AACb,YAAIC,kBAAkB;AACpB9G,wBAAcsG,MAAMxL,MAAM3M;AAC1B8R,yBAAesG,MAAMxL,KAAK1M;eACrB;AACL2R,wBAAcuG,MAAMzL,MAAMzM;AAC1B4R,yBAAeqG,MAAMvL,KAAK5M;;iBAEnBsO,UAAU,SAAS;AAC5BwD,uBAAelF,KAAK5M;iBACXsO,UAAU,OAAO;AAC1BuD,sBAAclF,MAAM3M;iBACXsO,UAAU,SAAS;AAC5BuD,sBAAclF,MAAM3M,QAAQ;AAC5B8R,uBAAelF,KAAK5M,QAAQ;;AAI9B,WAAK6R,cAAc7Y,KAAKC,KAAK4Y,cAAc+G,aAAa7V,WAAW,KAAK/C,SAAS,KAAKA,QAAQ4Y,aAAa,CAAA;AAC3G,WAAK9G,eAAe9Y,KAAKC,KAAK6Y,eAAe+G,cAAc9V,WAAW,KAAK/C,SAAS,KAAKA,QAAQ6Y,cAAc,CAAA;WAC1G;AACL,UAAIlH,aAAa/E,KAAK1M,SAAS;AAC/B,UAAI0R,gBAAgBjF,MAAMzM,SAAS;AAEnC,UAAIoO,UAAU,SAAS;AACrBqD,qBAAa;AACbC,wBAAgBjF,MAAMzM;iBACboO,UAAU,OAAO;AAC1BqD,qBAAa/E,KAAK1M;AAClB0R,wBAAgB;;AAGlB,WAAKD,aAAaA,aAAa5O;AAC/B,WAAK6O,gBAAgBA,gBAAgB7O;;EAEzC;EAMA0V,iBAAiB;AACf,QAAI,KAAKhH,UAAU;AACjB,WAAKA,SAASpR,OAAOrH,KAAKC,IAAI,KAAK4Y,aAAa,KAAKJ,SAASpR,IAAI;AAClE,WAAKoR,SAASlR,MAAMvH,KAAKC,IAAI,KAAK0Y,YAAY,KAAKF,SAASlR,GAAG;AAC/D,WAAKkR,SAASnR,QAAQtH,KAAKC,IAAI,KAAK6Y,cAAc,KAAKL,SAASnR,KAAK;AACrE,WAAKmR,SAASjR,SAASxH,KAAKC,IAAI,KAAK2Y,eAAe,KAAKH,SAASjR,MAAM;;EAE5E;EAEAoV,WAAW;AACTxB,aAAK,KAAK1d,QAAQkf,UAAU;MAAC;IAAK,CAAA;EACpC;EAMA7W,eAAe;AACb,UAAM,EAACxH,MAAMqC,SAAAA,IAAY,KAAKlD;AAC9B,WAAOkD,aAAa,SAASA,aAAa,YAAYrC,SAAS;EACjE;EAIAuhB,aAAa;AACX,WAAO,KAAKpiB,QAAQoJ;EACtB;EAMAsV,sBAAsBrJ,OAAO;AAC3B,SAAKuK,4BAA2B;AAEhC,SAAKC,mBAAmBxK,KAAAA;AAGxB,QAAI/R,GAAGC;AACP,SAAKD,IAAI,GAAGC,OAAO8R,MAAM9T,QAAQ+B,IAAIC,MAAMD,KAAK;AAC9C,UAAIjB,cAAcgT,MAAM/R,CAAE,EAACwc,KAAK,GAAG;AACjCzK,cAAMvI,OAAOxJ,GAAG,CAAA;AAChBC;AACAD;;IAEJ;AAEA,SAAK0c,2BAA0B;EACjC;EAMAQ,iBAAiB;AACf,QAAID,aAAa,KAAK9E;AAEtB,QAAI,CAAC8E,YAAY;AACf,YAAMzC,aAAa,KAAK9d,QAAQqV,MAAMyI;AACtC,UAAIzI,QAAQ,KAAKA;AACjB,UAAIyI,aAAazI,MAAM9T,QAAQ;AAC7B8T,gBAAQ4C,OAAO5C,OAAOyI,UAAAA;;AAGxB,WAAKrC,cAAc8E,aAAa,KAAK8B,mBAAmBhN,OAAOA,MAAM9T,QAAQ,KAAKvB,QAAQqV,MAAMM,aAAa;;AAG/G,WAAO4K;EACT;EAQA8B,mBAAmBhN,OAAO9T,QAAQoU,eAAe;AAC/C,UAAM,EAACrC,KAAKoI,mBAAmB7C,OAAM,IAAI;AACzC,UAAMyJ,SAAS,CAAA;AACf,UAAMC,UAAU,CAAA;AAChB,UAAMpK,YAAY7V,KAAKiM,MAAMhN,SAASwW,cAAcxW,QAAQoU,aAAAA,CAAAA;AAC5D,QAAI6M,kBAAkB;AACtB,QAAIC,mBAAmB;AACvB,QAAInf,GAAGG,GAAGif,MAAM5C,OAAO6C,UAAUC,YAAY9J,OAAOY,YAAYpQ,OAAOE,QAAQqZ;AAE/E,SAAKvf,IAAI,GAAGA,IAAI/B,QAAQ+B,KAAK6U,WAAW;AACtC2H,cAAQzK,MAAM/R,CAAE,EAACwc;AACjB6C,iBAAW,KAAKG,wBAAwBxf,CAAAA;AACxCgQ,UAAI+F,OAAOuJ,aAAaD,SAASI;AACjCjK,cAAQD,OAAO+J,UAAAA,IAAc/J,OAAO+J,UAAAA,KAAe;QAAC3hB,MAAM,CAAA;QAAI8X,IAAI,CAAA;MAAE;AACpEW,mBAAaiJ,SAASjJ;AACtBpQ,cAAQE,SAAS;AAEjB,UAAI,CAACnH,cAAcyd,KAAU,KAAA,CAACtG,QAAQsG,KAAQ,GAAA;AAC5CxW,gBAAQ0Z,aAAa1P,KAAKwF,MAAM7X,MAAM6X,MAAMC,IAAIzP,OAAOwW,KAAAA;AACvDtW,iBAASkQ;iBACAF,QAAQsG,KAAQ,GAAA;AAEzB,aAAKrc,IAAI,GAAGif,OAAO5C,MAAMve,QAAQkC,IAAIif,MAAM,EAAEjf,GAAG;AAC9Cof,wBAAqC/C,MAAMrc,CAAE;AAE7C,cAAI,CAACpB,cAAcwgB,WAAgB,KAAA,CAACrJ,QAAQqJ,WAAc,GAAA;AACxDvZ,oBAAQ0Z,aAAa1P,KAAKwF,MAAM7X,MAAM6X,MAAMC,IAAIzP,OAAOuZ,WAAAA;AACvDrZ,sBAAUkQ;;QAEd;;AAEF4I,aAAOnd,KAAKmE,KAAAA;AACZiZ,cAAQpd,KAAKqE,MAAAA;AACbgZ,wBAAkBlgB,KAAKC,IAAI+G,OAAOkZ,eAAAA;AAClCC,yBAAmBngB,KAAKC,IAAIiH,QAAQiZ,gBAAAA;IACtC;AACA7J,mBAAeC,QAAQtX,MAAAA;AAEvB,UAAMmf,SAAS4B,OAAOxe,QAAQ0e,eAAAA;AAC9B,UAAM5B,UAAU2B,QAAQze,QAAQ2e,gBAAAA;AAEhC,UAAMQ,UAAU,CAACC,SAAS;MAAC5Z,OAAOgZ,OAAOY,GAAAA,KAAQ;MAAG1Z,QAAQ+Y,QAAQW,GAAAA,KAAQ;;AAE5E,WAAO;MACLjN,OAAOgN,QAAQ,CAAA;MACf/M,MAAM+M,QAAQ1hB,SAAS,CAAA;MACvBmf,QAAQuC,QAAQvC,MAAAA;MAChBE,SAASqC,QAAQrC,OAAAA;MACjB0B;MACAC;IACF;EACF;EAOAY,iBAAiBriB,OAAO;AACtB,WAAOA;EACT;EASA4Z,iBAAiB5Z,OAAO0C,QAAO;AAC7B,WAAO4f;EACT;EAQAC,iBAAiBC,OAAO;EAAA;EAQxB3K,gBAAgBnV,QAAO;AACrB,UAAM6R,QAAQ,KAAKA;AACnB,QAAI7R,SAAQ,KAAKA,SAAQ6R,MAAM9T,SAAS,GAAG;AACzC,aAAO;;AAET,WAAO,KAAKmZ,iBAAiBrF,MAAM7R,MAAAA,EAAO1C,KAAK;EACjD;EAQAyiB,mBAAmBC,SAAS;AAC1B,QAAI,KAAK/hB,gBAAgB;AACvB+hB,gBAAU,IAAIA;;AAGhB,UAAMF,QAAQ,KAAK/K,cAAciL,UAAU,KAAK3M;AAChD,WAAO4M,YAAY,KAAKlE,iBAAiBmE,YAAY,KAAKzgB,OAAOqgB,OAAO,CAAA,IAAKA,KAAK;EACpF;EAMAK,mBAAmBL,OAAO;AACxB,UAAME,WAAWF,QAAQ,KAAK/K,eAAe,KAAK1B;AAClD,WAAO,KAAKpV,iBAAiB,IAAI+hB,UAAUA;EAC7C;EAOAI,eAAe;AACb,WAAO,KAAKlJ,iBAAiB,KAAKmJ,aAAY,CAAA;EAChD;EAKAA,eAAe;AACb,UAAM,EAACnO,KAAKnT,IAAG,IAAI;AAEnB,WAAOmT,MAAM,KAAKnT,MAAM,IAAIA,MAC1BmT,MAAM,KAAKnT,MAAM,IAAImT,MACrB;EACJ;EAKA9G,WAAWpL,QAAO;AAChB,UAAM6R,QAAQ,KAAKA,SAAS,CAAA;AAE5B,QAAI7R,UAAS,KAAKA,SAAQ6R,MAAM9T,QAAQ;AACtC,YAAMwY,OAAO1E,MAAM7R,MAAM;AACzB,aAAOuW,KAAKoC,aACbpC,KAAKoC,WAAWrC,kBAAkB,KAAKlL,WAAU,GAAIpL,QAAOuW,IAAI;;AAEjE,WAAO,KAAKoC,aACZ,KAAKA,WAAWxC,mBAAmB,KAAK1W,MAAM2L,WAAU,GAAI,IAAI;EAClE;EAMA+H,YAAY;AACV,UAAMmN,cAAc,KAAK9jB,QAAQqV;AAGjC,UAAM0O,MAAMvC,UAAU,KAAKnG,aAAa;AACxC,UAAMoG,MAAMnf,KAAK6B,IAAI7B,KAAKmf,IAAIsC,GAAAA,CAAAA;AAC9B,UAAMrC,MAAMpf,KAAK6B,IAAI7B,KAAKof,IAAIqC,GAAAA,CAAAA;AAE9B,UAAMxD,aAAa,KAAKC,eAAc;AACtC,UAAMnU,UAAUyX,YAAYE,mBAAmB;AAC/C,UAAM/Y,IAAIsV,aAAaA,WAAWG,OAAOpX,QAAQ+C,UAAU;AAC3D,UAAMlB,IAAIoV,aAAaA,WAAWK,QAAQpX,SAAS6C,UAAU;AAG7D,WAAO,KAAKhE,aAAY,IACpB8C,IAAIsW,MAAMxW,IAAIyW,MAAMzW,IAAIwW,MAAMtW,IAAIuW,MAClCvW,IAAIuW,MAAMzW,IAAIwW,MAAMtW,IAAIsW,MAAMxW,IAAIyW;EACxC;EAMApB,aAAa;AACX,UAAM7S,UAAU,KAAKzN,QAAQyN;AAE7B,QAAIA,YAAY,QAAQ;AACtB,aAAO,CAAC,CAACA;;AAGX,WAAO,KAAKwP,wBAAuB,EAAG1b,SAAS;EACjD;EAKA0iB,sBAAsBhf,WAAW;AAC/B,UAAMpE,OAAO,KAAKA;AAClB,UAAMoC,QAAQ,KAAKA;AACnB,UAAMjD,UAAU,KAAKA;AACrB,UAAM,EAAC8gB,MAAM5d,UAAUghB,OAAAA,IAAUlkB;AACjC,UAAMyW,SAASqK,KAAKrK;AACpB,UAAMpO,eAAe,KAAKA,aAAY;AACtC,UAAMgN,QAAQ,KAAKA;AACnB,UAAM2C,cAAc3C,MAAM9T,UAAUkV,SAAS,IAAI;AACjD,UAAM0N,KAAKlL,kBAAkB6H,IAAAA;AAC7B,UAAMlc,QAAQ,CAAA;AAEd,UAAMwf,aAAaF,OAAO9H,WAAW,KAAKxN,WAAU,CAAA;AACpD,UAAMyV,YAAYD,WAAW3W,UAAU2W,WAAW9a,QAAQ;AAC1D,UAAMgb,gBAAgBD,YAAY;AAClC,UAAME,mBAAmB,SAASjB,OAAO;AACvC,aAAOI,YAAYzgB,OAAOqgB,OAAOe,SAAAA;IACnC;AACA,QAAIG,aAAalhB,GAAGoV,WAAW+L;AAC/B,QAAIC,KAAKC,KAAKC,KAAKC,KAAKC,IAAIC,IAAIC,IAAIC;AAEpC,QAAI/hB,aAAa,OAAO;AACtBshB,oBAAcD,iBAAiB,KAAKza,MAAM;AAC1C6a,YAAM,KAAK7a,SAASqa;AACpBU,YAAML,cAAcF;AACpBS,WAAKR,iBAAiBtf,UAAU4E,GAAG,IAAIya;AACvCW,WAAKhgB,UAAU6E;eACN5G,aAAa,UAAU;AAChCshB,oBAAcD,iBAAiB,KAAK1a,GAAG;AACvCkb,WAAK9f,UAAU4E;AACfob,WAAKV,iBAAiBtf,UAAU6E,MAAM,IAAIwa;AAC1CK,YAAMH,cAAcF;AACpBO,YAAM,KAAKhb,MAAMsa;eACRjhB,aAAa,QAAQ;AAC9BshB,oBAAcD,iBAAiB,KAAK3a,KAAK;AACzC8a,YAAM,KAAK9a,QAAQua;AACnBS,YAAMJ,cAAcF;AACpBQ,WAAKP,iBAAiBtf,UAAU0E,IAAI,IAAI2a;AACxCU,WAAK/f,UAAU2E;eACN1G,aAAa,SAAS;AAC/BshB,oBAAcD,iBAAiB,KAAK5a,IAAI;AACxCmb,WAAK7f,UAAU0E;AACfqb,WAAKT,iBAAiBtf,UAAU2E,KAAK,IAAI0a;AACzCI,YAAMF,cAAcF;AACpBM,YAAM,KAAKjb,OAAOwa;eACTtjB,SAAS,KAAK;AACvB,UAAIqC,aAAa,UAAU;AACzBshB,sBAAcD,kBAAkBtf,UAAU4E,MAAM5E,UAAU6E,UAAU,IAAI,GAAA;iBAC/DY,SAASxH,QAAW,GAAA;AAC7B,cAAMuX,iBAAiB5a,OAAO8T,KAAKzQ,QAAAA,EAAU,CAAE;AAC/C,cAAMpC,QAAQoC,SAASuX,cAAe;AACtC+J,sBAAcD,iBAAiB,KAAKthB,MAAMkX,OAAOM,cAAAA,EAAgBC,iBAAiB5Z,KAAAA,CAAAA;;AAGpFikB,WAAK9f,UAAU4E;AACfob,WAAKhgB,UAAU6E;AACf6a,YAAMH,cAAcF;AACpBO,YAAMF,MAAMR;eACHtjB,SAAS,KAAK;AACvB,UAAIqC,aAAa,UAAU;AACzBshB,sBAAcD,kBAAkBtf,UAAU0E,OAAO1E,UAAU2E,SAAS,CAAA;iBAC3Dc,SAASxH,QAAW,GAAA;AAC7B,cAAMuX,iBAAiB5a,OAAO8T,KAAKzQ,QAAAA,EAAU,CAAE;AAC/C,cAAMpC,QAAQoC,SAASuX,cAAe;AACtC+J,sBAAcD,iBAAiB,KAAKthB,MAAMkX,OAAOM,cAAAA,EAAgBC,iBAAiB5Z,KAAAA,CAAAA;;AAGpF4jB,YAAMF,cAAcF;AACpBM,YAAMF,MAAMP;AACZW,WAAK7f,UAAU0E;AACfqb,WAAK/f,UAAU2E;;AAGjB,UAAMsb,QAAQ1N,eAAexX,QAAQqV,MAAMM,eAAeqC,WAAAA;AAC1D,UAAMmN,OAAO7iB,KAAKC,IAAI,GAAGD,KAAK+U,KAAKW,cAAckN,KAAAA,CAAAA;AACjD,SAAK5hB,IAAI,GAAGA,IAAI0U,aAAa1U,KAAK6hB,MAAM;AACtC,YAAMnX,UAAU,KAAKY,WAAWtL,CAAAA;AAChC,YAAM8hB,cAActE,KAAK1E,WAAWpO,OAAAA;AACpC,YAAMqX,oBAAoBnB,OAAO9H,WAAWpO,OAAAA;AAE5C,YAAMsX,YAAYF,YAAYE;AAC9B,YAAMC,YAAYH,YAAYI;AAC9B,YAAMC,aAAaJ,kBAAkBK,QAAQ,CAAA;AAC7C,YAAMC,mBAAmBN,kBAAkBO;AAE3C,YAAMxF,YAAYgF,YAAYhF;AAC9B,YAAMyF,YAAYT,YAAYS;AAC9B,YAAMC,iBAAiBV,YAAYU,kBAAkB,CAAA;AACrD,YAAMC,uBAAuBX,YAAYW;AAEzCrN,kBAAYN,oBAAoB,MAAM9U,GAAGmT,MAAAA;AAGzC,UAAIiC,cAAcvI,QAAW;AAC3B;;AAGFsU,yBAAmBf,YAAYzgB,OAAOyV,WAAW4M,SAAAA;AAEjD,UAAIjd,cAAc;AAChBqc,cAAME,MAAME,KAAKE,KAAKP;aACjB;AACLE,cAAME,MAAME,KAAKE,KAAKR;;AAGxB7f,YAAMO,KAAK;QACTuf;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACA3b,OAAOgc;QACPE,OAAOD;QACPE;QACAE;QACAvF;QACAyF;QACAC;QACAC;MACF,CAAA;IACF;AAEA,SAAKhK,eAAe/D;AACpB,SAAKgE,eAAewI;AAEpB,WAAO5f;EACT;EAKA4Y,mBAAmBvY,WAAW;AAC5B,UAAMpE,OAAO,KAAKA;AAClB,UAAMb,UAAU,KAAKA;AACrB,UAAM,EAACkD,UAAUmS,OAAOyO,YAAAA,IAAe9jB;AACvC,UAAMqI,eAAe,KAAKA,aAAY;AACtC,UAAMgN,QAAQ,KAAKA;AACnB,UAAM,EAACuC,OAAOoO,YAAY3Z,SAASuV,OAAM,IAAIkC;AAC7C,UAAMK,KAAKlL,kBAAkBjZ,QAAQ8gB,IAAI;AACzC,UAAMmF,iBAAiB9B,KAAK9X;AAC5B,UAAM6Z,kBAAkBtE,SAAS,CAACvV,UAAU4Z;AAC5C,UAAM7L,WAAW,CAACoH,UAAU,KAAKnG,aAAa;AAC9C,UAAMzW,QAAQ,CAAA;AACd,QAAItB,GAAGC,MAAMwW,MAAM+F,OAAO1b,GAAGE,GAAG6hB,WAAW7C,OAAOjK,MAAMK,YAAY0M,WAAWC;AAC/E,QAAIC,eAAe;AAEnB,QAAIpjB,aAAa,OAAO;AACtBoB,UAAI,KAAKwF,SAASoc;AAClBC,kBAAY,KAAKI,wBAAuB;eAC/BrjB,aAAa,UAAU;AAChCoB,UAAI,KAAKuF,MAAMqc;AACfC,kBAAY,KAAKI,wBAAuB;eAC/BrjB,aAAa,QAAQ;AAC9B,YAAM6R,MAAM,KAAKyR,wBAAwBrC,EAAAA;AACzCgC,kBAAYpR,IAAIoR;AAChB/hB,UAAI2Q,IAAI3Q;eACClB,aAAa,SAAS;AAC/B,YAAM6R,MAAM,KAAKyR,wBAAwBrC,EAAAA;AACzCgC,kBAAYpR,IAAIoR;AAChB/hB,UAAI2Q,IAAI3Q;eACCvD,SAAS,KAAK;AACvB,UAAIqC,aAAa,UAAU;AACzBoB,aAAMW,UAAU4E,MAAM5E,UAAU6E,UAAU,IAAKmc;iBACtCvb,SAASxH,QAAW,GAAA;AAC7B,cAAMuX,iBAAiB5a,OAAO8T,KAAKzQ,QAAAA,EAAU,CAAE;AAC/C,cAAMpC,QAAQoC,SAASuX,cAAe;AACtCnW,YAAI,KAAKrB,MAAMkX,OAAOM,cAAe,EAACC,iBAAiB5Z,KAASmlB,IAAAA;;AAElEE,kBAAY,KAAKI,wBAAuB;eAC/B1lB,SAAS,KAAK;AACvB,UAAIqC,aAAa,UAAU;AACzBkB,aAAMa,UAAU0E,OAAO1E,UAAU2E,SAAS,IAAKqc;iBACtCvb,SAASxH,QAAW,GAAA;AAC7B,cAAMuX,iBAAiB5a,OAAO8T,KAAKzQ,QAAAA,EAAU,CAAE;AAC/C,cAAMpC,QAAQoC,SAASuX,cAAe;AACtCrW,YAAI,KAAKnB,MAAMkX,OAAOM,cAAAA,EAAgBC,iBAAiB5Z,KAAAA;;AAEzDqlB,kBAAY,KAAKK,wBAAwBrC,EAAAA,EAAIgC;;AAG/C,QAAItlB,SAAS,KAAK;AAChB,UAAI+W,UAAU,SAAS;AACrB0O,uBAAe;iBACN1O,UAAU,OAAO;AAC1B0O,uBAAe;;;AAInB,UAAM/F,aAAa,KAAKC,eAAc;AACtC,SAAKld,IAAI,GAAGC,OAAO8R,MAAM9T,QAAQ+B,IAAIC,MAAM,EAAED,GAAG;AAC9CyW,aAAO1E,MAAM/R,CAAE;AACfwc,cAAQ/F,KAAK+F;AAEb,YAAMsF,cAActB,YAAY1H,WAAW,KAAKxN,WAAWtL,CAAAA,CAAAA;AAC3DggB,cAAQ,KAAK3K,gBAAgBrV,CAAAA,IAAKwgB,YAAY2C;AAC9CpN,aAAO,KAAKyJ,wBAAwBxf,CAAAA;AACpCoW,mBAAaL,KAAKK;AAClB0M,kBAAY5M,QAAQsG,KAAAA,IAASA,MAAMve,SAAS;AAC5C,YAAMmlB,YAAYN,YAAY;AAC9B,YAAMZ,SAAQJ,YAAYI;AAC1B,YAAMmB,cAAcvB,YAAYwB;AAChC,YAAMC,cAAczB,YAAY0B;AAChC,UAAIC,gBAAgBZ;AAEpB,UAAI9d,cAAc;AAChBjE,YAAIkf;AAEJ,YAAI6C,cAAc,SAAS;AACzB,cAAI7iB,MAAMC,OAAO,GAAG;AAClBwjB,4BAAgB,CAAC,KAAK/mB,QAAQkC,UAAU,UAAU;qBACzCoB,MAAM,GAAG;AAClByjB,4BAAgB,CAAC,KAAK/mB,QAAQkC,UAAU,SAAS;iBAC5C;AACL6kB,4BAAgB;;;AAIpB,YAAI7jB,aAAa,OAAO;AACtB,cAAI8iB,eAAe,UAAU5L,aAAa,GAAG;AAC3CiM,yBAAa,CAACD,YAAY1M,aAAaA,aAAa;qBAC3CsM,eAAe,UAAU;AAClCK,yBAAa,CAAC9F,WAAWK,QAAQpX,SAAS,IAAIkd,YAAYhN,aAAaA;iBAClE;AACL2M,yBAAa,CAAC9F,WAAWK,QAAQpX,SAASkQ,aAAa;;eAEpD;AAEL,cAAIsM,eAAe,UAAU5L,aAAa,GAAG;AAC3CiM,yBAAa3M,aAAa;qBACjBsM,eAAe,UAAU;AAClCK,yBAAa9F,WAAWK,QAAQpX,SAAS,IAAIkd,YAAYhN;iBACpD;AACL2M,yBAAa9F,WAAWK,QAAQpX,SAAS4c,YAAY1M;;;AAGzD,YAAIkI,QAAQ;AACVyE,wBAAc;;AAEhB,YAAIjM,aAAa,KAAK,CAACgL,YAAY4B,mBAAmB;AACpD5iB,eAAK,aAAc,IAAK9B,KAAKof,IAAItH,QAAAA;;aAE9B;AACL9V,YAAIgf;AACJ+C,sBAAc,IAAID,aAAa1M,aAAa;;AAG9C,UAAIuN;AAEJ,UAAI7B,YAAY4B,mBAAmB;AACjC,cAAME,eAAeja,UAAUmY,YAAY+B,eAAe;AAC1D,cAAM3d,SAAS+W,WAAWgC,QAAQjf,CAAE;AACpC,cAAMgG,QAAQiX,WAAW+B,OAAOhf,CAAE;AAElC,YAAIuG,MAAMwc,aAAaa,aAAard;AACpC,YAAIF,OAAO,IAAIud,aAAavd;AAE5B,gBAAQ2c,cAAAA;UACR,KAAK;AACHzc,mBAAOL,SAAS;AAChB;UACF,KAAK;AACHK,mBAAOL;AACP;QAGF;AAEA,gBAAQ2c,WAAAA;UACR,KAAK;AACHxc,oBAAQL,QAAQ;AAChB;UACF,KAAK;AACHK,oBAAQL;AACR;UACF,KAAK;AACH,gBAAIhG,MAAMC,OAAO,GAAG;AAClBoG,sBAAQL;uBACChG,IAAI,GAAG;AAChBqG,sBAAQL,QAAQ;;AAElB;QAGF;AAEA2d,mBAAW;UACTtd;UACAE;UACAP,OAAOA,QAAQ4d,aAAa5d;UAC5BE,QAAQA,SAAS0d,aAAa1d;UAE9Bgc,OAAOJ,YAAYgC;QACrB;;AAGFxiB,YAAMO,KAAK;QACT2a;QACAzG;QACAgN;QACArmB,SAAS;UACPoa;UACAoL,OAAAA;UACAmB;UACAE;UACAV,WAAWY;UACXT;UACAe,aAAa;YAACjjB;YAAGE;UAAE;UACnB2iB;QACF;MACF,CAAA;IACF;AAEA,WAAOriB;EACT;EAEA2hB,0BAA0B;AACxB,UAAM,EAACrjB,UAAUmS,MAAAA,IAAS,KAAKrV;AAC/B,UAAMoa,WAAW,CAACoH,UAAU,KAAKnG,aAAa;AAE9C,QAAIjB,UAAU;AACZ,aAAOlX,aAAa,QAAQ,SAAS;;AAGvC,QAAI0U,QAAQ;AAEZ,QAAIvC,MAAMuC,UAAU,SAAS;AAC3BA,cAAQ;IACV,WAAWvC,MAAMuC,UAAU,OAAO;AAChCA,cAAQ;IACV,WAAWvC,MAAMuC,UAAU,SAAS;AAClCA,cAAQ;;AAGV,WAAOA;EACT;EAEA4O,wBAAwBrC,IAAI;AAC1B,UAAM,EAACjhB,UAAUmS,OAAO,EAAC2Q,YAAYpE,QAAQvV,QAAAA,EAAQ,IAAI,KAAKrM;AAC9D,UAAMugB,aAAa,KAAKC,eAAc;AACtC,UAAMyF,iBAAiB9B,KAAK9X;AAC5B,UAAMqU,SAASH,WAAWG,OAAOpX;AAEjC,QAAI6c;AACJ,QAAI/hB;AAEJ,QAAIlB,aAAa,QAAQ;AACvB,UAAI0e,QAAQ;AACVxd,YAAI,KAAKwF,QAAQyC;AAEjB,YAAI2Z,eAAe,QAAQ;AACzBG,sBAAY;mBACHH,eAAe,UAAU;AAClCG,sBAAY;AACZ/hB,eAAMsc,SAAS;eACV;AACLyF,sBAAY;AACZ/hB,eAAKsc;;aAEF;AACLtc,YAAI,KAAKwF,QAAQqc;AAEjB,YAAID,eAAe,QAAQ;AACzBG,sBAAY;mBACHH,eAAe,UAAU;AAClCG,sBAAY;AACZ/hB,eAAMsc,SAAS;eACV;AACLyF,sBAAY;AACZ/hB,cAAI,KAAKuF;;;eAGJzG,aAAa,SAAS;AAC/B,UAAI0e,QAAQ;AACVxd,YAAI,KAAKuF,OAAO0C;AAEhB,YAAI2Z,eAAe,QAAQ;AACzBG,sBAAY;mBACHH,eAAe,UAAU;AAClCG,sBAAY;AACZ/hB,eAAMsc,SAAS;eACV;AACLyF,sBAAY;AACZ/hB,eAAKsc;;aAEF;AACLtc,YAAI,KAAKuF,OAAOsc;AAEhB,YAAID,eAAe,QAAQ;AACzBG,sBAAY;mBACHH,eAAe,UAAU;AAClCG,sBAAY;AACZ/hB,eAAKsc,SAAS;eACT;AACLyF,sBAAY;AACZ/hB,cAAI,KAAKwF;;;WAGR;AACLuc,kBAAY;;AAGd,WAAO;MAACA;MAAW/hB;IAAC;EACtB;EAKAkjB,oBAAoB;AAClB,QAAI,KAAKtnB,QAAQqV,MAAMuM,QAAQ;AAC7B;;AAGF,UAAM3e,QAAQ,KAAKA;AACnB,UAAMC,WAAW,KAAKlD,QAAQkD;AAE9B,QAAIA,aAAa,UAAUA,aAAa,SAAS;AAC/C,aAAO;QAAC2G,KAAK;QAAGF,MAAM,KAAKA;QAAMG,QAAQ7G,MAAMuG;QAAQI,OAAO,KAAKA;MAAK;;AACxE,QAAI1G,aAAa,SAASA,aAAa,UAAU;AACjD,aAAO;QAAC2G,KAAK,KAAKA;QAAKF,MAAM;QAAGG,QAAQ,KAAKA;QAAQF,OAAO3G,MAAMqG;MAAK;;EAE3E;EAKAie,iBAAiB;AACf,UAAM,EAACjU,KAAKtT,SAAS,EAACwnB,gBAAAA,GAAkB7d,MAAME,KAAKP,OAAOE,OAAM,IAAI;AACpE,QAAIge,iBAAiB;AACnBlU,UAAImU,KAAI;AACRnU,UAAIoU,YAAYF;AAChBlU,UAAIqU,SAAShe,MAAME,KAAKP,OAAOE,MAAAA;AAC/B8J,UAAIsU,QAAO;;EAEf;EAEAC,qBAAqB/mB,OAAO;AAC1B,UAAMggB,OAAO,KAAK9gB,QAAQ8gB;AAC1B,QAAI,CAAC,KAAKR,WAAU,KAAM,CAACQ,KAAKrT,SAAS;AACvC,aAAO;;AAET,UAAM4H,QAAQ,KAAKA;AACnB,UAAM7R,SAAQ6R,MAAMlT,UAAU2lB,CAAAA,MAAKA,EAAEhnB,UAAUA,KAAAA;AAC/C,QAAI0C,UAAS,GAAG;AACd,YAAMukB,OAAOjH,KAAK1E,WAAW,KAAKxN,WAAWpL,MAAAA,CAAAA;AAC7C,aAAOukB,KAAKzC;;AAEd,WAAO;EACT;EAKA0C,SAAS/iB,WAAW;AAClB,UAAM6b,OAAO,KAAK9gB,QAAQ8gB;AAC1B,UAAMxN,MAAM,KAAKA;AACjB,UAAM1O,QAAQ,KAAK2W,mBAAmB,KAAKA,iBAAiB,KAAK0I,sBAAsBhf,SAAS;AAChG,QAAI3B,GAAGC;AAEP,UAAM0kB,WAAW,CAACC,IAAIC,IAAIxY,UAAU;AAClC,UAAI,CAACA,MAAMrG,SAAS,CAACqG,MAAM6V,OAAO;AAChC;;AAEFlS,UAAImU,KAAI;AACRnU,UAAIgS,YAAY3V,MAAMrG;AACtBgK,UAAI8U,cAAczY,MAAM6V;AACxBlS,UAAI+U,YAAY1Y,MAAM8V,cAAc,CAAA,CAAE;AACtCnS,UAAIgV,iBAAiB3Y,MAAMgW;AAE3BrS,UAAIiV,UAAS;AACbjV,UAAIkV,OAAON,GAAG9jB,GAAG8jB,GAAG5jB,CAAC;AACrBgP,UAAImV,OAAON,GAAG/jB,GAAG+jB,GAAG7jB,CAAC;AACrBgP,UAAIoV,OAAM;AACVpV,UAAIsU,QAAO;IACb;AAEA,QAAI9G,KAAKrT,SAAS;AAChB,WAAKnK,IAAI,GAAGC,OAAOqB,MAAMrD,QAAQ+B,IAAIC,MAAM,EAAED,GAAG;AAC9C,cAAMkJ,OAAO5H,MAAMtB,CAAE;AAErB,YAAIwd,KAAK6H,iBAAiB;AACxBV,mBACE;YAAC7jB,GAAGoI,KAAKsY;YAAIxgB,GAAGkI,KAAKuY;aACrB;YAAC3gB,GAAGoI,KAAKwY;YAAI1gB,GAAGkI,KAAKyY;aACrBzY,IAAAA;;AAIJ,YAAIsU,KAAK5H,WAAW;AAClB+O,mBACE;YAAC7jB,GAAGoI,KAAKkY;YAAKpgB,GAAGkI,KAAKmY;aACtB;YAACvgB,GAAGoI,KAAKoY;YAAKtgB,GAAGkI,KAAKqY;aACtB;YACEW,OAAOhZ,KAAKqZ;YACZvc,OAAOkD,KAAK4T;YACZqF,YAAYjZ,KAAKsZ;YACjBH,kBAAkBnZ,KAAKuZ;UACzB,CAAA;;MAGN;;EAEJ;EAKA6C,aAAa;AACX,UAAM,EAAC3lB,OAAOqQ,KAAKtT,SAAS,EAACkkB,QAAQpD,KAAI,EAAC,IAAI;AAC9C,UAAMsD,aAAaF,OAAO9H,WAAW,KAAKxN,WAAU,CAAA;AACpD,UAAMyV,YAAYH,OAAOzW,UAAU2W,WAAW9a,QAAQ;AACtD,QAAI,CAAC+a,WAAW;AACd;;AAEF,UAAMwE,gBAAgB/H,KAAK1E,WAAW,KAAKxN,WAAW,CAAA,CAAA,EAAI0W;AAC1D,UAAMd,cAAc,KAAKxI;AACzB,QAAI8I,IAAIE,IAAID,IAAIE;AAEhB,QAAI,KAAK5c,aAAY,GAAI;AACvByc,WAAKpB,YAAYzgB,OAAO,KAAK0G,MAAM0a,SAAAA,IAAaA,YAAY;AAC5DW,WAAKtB,YAAYzgB,OAAO,KAAK2G,OAAOif,aAAAA,IAAiBA,gBAAgB;AACrE9D,WAAKE,KAAKT;WACL;AACLO,WAAKrB,YAAYzgB,OAAO,KAAK4G,KAAKwa,SAAAA,IAAaA,YAAY;AAC3DY,WAAKvB,YAAYzgB,OAAO,KAAK6G,QAAQ+e,aAAAA,IAAiBA,gBAAgB;AACtE/D,WAAKE,KAAKR;;AAEZlR,QAAImU,KAAI;AACRnU,QAAIgS,YAAYlB,WAAW9a;AAC3BgK,QAAI8U,cAAchE,WAAWoB;AAE7BlS,QAAIiV,UAAS;AACbjV,QAAIkV,OAAO1D,IAAIC,EAAAA;AACfzR,QAAImV,OAAOzD,IAAIC,EAAAA;AACf3R,QAAIoV,OAAM;AAEVpV,QAAIsU,QAAO;EACb;EAKAkB,WAAW7jB,WAAW;AACpB,UAAM6e,cAAc,KAAK9jB,QAAQqV;AAEjC,QAAI,CAACyO,YAAYrW,SAAS;AACxB;;AAGF,UAAM6F,MAAM,KAAKA;AAEjB,UAAMyV,OAAO,KAAKzB,kBAAiB;AACnC,QAAIyB,MAAM;AACRC,eAAS1V,KAAKyV,IAAAA;;AAGhB,UAAMnkB,QAAQ,KAAK2Y,cAActY,SAAAA;AACjC,eAAWuH,QAAQ5H,OAAO;AACxB,YAAMqkB,oBAAoBzc,KAAKxM;AAC/B,YAAM2iB,WAAWnW,KAAK6M;AACtB,YAAMyG,QAAQtT,KAAKsT;AACnB,YAAMxb,IAAIkI,KAAK6Z;AACf6C,iBAAW5V,KAAKwM,OAAO,GAAGxb,GAAGqe,UAAUsG,iBAAAA;IACzC;AAEA,QAAIF,MAAM;AACRI,iBAAW7V,GAAAA;;EAEf;EAKA8V,YAAY;AACV,UAAM,EAAC9V,KAAKtT,SAAS,EAACkD,UAAU6d,OAAO7e,QAAO,EAAC,IAAI;AAEnD,QAAI,CAAC6e,MAAMtT,SAAS;AAClB;;AAGF,UAAM4L,OAAOC,OAAOyH,MAAM1H,IAAI;AAC9B,UAAMhN,UAAUY,UAAU8T,MAAM1U,OAAO;AACvC,UAAMuL,QAAQmJ,MAAMnJ;AACpB,QAAInB,SAAS4C,KAAKK,aAAa;AAE/B,QAAIxW,aAAa,YAAYA,aAAa,YAAYwH,SAASxH,QAAW,GAAA;AACxEuT,gBAAUpK,QAAQvC;AAClB,UAAI0P,QAAQuH,MAAMtH,IAAI,GAAG;AACvBhD,kBAAU4C,KAAKK,cAAcqH,MAAMtH,KAAKlY,SAAS;;WAE9C;AACLkV,gBAAUpK,QAAQxC;;AAGpB,UAAM,EAACyQ,QAAQC,QAAQF,UAAUD,SAAQ,IAAIF,UAAU,MAAMzD,QAAQvT,UAAU0U,KAAAA;AAE/EsR,eAAW5V,KAAKyN,MAAMtH,MAAM,GAAG,GAAGJ,MAAM;MACtCmM,OAAOzE,MAAMyE;MACbnL;MACAD;MACA+L,WAAWnM,WAAWpC,OAAO1U,UAAUhB,OAAAA;MACvCokB,cAAc;MACde,aAAa;QAAC/M;QAAQC;MAAO;IAC/B,CAAA;EACF;EAEA5N,KAAK1H,WAAW;AACd,QAAI,CAAC,KAAKqb,WAAU,GAAI;AACtB;;AAGF,SAAKiH,eAAc;AACnB,SAAKS,SAAS/iB,SAAAA;AACd,SAAK2jB,WAAU;AACf,SAAKQ,UAAS;AACd,SAAKN,WAAW7jB,SAAAA;EAClB;EAMAwH,UAAU;AACR,UAAMsb,OAAO,KAAK/nB;AAClB,UAAMqpB,KAAKtB,KAAK1S,SAAS0S,KAAK1S,MAAM3I,KAAK;AACzC,UAAM4c,KAAK9R,eAAeuQ,KAAKjH,QAAQiH,KAAKjH,KAAKpU,GAAG,EAAC;AACrD,UAAM6c,KAAK/R,eAAeuQ,KAAK7D,UAAU6D,KAAK7D,OAAOxX,GAAG,CAAA;AAExD,QAAI,CAAC,KAAK4T,WAAU,KAAM,KAAK3T,SAASiO,MAAM7a,UAAU4M,MAAM;AAE5D,aAAO;QAAC;UACND,GAAG2c;UACH1c,MAAM,CAAC1H,cAAc;AACnB,iBAAK0H,KAAK1H,SAAAA;UACZ;QACF;MAAE;;AAGJ,WAAO;MAAC;QACNyH,GAAG4c;QACH3c,MAAM,CAAC1H,cAAc;AACnB,eAAKsiB,eAAc;AACnB,eAAKS,SAAS/iB,SAAAA;AACd,eAAKmkB,UAAS;QAChB;MACF;MAAG;QACD1c,GAAG6c;QACH5c,MAAM,MAAM;AACV,eAAKic,WAAU;QACjB;MACF;MAAG;QACDlc,GAAG2c;QACH1c,MAAM,CAAC1H,cAAc;AACnB,eAAK6jB,WAAW7jB,SAAAA;QAClB;MACF;IAAE;EACJ;EAOAgY,wBAAwB/O,MAAM;AAC5B,UAAM8O,QAAQ,KAAK/Z,MAAMI,6BAA4B;AACrD,UAAMmmB,SAAS,KAAK3oB,OAAO;AAC3B,UAAMe,SAAS,CAAA;AACf,QAAI0B,GAAGC;AAEP,SAAKD,IAAI,GAAGC,OAAOyZ,MAAMzb,QAAQ+B,IAAIC,MAAM,EAAED,GAAG;AAC9C,YAAMuD,QAAOmW,MAAM1Z,CAAE;AACrB,UAAIuD,MAAK2iB,MAAO,MAAK,KAAK1O,OAAO,CAAC5M,QAAQrH,MAAKqH,SAASA,OAAO;AAC7DtM,eAAOuD,KAAK0B,KAAAA;;IAEhB;AACA,WAAOjF;EACT;EAOAkhB,wBAAwBtf,QAAO;AAC7B,UAAMukB,OAAO,KAAK/nB,QAAQqV,MAAM+G,WAAW,KAAKxN,WAAWpL,MAAAA,CAAAA;AAC3D,WAAO8V,OAAOyO,KAAK1O,IAAI;EACzB;EAKAoQ,aAAa;AACX,UAAMC,WAAW,KAAK5G,wBAAwB,CAAA,EAAGpJ;AACjD,YAAQ,KAAKrR,aAAY,IAAK,KAAKiB,QAAQ,KAAKE,UAAUkgB;EAC5D;AACF;ACtqDe,IAAMC,gBAAN,MAAMA;EACnB1pB,YAAYiO,MAAM0b,OAAOjqB,UAAU;AACjC,SAAKuO,OAAOA;AACZ,SAAK0b,QAAQA;AACb,SAAKjqB,WAAWA;AAChB,SAAKiF,QAAQ/E,uBAAOgqB,OAAO,IAAI;EACjC;EAEAC,UAAU5b,MAAM;AACd,WAAOrO,OAAOE,UAAUgqB,cAAcrM,KAAK,KAAKxP,KAAKnO,WAAWmO,KAAKnO,SAAS;EAChF;EAMAiqB,SAASxd,MAAM;AACb,UAAMyd,QAAQpqB,OAAOqqB,eAAe1d,IAAAA;AACpC,QAAI2d;AAEJ,QAAIC,kBAAkBH,KAAQ,GAAA;AAE5BE,oBAAc,KAAKH,SAASC,KAAAA;;AAG9B,UAAMrlB,QAAQ,KAAKA;AACnB,UAAMkW,KAAKtO,KAAKsO;AAChB,UAAM8O,QAAQ,KAAKA,QAAQ,MAAM9O;AAEjC,QAAI,CAACA,IAAI;AACP,YAAM,IAAIrb,MAAM,6BAA6B+M,IAAM;;AAGrD,QAAIsO,MAAMlW,OAAO;AAEf,aAAOglB;;AAGThlB,UAAMkW,EAAAA,IAAMtO;AACZ6d,qBAAiB7d,MAAMod,OAAOO,WAAAA;AAC9B,QAAI,KAAKxqB,UAAU;AACjBsV,eAAStV,SAAS6M,KAAKsO,IAAItO,KAAK8d,SAAS;;AAG3C,WAAOV;EACT;EAMAW,IAAIzP,IAAI;AACN,WAAO,KAAKlW,MAAMkW,EAAG;EACvB;EAKA0P,WAAWhe,MAAM;AACf,UAAM5H,QAAQ,KAAKA;AACnB,UAAMkW,KAAKtO,KAAKsO;AAChB,UAAM8O,QAAQ,KAAKA;AAEnB,QAAI9O,MAAMlW,OAAO;AACf,aAAOA,MAAMkW,EAAG;;AAGlB,QAAI8O,SAAS9O,MAAM7F,SAAS2U,KAAAA,GAAQ;AAClC,aAAO3U,SAAS2U,KAAM,EAAC9O,EAAG;AAC1B,UAAI,KAAKnb,UAAU;AACjB,eAAO2qB,UAAUxP,EAAG;;;EAG1B;AACF;AAEA,SAASuP,iBAAiB7d,MAAMod,OAAOO,aAAa;AAElD,QAAMM,eAAeC,MAAM7qB,uBAAOgqB,OAAO,IAAI,GAAG;IAC9CM,cAAclV,SAASsV,IAAIJ,WAAAA,IAAe,CAAA;IAC1ClV,SAASsV,IAAIX,KAAAA;IACbpd,KAAKyI;EACN,CAAA;AAEDA,WAASzC,IAAIoX,OAAOa,YAAAA;AAEpB,MAAIje,KAAK0I,eAAe;AACtByV,kBAAcf,OAAOpd,KAAK0I,aAAa;;AAGzC,MAAI1I,KAAKoe,aAAa;AACpB3V,aAAS4V,SAASjB,OAAOpd,KAAKoe,WAAW;;AAE7C;AAEA,SAASD,cAAcf,OAAOkB,QAAQ;AACpCjrB,SAAO8T,KAAKmX,MAAAA,EAAQlkB,QAAQmkB,CAAAA,aAAY;AACtC,UAAMC,gBAAgBD,SAASE,MAAM,GAAA;AACrC,UAAMC,aAAaF,cAAcG,IAAG;AACpC,UAAMC,cAAc;MAACxB;IAAM,EAAC1f,OAAO8gB,aAAeK,EAAAA,KAAK,GAAA;AACvD,UAAMC,QAAQR,OAAOC,QAAS,EAACE,MAAM,GAAA;AACrC,UAAMM,aAAaD,MAAMH,IAAG;AAC5B,UAAMK,cAAcF,MAAMD,KAAK,GAAA;AAC/BpW,aAASwW,MAAML,aAAaF,YAAYM,aAAaD,UAAAA;EACvD,CAAA;AACF;AAEA,SAASnB,kBAAkBH,OAAO;AAChC,SAAO,QAAQA,SAAS,cAAcA;AACxC;AC1GO,IAAMyB,WAAN,MAAMA;EACXzrB,cAAc;AACZ,SAAK0rB,cAAc,IAAIhC,cAAciC,mBAAmB,YAAY,IAAI;AACxE,SAAKjlB,WAAW,IAAIgjB,cAAcrV,SAAS,UAAA;AAC3C,SAAKuX,UAAU,IAAIlC,cAAc9pB,QAAQ,SAAA;AACzC,SAAKsa,SAAS,IAAIwP,cAAc/O,OAAO,QAAA;AAGvC,SAAKkR,mBAAmB;MAAC,KAAKH;MAAa,KAAKxR;MAAQ,KAAKxT;IAAS;EACxE;EAKArG,OAAOyrB,MAAM;AACX,SAAKC,MAAM,YAAYD,IAAAA;EACzB;EAEAE,UAAUF,MAAM;AACd,SAAKC,MAAM,cAAcD,IAAAA;EAC3B;EAKAG,kBAAkBH,MAAM;AACtB,SAAKC,MAAM,YAAYD,MAAM,KAAKJ,WAAW;EAC/C;EAKAQ,eAAeJ,MAAM;AACnB,SAAKC,MAAM,YAAYD,MAAM,KAAKplB,QAAQ;EAC5C;EAKAylB,cAAcL,MAAM;AAClB,SAAKC,MAAM,YAAYD,MAAM,KAAKF,OAAO;EAC3C;EAKAQ,aAAaN,MAAM;AACjB,SAAKC,MAAM,YAAYD,MAAM,KAAK5R,MAAM;EAC1C;EAMAmS,cAAcxR,IAAI;AAChB,WAAO,KAAKyR,KAAKzR,IAAI,KAAK6Q,aAAa,YAAA;EACzC;EAMAa,WAAW1R,IAAI;AACb,WAAO,KAAKyR,KAAKzR,IAAI,KAAKnU,UAAU,SAAA;EACtC;EAMA8lB,UAAU3R,IAAI;AACZ,WAAO,KAAKyR,KAAKzR,IAAI,KAAK+Q,SAAS,QAAA;EACrC;EAMAa,SAAS5R,IAAI;AACX,WAAO,KAAKyR,KAAKzR,IAAI,KAAKX,QAAQ,OAAA;EACpC;EAKAwS,qBAAqBZ,MAAM;AACzB,SAAKC,MAAM,cAAcD,MAAM,KAAKJ,WAAW;EACjD;EAKAiB,kBAAkBb,MAAM;AACtB,SAAKC,MAAM,cAAcD,MAAM,KAAKplB,QAAQ;EAC9C;EAKAkmB,iBAAiBd,MAAM;AACrB,SAAKC,MAAM,cAAcD,MAAM,KAAKF,OAAO;EAC7C;EAKAiB,gBAAgBf,MAAM;AACpB,SAAKC,MAAM,cAAcD,MAAM,KAAK5R,MAAM;EAC5C;EAKA6R,MAAMe,QAAQhB,MAAMiB,eAAe;AACjC;MAAIjB,GAAAA;MAAMnlB,QAAQqmB,CAAAA,QAAO;AACvB,YAAMC,MAAMF,iBAAiB,KAAKG,oBAAoBF,GAAAA;AACtD,UAAID,iBAAiBE,IAAIpD,UAAUmD,GAASC,KAAAA,QAAQ,KAAKrB,WAAWoB,IAAInS,IAAK;AAC3E,aAAKsS,MAAML,QAAQG,KAAKD,GAAAA;aACnB;AAKL7f,aAAK6f,KAAKzgB,CAAAA,SAAQ;AAOhB,gBAAM6gB,UAAUL,iBAAiB,KAAKG,oBAAoB3gB,IAAAA;AAC1D,eAAK4gB,MAAML,QAAQM,SAAS7gB,IAAAA;QAC9B,CAAA;;IAEJ,CAAA;EACF;EAKA4gB,MAAML,QAAQO,WAAUC,WAAW;AACjC,UAAMC,cAAcC,YAAYV,MAAAA;AAChCrP,aAAK6P,UAAU,WAAWC,WAAAA,GAAc,CAAA,GAAID,SAAAA;AAC5CD,IAAAA,UAASP,MAAAA,EAAQQ,SAAAA;AACjB7P,aAAK6P,UAAU,UAAUC,WAAAA,GAAc,CAAA,GAAID,SAAAA;EAC7C;EAKAJ,oBAAoBjf,MAAM;AACxB,aAAS5K,IAAI,GAAGA,IAAI,KAAKwoB,iBAAiBvqB,QAAQ+B,KAAK;AACrD,YAAM4pB,MAAM,KAAKpB,iBAAiBxoB,CAAE;AACpC,UAAI4pB,IAAIpD,UAAU5b,IAAO,GAAA;AACvB,eAAOgf;;IAEX;AAEA,WAAO,KAAKrB;EACd;EAKAU,KAAKzR,IAAIkS,eAAe9e,MAAM;AAC5B,UAAM1B,OAAOwgB,cAAczC,IAAIzP,EAAAA;AAC/B,QAAItO,SAAS2D,QAAW;AACtB,YAAM,IAAI1Q,MAAM,MAAMqb,KAAK,2BAA2B5M,OAAO,GAAK;;AAEpE,WAAO1B;EACT;AAEF;AAGA,IAAA,WAA+B,oBAAIkf,SAAW;ACtK/B,IAAMgC,gBAAN,MAAMA;EACnBztB,cAAc;AACZ,SAAK0tB,QAAQ,CAAA;EACf;EAYAC,OAAO3qB,OAAO4qB,MAAM9B,MAAM5kB,QAAQ;AAChC,QAAI0mB,SAAS,cAAc;AACzB,WAAKF,QAAQ,KAAKG,mBAAmB7qB,OAAO,IAAI;AAChD,WAAK8qB,QAAQ,KAAKJ,OAAO1qB,OAAO,SAAA;;AAGlC,UAAM2nB,eAAczjB,SAAS,KAAK6mB,aAAa/qB,KAAAA,EAAOkE,OAAOA,MAAU,IAAA,KAAK6mB,aAAa/qB,KAAM;AAC/F,UAAMrB,SAAS,KAAKmsB,QAAQnD,cAAa3nB,OAAO4qB,MAAM9B,IAAAA;AAEtD,QAAI8B,SAAS,gBAAgB;AAC3B,WAAKE,QAAQnD,cAAa3nB,OAAO,MAAA;AACjC,WAAK8qB,QAAQ,KAAKJ,OAAO1qB,OAAO,WAAA;;AAElC,WAAOrB;EACT;EAKAmsB,QAAQnD,cAAa3nB,OAAO4qB,MAAM9B,MAAM;AACtCA,WAAOA,QAAQ,CAAA;AACf,eAAWkC,cAAcrD,cAAa;AACpC,YAAMsD,SAASD,WAAWC;AAC1B,YAAMnB,SAASmB,OAAOL,IAAK;AAC3B,YAAM7kB,SAAS;QAAC/F;QAAO8oB;QAAMkC,WAAWjuB;MAAQ;AAChD,UAAImuB,SAAapB,QAAQ/jB,QAAQklB,MAAAA,MAAY,SAASnC,KAAKqC,YAAY;AACrE,eAAO;;IAEX;AAEA,WAAO;EACT;EAEAC,aAAa;AAMX,QAAI,CAAChsB,cAAc,KAAK4Z,MAAM,GAAG;AAC/B,WAAKqS,YAAY,KAAKrS;AACtB,WAAKA,SAAS9L;;EAElB;EAMA6d,aAAa/qB,OAAO;AAClB,QAAI,KAAKgZ,QAAQ;AACf,aAAO,KAAKA;;AAGd,UAAM2O,eAAc,KAAK3O,SAAS,KAAK6R,mBAAmB7qB,KAAAA;AAE1D,SAAKsrB,oBAAoBtrB,KAAAA;AAEzB,WAAO2nB;EACT;EAEAkD,mBAAmB7qB,OAAOurB,KAAK;AAC7B,UAAM9f,SAASzL,SAASA,MAAMyL;AAC9B,UAAM1O,UAAUwX,eAAe9I,OAAO1O,WAAW0O,OAAO1O,QAAQ6rB,SAAS,CAAA,CAAC;AAC1E,UAAMA,UAAU4C,WAAW/f,MAAAA;AAE3B,WAAO1O,YAAY,SAAS,CAACwuB,MAAM,CAAA,IAAKE,kBAAkBzrB,OAAO4oB,SAAS7rB,SAASwuB,GAAI;EACzF;EAMAD,oBAAoBtrB,OAAO;AACzB,UAAM0rB,sBAAsB,KAAKL,aAAa,CAAA;AAC9C,UAAM1D,eAAc,KAAK3O;AACzB,UAAM1b,OAAO,CAACmH,GAAGC,MAAMD,EAAEP,OAAO/C,CAAAA,MAAK,CAACuD,EAAEinB,KAAKtqB,CAAAA,MAAKF,EAAE8pB,OAAOpT,OAAOxW,EAAE4pB,OAAOpT,EAAE,CAAA;AAC7E,SAAKiT,QAAQxtB,KAAKouB,qBAAqB/D,YAAAA,GAAc3nB,OAAO,MAAA;AAC5D,SAAK8qB,QAAQxtB,KAAKqqB,cAAa+D,mBAAAA,GAAsB1rB,OAAO,OAAA;EAC9D;AACF;AAKA,SAASwrB,WAAW/f,QAAQ;AAC1B,QAAMmgB,WAAW,CAAA;AACjB,QAAMhD,UAAU,CAAA;AAChB,QAAMlY,OAAO9T,OAAO8T,KAAK2Z,SAASzB,QAAQjnB,KAAK;AAC/C,WAAStB,IAAI,GAAGA,IAAIqQ,KAAKpS,QAAQ+B,KAAK;AACpCuoB,YAAQ1mB,KAAKmoB,SAASb,UAAU9Y,KAAKrQ,CAAE,CAAA,CAAA;EACzC;AAEA,QAAMwrB,QAAQpgB,OAAOmd,WAAW,CAAA;AAChC,WAASvoB,IAAI,GAAGA,IAAIwrB,MAAMvtB,QAAQ+B,KAAK;AACrC,UAAM4qB,SAASY,MAAMxrB,CAAE;AAEvB,QAAIuoB,QAAQ/nB,QAAQoqB,MAAAA,MAAY,IAAI;AAClCrC,cAAQ1mB,KAAK+oB,MAAAA;AACbW,eAASX,OAAOpT,EAAE,IAAI;;EAE1B;AAEA,SAAO;IAAC+Q;IAASgD;EAAQ;AAC3B;AAEA,SAASE,QAAQ/uB,SAASwuB,KAAK;AAC7B,MAAI,CAACA,OAAOxuB,YAAY,OAAO;AAC7B,WAAO;;AAET,MAAIA,YAAY,MAAM;AACpB,WAAO,CAAA;;AAET,SAAOA;AACT;AAEA,SAAS0uB,kBAAkBzrB,OAAO,EAAC4oB,SAASgD,SAAQ,GAAG7uB,SAASwuB,KAAK;AACnE,QAAM5sB,SAAS,CAAA;AACf,QAAMoM,UAAU/K,MAAM2L,WAAU;AAEhC,aAAWsf,UAAUrC,SAAS;AAC5B,UAAM/Q,KAAKoT,OAAOpT;AAClB,UAAMiN,OAAOgH,QAAQ/uB,QAAQ8a,EAAAA,GAAK0T,GAAAA;AAClC,QAAIzG,SAAS,MAAM;AACjB;;AAEFnmB,WAAOuD,KAAK;MACV+oB;MACAluB,SAASgvB,WAAW/rB,MAAMyL,QAAQ;QAACwf;QAAQY,OAAOD,SAAS/T,EAAG;MAAA,GAAGiN,MAAM/Z,OAAAA;IACzE,CAAA;EACF;AAEA,SAAOpM;AACT;AAEA,SAASotB,WAAWtgB,QAAQ,EAACwf,QAAQY,MAAK,GAAG/G,MAAM/Z,SAAS;AAC1D,QAAM2F,OAAOjF,OAAOugB,gBAAgBf,MAAAA;AACpC,QAAMgB,SAASxgB,OAAOygB,gBAAgBpH,MAAMpU,IAAAA;AAC5C,MAAImb,SAASZ,OAAOjZ,UAAU;AAE5Bia,WAAO/pB,KAAK+oB,OAAOjZ,QAAQ;;AAE7B,SAAOvG,OAAO0gB,eAAeF,QAAQlhB,SAAS;IAAC;KAAK;IAElDqhB,YAAY;IACZC,WAAW;IACXC,SAAS;EACX,CAAA;AACF;AClLO,SAASC,aAAathB,MAAMlO,SAAS;AAC1C,QAAMyvB,kBAAkBxa,SAASya,SAASxhB,IAAAA,KAAS,CAAA;AACnD,QAAMyhB,kBAAkB3vB,QAAQ0vB,YAAY,CAAA,GAAIxhB,IAAK,KAAI,CAAA;AACzD,SAAOyhB,eAAeC,aAAa5vB,QAAQ4vB,aAAaH,gBAAgBG,aAAa;AACvF;AAEA,SAASC,0BAA0B/U,IAAI8U,WAAW;AAChD,MAAI/uB,OAAOia;AACX,MAAIA,OAAO,WAAW;AACpBja,WAAO+uB;aACE9U,OAAO,WAAW;AAC3Bja,WAAO+uB,cAAc,MAAM,MAAM;;AAEnC,SAAO/uB;AACT;AAEA,SAASivB,0BAA0BjvB,MAAM+uB,WAAW;AAClD,SAAO/uB,SAAS+uB,YAAY,YAAY;AAC1C;AAEA,SAASG,cAAcjV,IAAI;AACzB,MAAIA,OAAO,OAAOA,OAAO,OAAOA,OAAO,KAAK;AAC1C,WAAOA;;AAEX;AAEA,SAASkV,iBAAiB9sB,UAAU;AAClC,MAAIA,aAAa,SAASA,aAAa,UAAU;AAC/C,WAAO;;AAET,MAAIA,aAAa,UAAUA,aAAa,SAAS;AAC/C,WAAO;;AAEX;AAEO,SAAS+sB,cAAcnV,OAAOoV,cAAc;AACjD,MAAIH,cAAcjV,EAAK,GAAA;AACrB,WAAOA;;AAET,aAAWiN,QAAQmI,cAAc;AAC/B,UAAMrvB,OAAOknB,KAAKlnB,QACbmvB,iBAAiBjI,KAAK7kB,QAAQ,KAC9B4X,GAAGvZ,SAAS,KAAKwuB,cAAcjV,GAAG,CAAA,EAAGqV,YAAW,CAAA;AACrD,QAAItvB,MAAM;AACR,aAAOA;;EAEX;AACA,QAAM,IAAIpB,MAAM,6BAA6Bqb,uDAAuD;AACtG;AAEA,SAASsV,mBAAmBtV,IAAIja,MAAMS,SAAS;AAC7C,MAAIA,QAAQT,OAAO,QAAA,MAAcia,IAAI;AACnC,WAAO;MAACja;IAAI;;AAEhB;AAEA,SAASwvB,yBAAyBvV,IAAIpM,QAAQ;AAC5C,MAAIA,OAAOzN,QAAQyN,OAAOzN,KAAKyuB,UAAU;AACvC,UAAMY,UAAU5hB,OAAOzN,KAAKyuB,SAASvoB,OAAO,CAACopB,MAAMA,EAAEC,YAAY1V,MAAMyV,EAAEE,YAAY3V,EAAAA;AACrF,QAAIwV,QAAQ/uB,QAAQ;AAClB,aAAO6uB,mBAAmBtV,IAAI,KAAKwV,QAAQ,CAAA,CAAE,KAAKF,mBAAmBtV,IAAI,KAAKwV,QAAQ,CAAE,CAAA;;;AAG5F,SAAO,CAAA;AACT;AAEA,SAASI,iBAAiBhiB,QAAQ1O,SAAS;AACzC,QAAM2wB,gBAAgBrG,UAAU5b,OAAOR,IAAI,KAAK;IAACiM,QAAQ,CAAA;EAAE;AAC3D,QAAMyW,eAAe5wB,QAAQma,UAAU,CAAA;AACvC,QAAM0W,iBAAiBrB,aAAa9gB,OAAOR,MAAMlO,OAAAA;AACjD,QAAMma,SAASta,uBAAOgqB,OAAO,IAAI;AAGjChqB,SAAO8T,KAAKid,YAAAA,EAAchqB,QAAQkU,CAAAA,OAAM;AACtC,UAAMgW,YAAYF,aAAa9V,EAAG;AAClC,QAAI,CAACpQ,SAASomB,SAAY,GAAA;AACxB,aAAOC,QAAQC,MAAM,0CAA0ClW,IAAI;;AAErE,QAAIgW,UAAUG,QAAQ;AACpB,aAAOF,QAAQG,KAAK,kDAAkDpW,IAAI;;AAE5E,UAAMja,OAAOovB,cAAcnV,IAAIgW,WAAWT,yBAAyBvV,IAAIpM,MAASuG,GAAAA,SAASkF,OAAO2W,UAAU5iB,IAAI,CAAC;AAC/G,UAAMijB,YAAYrB,0BAA0BjvB,MAAMgwB,cAAAA;AAClD,UAAMO,sBAAsBT,cAAcxW,UAAU,CAAA;AACpDA,WAAOW,EAAAA,IAAMuW,QAAQxxB,uBAAOgqB,OAAO,IAAI,GAAG;MAAC;QAAChpB;MAAI;MAAGiwB;MAAWM,oBAAoBvwB,IAAK;MAAEuwB,oBAAoBD,SAAU;IAAC,CAAA;EAC1H,CAAA;AAGAziB,SAAOzN,KAAKyuB,SAAS9oB,QAAQtF,CAAAA,YAAW;AACtC,UAAM4M,OAAO5M,QAAQ4M,QAAQQ,OAAOR;AACpC,UAAM0hB,YAAYtuB,QAAQsuB,aAAaJ,aAAathB,MAAMlO,OAAAA;AAC1D,UAAMyvB,kBAAkBnF,UAAUpc,IAAAA,KAAS,CAAA;AAC3C,UAAMkjB,sBAAsB3B,gBAAgBtV,UAAU,CAAA;AACtDta,WAAO8T,KAAKyd,mBAAAA,EAAqBxqB,QAAQ0qB,CAAAA,cAAa;AACpD,YAAMzwB,OAAOgvB,0BAA0ByB,WAAW1B,SAAAA;AAClD,YAAM9U,KAAKxZ,QAAQT,OAAO,QAAA,KAAaA;AACvCsZ,aAAOW,EAAG,IAAGX,OAAOW,EAAAA,KAAOjb,uBAAOgqB,OAAO,IAAI;AAC7CwH,cAAQlX,OAAOW,EAAAA,GAAK;QAAC;UAACja;QAAI;QAAG+vB,aAAa9V,EAAG;QAAEsW,oBAAoBE,SAAU;MAAC,CAAA;IAChF,CAAA;EACF,CAAA;AAGAzxB,SAAO8T,KAAKwG,MAAAA,EAAQvT,QAAQgN,CAAAA,QAAO;AACjC,UAAMwB,QAAQ+E,OAAOvG,GAAI;AACzByd,YAAQjc,OAAO;MAACH,SAASkF,OAAO/E,MAAMlH,IAAI;MAAG+G,SAASG;IAAM,CAAA;EAC9D,CAAA;AAEA,SAAO+E;AACT;AAEA,SAASoX,YAAY7iB,QAAQ;AAC3B,QAAM1O,UAAU0O,OAAO1O,YAAY0O,OAAO1O,UAAU,CAAA;AAEpDA,UAAQ6rB,UAAUrU,eAAexX,QAAQ6rB,SAAS,CAAA,CAAC;AACnD7rB,UAAQma,SAASuW,iBAAiBhiB,QAAQ1O,OAAAA;AAC5C;AAEA,SAASwxB,SAASvwB,MAAM;AACtBA,SAAOA,QAAQ,CAAA;AACfA,OAAKyuB,WAAWzuB,KAAKyuB,YAAY,CAAA;AACjCzuB,OAAKmc,SAASnc,KAAKmc,UAAU,CAAA;AAC7B,SAAOnc;AACT;AAEA,SAASwwB,WAAW/iB,QAAQ;AAC1BA,WAASA,UAAU,CAAA;AACnBA,SAAOzN,OAAOuwB,SAAS9iB,OAAOzN,IAAI;AAElCswB,cAAY7iB,MAAAA;AAEZ,SAAOA;AACT;AAEA,IAAMgjB,WAAW,oBAAI3f,IAAAA;AACrB,IAAM4f,aAAa,oBAAIC,IAAAA;AAEvB,SAASC,WAAWC,UAAUC,UAAU;AACtC,MAAIpe,OAAO+d,SAASnH,IAAIuH,QAAAA;AACxB,MAAI,CAACne,MAAM;AACTA,WAAOoe,SAAAA;AACPL,aAASlf,IAAIsf,UAAUne,IAAAA;AACvBge,eAAWrxB,IAAIqT,IAAAA;;AAEjB,SAAOA;AACT;AAEA,IAAMqe,aAAa,CAACxf,MAAKyf,KAAKre,QAAQ;AACpC,QAAMmU,OAAOmK,iBAAiBD,KAAKre,GAAAA;AACnC,MAAImU,SAAS5X,QAAW;AACtBqC,IAAAA,KAAIlS,IAAIynB,IAAAA;;AAEZ;AAEe,IAAMoK,SAAN,MAAMA;EACnBlyB,YAAYyO,QAAQ;AAClB,SAAK0jB,UAAUX,WAAW/iB,MAAAA;AAC1B,SAAK2jB,cAAc,oBAAItgB,IAAAA;AACvB,SAAKugB,iBAAiB,oBAAIvgB,IAAAA;EAC5B;EAEA,IAAIwgB,WAAW;AACb,WAAO,KAAKH,QAAQG;EACtB;EAEA,IAAIrkB,OAAO;AACT,WAAO,KAAKkkB,QAAQlkB;EACtB;EAEA,IAAIA,KAAKA,MAAM;AACb,SAAKkkB,QAAQlkB,OAAOA;EACtB;EAEA,IAAIjN,OAAO;AACT,WAAO,KAAKmxB,QAAQnxB;EACtB;EAEA,IAAIA,KAAKA,MAAM;AACb,SAAKmxB,QAAQnxB,OAAOuwB,SAASvwB,IAAAA;EAC/B;EAEA,IAAIjB,UAAU;AACZ,WAAO,KAAKoyB,QAAQpyB;EACtB;EAEA,IAAIA,QAAQA,SAAS;AACnB,SAAKoyB,QAAQpyB,UAAUA;EACzB;EAEA,IAAI6rB,UAAU;AACZ,WAAO,KAAKuG,QAAQvG;EACtB;EAEA5f,SAAS;AACP,UAAMyC,SAAS,KAAK0jB;AACpB,SAAKI,WAAU;AACfjB,gBAAY7iB,MAAAA;EACd;EAEA8jB,aAAa;AACX,SAAKH,YAAYI,MAAK;AACtB,SAAKH,eAAeG,MAAK;EAC3B;EAQAC,iBAAiBC,aAAa;AAC5B,WAAOd,WAAWc,aAChB,MAAM;MAAC;QACL,YAAYA;QACZ;MACD;IAAC,CAAA;EACN;EASAC,0BAA0BD,aAAaE,YAAY;AACjD,WAAOhB,WAAW,GAAGc,0BAA0BE,cAC7C,MAAM;MACJ;QACE,YAAYF,2BAA2BE;QACvC,eAAeA;MAChB;MAED;QACE,YAAYF;QACZ;MACD;IACF,CAAA;EACL;EAUAG,wBAAwBH,aAAaI,aAAa;AAChD,WAAOlB,WAAW,GAAGc,eAAeI,eAClC,MAAM;MAAC;QACL,YAAYJ,wBAAwBI;QACpC,YAAYJ;QACZ,YAAYI;QACZ;MACD;IAAC,CAAA;EACN;EAOA9D,gBAAgBf,QAAQ;AACtB,UAAMpT,KAAKoT,OAAOpT;AAClB,UAAM5M,OAAO,KAAKA;AAClB,WAAO2jB,WAAW,GAAG3jB,eAAe4M,MAClC,MAAM;MAAC;QACL,WAAWA;WACRoT,OAAO8E,0BAA0B,CAAA;MACrC;IAAC,CAAA;EACN;EAKAC,cAAcC,WAAWC,YAAY;AACnC,UAAMd,cAAc,KAAKA;AACzB,QAAIvZ,QAAQuZ,YAAY9H,IAAI2I,SAAAA;AAC5B,QAAI,CAACpa,SAASqa,YAAY;AACxBra,cAAQ,oBAAI/G,IAAAA;AACZsgB,kBAAY7f,IAAI0gB,WAAWpa,KAAAA;;AAE7B,WAAOA;EACT;EAQAqW,gBAAgB+D,WAAWE,UAAUD,YAAY;AAC/C,UAAM,EAACnzB,SAASkO,KAAI,IAAI;AACxB,UAAM4K,QAAQ,KAAKma,cAAcC,WAAWC,UAAAA;AAC5C,UAAME,SAASva,MAAMyR,IAAI6I,QAAAA;AACzB,QAAIC,QAAQ;AACV,aAAOA;;AAGT,UAAMnE,SAAS,oBAAI0C,IAAAA;AAEnBwB,aAASxsB,QAAQ+M,CAAAA,SAAQ;AACvB,UAAIuf,WAAW;AACbhE,eAAO5uB,IAAI4yB,SAAAA;AACXvf,aAAK/M,QAAQgN,CAAAA,QAAOoe,WAAW9C,QAAQgE,WAAWtf,GAAAA,CAAAA;;AAEpDD,WAAK/M,QAAQgN,CAAAA,QAAOoe,WAAW9C,QAAQlvB,SAAS4T,GAAAA,CAAAA;AAChDD,WAAK/M,QAAQgN,CAAAA,QAAOoe,WAAW9C,QAAQ5E,UAAUpc,IAAAA,KAAS,CAAA,GAAI0F,GAAAA,CAAAA;AAC9DD,WAAK/M,QAAQgN,CAAAA,QAAOoe,WAAW9C,QAAQja,UAAUrB,GAAAA,CAAAA;AACjDD,WAAK/M,QAAQgN,CAAAA,QAAOoe,WAAW9C,QAAQtE,aAAahX,GAAAA,CAAAA;IACtD,CAAA;AAEA,UAAM1M,QAAQosB,MAAMC,KAAKrE,MAAAA;AACzB,QAAIhoB,MAAM3F,WAAW,GAAG;AACtB2F,YAAM/B,KAAKtF,uBAAOgqB,OAAO,IAAI,CAAA;;AAE/B,QAAI8H,WAAW6B,IAAIJ,QAAW,GAAA;AAC5Bta,YAAMtG,IAAI4gB,UAAUlsB,KAAAA;;AAEtB,WAAOA;EACT;EAMAusB,oBAAoB;AAClB,UAAM,EAACzzB,SAASkO,KAAI,IAAI;AAExB,WAAO;MACLlO;MACAsqB,UAAUpc,IAAK,KAAI,CAAA;MACnB+G,SAASya,SAASxhB,IAAK,KAAI,CAAA;MAC3B;QAACA;MAAI;MACL+G;MACA2V;IACD;EACH;EASA8I,oBAAoBxE,QAAQyE,QAAO3lB,SAAS4lB,WAAW;IAAC;KAAK;AAC3D,UAAMhyB,SAAS;MAACiyB,SAAS;IAAI;AAC7B,UAAM,EAACC,UAAUC,YAAW,IAAIC,YAAY,KAAK1B,gBAAgBpD,QAAQ0E,QAAAA;AACzE,QAAI5zB,UAAU8zB;AACd,QAAIG,YAAYH,UAAUH,MAAQ,GAAA;AAChC/xB,aAAOiyB,UAAU;AACjB7lB,gBAAUkmB,WAAWlmB,OAAWA,IAAAA,QAAAA,IAAYA;AAE5C,YAAMmmB,cAAc,KAAK/E,eAAeF,QAAQlhB,SAAS+lB,WAAAA;AACzD/zB,gBAAUo0B,eAAeN,UAAU9lB,SAASmmB,WAAAA;;AAG9C,eAAW3gB,QAAQmgB,QAAO;AACxB/xB,aAAO4R,IAAAA,IAAQxT,QAAQwT,IAAK;IAC9B;AACA,WAAO5R;EACT;EAQAwtB,eAAeF,QAAQlhB,SAAS4lB,WAAW;IAAC;EAAG,GAAES,oBAAoB;AACnE,UAAM,EAACP,SAAAA,IAAYE,YAAY,KAAK1B,gBAAgBpD,QAAQ0E,QAAAA;AAC5D,WAAOlpB,SAASsD,OACZomB,IAAAA,eAAeN,UAAU9lB,SAASmC,QAAWkkB,kBAAAA,IAC7CP;EACN;AACF;AAEA,SAASE,YAAYM,eAAepF,QAAQ0E,UAAU;AACpD,MAAI9a,QAAQwb,cAAc/J,IAAI2E,MAAAA;AAC9B,MAAI,CAACpW,OAAO;AACVA,YAAQ,oBAAI/G,IAAAA;AACZuiB,kBAAc9hB,IAAI0c,QAAQpW,KAAAA;;AAE5B,QAAMgZ,WAAW8B,SAASvI,KAAI;AAC9B,MAAIgI,SAASva,MAAMyR,IAAIuH,QAAAA;AACvB,MAAI,CAACuB,QAAQ;AACX,UAAMS,WAAWS,gBAAgBrF,QAAQ0E,QAAAA;AACzCP,aAAS;MACPS;MACAC,aAAaH,SAASzsB,OAAOqtB,CAAAA,MAAK,CAACA,EAAErE,YAAW,EAAGznB,SAAS,OAAA,CAAA;IAC9D;AACAoQ,UAAMtG,IAAIsf,UAAUuB,MAAAA;;AAEtB,SAAOA;AACT;AAEA,IAAMoB,cAAc3zB,CAAAA,UAAS4J,SAAS5J,KAAAA,KACjCjB,OAAO60B,oBAAoB5zB,KAAO8tB,EAAAA,KAAK,CAAChb,QAAQsgB,WAAWpzB,MAAM8S,GAAI,CAAA,CAAA;AAE1E,SAASqgB,YAAY5gB,OAAOsgB,QAAO;AACjC,QAAM,EAACgB,cAAcC,YAAW,IAAI5G,aAAa3a,KAAAA;AAEjD,aAAWG,QAAQmgB,QAAO;AACxB,UAAMtE,aAAasF,aAAanhB,IAAAA;AAChC,UAAM8b,YAAYsF,YAAYphB,IAAAA;AAC9B,UAAM1S,SAASwuB,aAAaD,eAAehc,MAAMG,IAAK;AACtD,QAAK6b,eAAe6E,WAAWpzB,KAAAA,KAAU2zB,YAAY3zB,KAAK,MACpDwuB,aAAa9V,QAAQ1Y,KAAS,GAAA;AAClC,aAAO;;EAEX;AACA,SAAO;AACT;;AC7YA,IAAM+zB,kBAAkB;EAAC;EAAO;EAAU;EAAQ;EAAS;AAAY;AACvE,SAASC,qBAAqB5xB,UAAUrC,MAAM;AAC5C,SAAOqC,aAAa,SAASA,aAAa,YAAa2xB,gBAAgB/wB,QAAQZ,QAAAA,MAAc,MAAMrC,SAAS;AAC9G;AAEA,SAASk0B,cAAcC,IAAIC,IAAI;AAC7B,SAAO,SAASvtB,GAAGC,GAAG;AACpB,WAAOD,EAAEstB,EAAG,MAAKrtB,EAAEqtB,EAAAA,IACfttB,EAAEutB,EAAAA,IAAMttB,EAAEstB,EAAAA,IACVvtB,EAAEstB,EAAG,IAAGrtB,EAAEqtB,EAAG;EACnB;AACF;AAEA,SAASE,qBAAqBlnB,SAAS;AACrC,QAAM/K,QAAQ+K,QAAQ/K;AACtB,QAAMkyB,mBAAmBlyB,MAAMjD,QAAQ6O;AAEvC5L,QAAM0c,cAAc,aAAA;AACpBwO,WAAagH,oBAAoBA,iBAAiBC,YAAY;IAACpnB;KAAU/K,KAAAA;AAC3E;AAEA,SAASoyB,oBAAoBrnB,SAAS;AACpC,QAAM/K,QAAQ+K,QAAQ/K;AACtB,QAAMkyB,mBAAmBlyB,MAAMjD,QAAQ6O;AACvCsf,WAAagH,oBAAoBA,iBAAiBG,YAAY;IAACtnB;KAAU/K,KAAAA;AAC3E;AAMA,SAASsyB,UAAU/oB,MAAM;AACvB,MAAI4H,gBAAAA,KAAqB,OAAO5H,SAAS,UAAU;AACjDA,WAAOkF,SAAS8jB,eAAehpB,IAAAA;EACjC,WAAWA,QAAQA,KAAKjL,QAAQ;AAE9BiL,WAAOA,KAAK,CAAE;;AAGhB,MAAIA,QAAQA,KAAKqB,QAAQ;AAEvBrB,WAAOA,KAAKqB;;AAEd,SAAOrB;AACT;AAEA,IAAMipB,YAAY,CAAA;AAClB,IAAMC,WAAW,CAAC9hB,QAAQ;AACxB,QAAM/F,SAAS0nB,UAAU3hB,GAAAA;AACzB,SAAO/T,OAAO81B,OAAOF,SAAAA,EAAWtuB,OAAO,CAACyuB,MAAMA,EAAE/nB,WAAWA,MAAAA,EAAQsd,IAAG;AACxE;AAEA,SAAS0K,gBAAgB5D,KAAKnvB,OAAOgzB,MAAM;AACzC,QAAMniB,OAAO9T,OAAO8T,KAAKse,GAAAA;AACzB,aAAWre,OAAOD,MAAM;AACtB,UAAMoiB,SAAS,CAACniB;AAChB,QAAImiB,UAAUjzB,OAAO;AACnB,YAAMhC,QAAQmxB,IAAIre,GAAI;AACtB,aAAOqe,IAAIre,GAAI;AACf,UAAIkiB,OAAO,KAAKC,SAASjzB,OAAO;AAC9BmvB,YAAI8D,SAASD,IAAAA,IAAQh1B;;;EAG3B;AACF;AASA,SAASk1B,mBAAmBvvB,GAAGwvB,WAAWC,aAAaC,SAAS;AAC9D,MAAI,CAACD,eAAezvB,EAAEyH,SAAS,YAAY;AACzC,WAAO;;AAET,MAAIioB,SAAS;AACX,WAAOF;;AAET,SAAOxvB;AACT;AAEA,SAAS2vB,eAAehhB,OAAOnQ,WAAWoxB,OAAO;AAC/C,SAAOjhB,MAAMpV,QAAQs2B,OAAOlhB,MAAMihB,KAAM,IAAGpxB,UAAUoxB,KAAM;AAC7D;AAEA,SAASE,eAAe1vB,OAAM5B,WAAW;AACvC,QAAM,EAACuxB,QAAQC,OAAAA,IAAU5vB;AACzB,MAAI2vB,UAAUC,QAAQ;AACpB,WAAO;MACL9sB,MAAMysB,eAAeI,QAAQvxB,WAAW,MAAA;MACxC2E,OAAOwsB,eAAeI,QAAQvxB,WAAW,OAAA;MACzC4E,KAAKusB,eAAeK,QAAQxxB,WAAW,KAAA;MACvC6E,QAAQssB,eAAeK,QAAQxxB,WAAW,QAAA;IAC5C;;AAEF,SAAOA;AACT;AAEA,IAAMyxB,QAAN,MAAMA;EASJ,OAAO1M,YAAYplB,OAAO;AACxB0oB,aAAShtB,IAAOsE,GAAAA,KAAAA;AAChB+xB,sBAAAA;EACF;EAEA,OAAOnM,cAAc5lB,OAAO;AAC1B0oB,aAASrB,OAAUrnB,GAAAA,KAAAA;AACnB+xB,sBAAAA;EACF;EAGA12B,YAAYuM,MAAMoqB,YAAY;AAC5B,UAAMloB,SAAS,KAAKA,SAAS,IAAIyjB,OAAOyE,UAAAA;AACxC,UAAMC,gBAAgBtB,UAAU/oB,IAAAA;AAChC,UAAMsqB,gBAAgBpB,SAASmB,aAAAA;AAC/B,QAAIC,eAAe;AACjB,YAAM,IAAIr3B,MACR,8CAA+Cq3B,cAAchc,KAAK,oDAClBgc,cAAcjpB,OAAOiN,KAAK,kBAC1E;;AAGJ,UAAM9a,UAAU0O,OAAO0gB,eAAe1gB,OAAO+kB,kBAAiB,GAAI,KAAK7kB,WAAU,CAAA;AAEjF,SAAK2jB,WAAW,KAAK7jB,OAAO6jB,YAAYpe,gBAAgB0iB,aAAa,GAAA;AACrE,SAAKtE,SAAS9jB,aAAaC,MAAAA;AAE3B,UAAMV,UAAU,KAAKukB,SAAS3kB,eAAeipB,eAAe72B,QAAQ8N,WAAW;AAC/E,UAAMD,SAASG,WAAWA,QAAQH;AAClC,UAAMrE,SAASqE,UAAUA,OAAOrE;AAChC,UAAMF,QAAQuE,UAAUA,OAAOvE;AAE/B,SAAKwR,KAAKic,IAAAA;AACV,SAAKzjB,MAAMtF;AACX,SAAKH,SAASA;AACd,SAAKvE,QAAQA;AACb,SAAKE,SAASA;AACd,SAAKwtB,WAAWh3B;AAIhB,SAAKi3B,eAAe,KAAKnpB;AACzB,SAAKrB,UAAU,CAAA;AACf,SAAKyqB,YAAY,CAAA;AACjB,SAAKC,UAAUhnB;AACf,SAAKnI,QAAQ,CAAA;AACb,SAAKsK,0BAA0BnC;AAC/B,SAAKlL,YAAYkL;AACjB,SAAKinB,UAAU,CAAA;AACf,SAAKC,aAAalnB;AAClB,SAAKmnB,aAAa,CAAA;AAElB,SAAKC,uBAAuBpnB;AAC5B,SAAKqnB,kBAAkB,CAAA;AACvB,SAAKrd,SAAS,CAAA;AACd,SAAKsd,WAAW,IAAI/J,cAAAA;AACpB,SAAK5Z,WAAW,CAAA;AAChB,SAAK4jB,iBAAiB,CAAA;AACtB,SAAKC,WAAW;AAChB,SAAKC,sBAAsBznB;AAC3B,SAAKgM,WAAWhM;AAChB,SAAK0nB,YAAYC,SAASC,CAAAA,SAAQ,KAAK9rB,OAAO8rB,IAAO/3B,GAAAA,QAAQg4B,eAAe,CAAA;AAC5E,SAAKC,eAAe,CAAA;AAGpBxC,cAAU,KAAK3a,EAAE,IAAI;AAErB,QAAI,CAAC9M,WAAW,CAACH,QAAQ;AAKvBkjB,cAAQC,MAAM,mEAAA;AACd;;AAGFkH,aAASC,OAAO,MAAM,YAAYjD,oBAAAA;AAClCgD,aAASC,OAAO,MAAM,YAAY9C,mBAAAA;AAElC,SAAK+C,YAAW;AAChB,QAAI,KAAKT,UAAU;AACjB,WAAK1rB,OAAM;;EAEf;EAEA,IAAI6B,cAAc;AAChB,UAAM,EAAC9N,SAAS,EAAC8N,aAAauqB,oBAAAA,GAAsB/uB,OAAOE,QAAQytB,aAAY,IAAI;AACnF,QAAI,CAAC50B,cAAcyL,WAAc,GAAA;AAE/B,aAAOA;;AAGT,QAAIuqB,uBAAuBpB,cAAc;AAEvC,aAAOA;;AAIT,WAAOztB,SAASF,QAAQE,SAAS;EACnC;EAEA,IAAIvI,OAAO;AACT,WAAO,KAAKyN,OAAOzN;EACrB;EAEA,IAAIA,KAAKA,MAAM;AACb,SAAKyN,OAAOzN,OAAOA;EACrB;EAEA,IAAIjB,UAAU;AACZ,WAAO,KAAKg3B;EACd;EAEA,IAAIh3B,QAAQA,SAAS;AACnB,SAAK0O,OAAO1O,UAAUA;EACxB;EAEA,IAAIstB,WAAW;AACb,WAAOA;EACT;EAKA8K,cAAc;AAEZ,SAAKzY,cAAc,YAAA;AAEnB,QAAI,KAAK3f,QAAQs4B,YAAY;AAC3B,WAAKjmB,OAAM;WACN;AACLkmB,kBAAY,MAAM,KAAKv4B,QAAQoS,gBAAgB;;AAGjD,SAAKomB,WAAU;AAGf,SAAK7Y,cAAc,WAAA;AAEnB,WAAO;EACT;EAEA8S,QAAQ;AACNgG,gBAAY,KAAK5qB,QAAQ,KAAKyF,GAAG;AACjC,WAAO;EACT;EAEAolB,OAAO;AACLR,aAASQ,KAAK,IAAI;AAClB,WAAO;EACT;EAOArmB,OAAO/I,OAAOE,QAAQ;AACpB,QAAI,CAAC0uB,SAASS,QAAQ,IAAI,GAAG;AAC3B,WAAKC,QAAQtvB,OAAOE,MAAAA;WACf;AACL,WAAKqvB,oBAAoB;QAACvvB;QAAOE;MAAM;;EAE3C;EAEAovB,QAAQtvB,OAAOE,QAAQ;AACrB,UAAMxJ,UAAU,KAAKA;AACrB,UAAM6N,SAAS,KAAKA;AACpB,UAAMC,cAAc9N,QAAQq4B,uBAAuB,KAAKvqB;AACxD,UAAMgrB,UAAU,KAAKvG,SAASjkB,eAAeT,QAAQvE,OAAOE,QAAQsE,WAAAA;AACpE,UAAMirB,WAAW/4B,QAAQoS,oBAAoB,KAAKmgB,SAASlkB,oBAAmB;AAC9E,UAAM0pB,OAAO,KAAKzuB,QAAQ,WAAW;AAErC,SAAKA,QAAQwvB,QAAQxvB;AACrB,SAAKE,SAASsvB,QAAQtvB;AACtB,SAAKytB,eAAe,KAAKnpB;AACzB,QAAI,CAACyqB,YAAY,MAAMQ,UAAU,IAAI,GAAG;AACtC;;AAGF,SAAKpZ,cAAc,UAAU;MAAC7W,MAAMgwB;IAAO,CAAA;AAE3C3K,aAAanuB,QAAQg5B,UAAU;MAAC;MAAMF;IAAQ,GAAE,IAAI;AAEpD,QAAI,KAAKnB,UAAU;AACjB,UAAI,KAAKE,UAAUE,IAAO,GAAA;AAExB,aAAKkB,OAAM;;;EAGjB;EAEAC,sBAAsB;AACpB,UAAMl5B,UAAU,KAAKA;AACrB,UAAMm5B,gBAAgBn5B,QAAQma,UAAU,CAAA;AAExC/M,SAAK+rB,eAAe,CAACC,aAAa5P,WAAW;AAC3C4P,kBAAYte,KAAK0O;IACnB,CAAA;EACF;EAKA6P,sBAAsB;AACpB,UAAMr5B,UAAU,KAAKA;AACrB,UAAMs5B,YAAYt5B,QAAQma;AAC1B,UAAMA,SAAS,KAAKA;AACpB,UAAMof,UAAU15B,OAAO8T,KAAKwG,MAAAA,EAAQ5M,OAAO,CAAC0kB,KAAKnX,OAAO;AACtDmX,UAAInX,EAAG,IAAG;AACV,aAAOmX;IACT,GAAG,CAAA,CAAC;AACJ,QAAIrtB,QAAQ,CAAA;AAEZ,QAAI00B,WAAW;AACb10B,cAAQA,MAAMsF,OACZrK,OAAO8T,KAAK2lB,SAAWE,EAAAA,IAAI,CAAC1e,OAAO;AACjC,cAAMoV,eAAeoJ,UAAUxe,EAAG;AAClC,cAAMja,OAAOovB,cAAcnV,IAAIoV,YAAAA;AAC/B,cAAMuJ,WAAW54B,SAAS;AAC1B,cAAMwH,eAAexH,SAAS;AAC9B,eAAO;UACLb,SAASkwB;UACTwJ,WAAWD,WAAW,cAAcpxB,eAAe,WAAW;UAC9DsxB,OAAOF,WAAW,iBAAiBpxB,eAAe,aAAa;QACjE;MACF,CAAA,CAAA;;AAIJ+E,SAAKxI,OAAO,CAAC4H,SAAS;AACpB,YAAM0jB,eAAe1jB,KAAKxM;AAC1B,YAAM8a,KAAKoV,aAAapV;AACxB,YAAMja,OAAOovB,cAAcnV,IAAIoV,YAAAA;AAC/B,YAAM0J,YAAYpiB,eAAe0Y,aAAahiB,MAAM1B,KAAKmtB,KAAK;AAE9D,UAAIzJ,aAAahtB,aAAaiN,UAAa2kB,qBAAqB5E,aAAahtB,UAAUrC,IAAUi0B,MAAAA,qBAAqBtoB,KAAKktB,SAAS,GAAG;AACrIxJ,qBAAahtB,WAAWsJ,KAAKktB;;AAG/BH,cAAQze,EAAG,IAAG;AACd,UAAI1F,QAAQ;AACZ,UAAI0F,MAAMX,UAAUA,OAAOW,EAAAA,EAAI5M,SAAS0rB,WAAW;AACjDxkB,gBAAQ+E,OAAOW,EAAG;aACb;AACL,cAAM+e,aAAavM,SAASZ,SAASkN,SAAAA;AACrCxkB,gBAAQ,IAAIykB,WAAW;UACrB/e;UACA5M,MAAM0rB;UACNtmB,KAAK,KAAKA;UACVrQ,OAAO;QACT,CAAA;AACAkX,eAAO/E,MAAM0F,EAAE,IAAI1F;;AAGrBA,YAAMlV,KAAKgwB,cAAclwB,OAAAA;IAC3B,CAAA;AAEAoN,SAAKmsB,SAAS,CAACO,YAAYhf,OAAO;AAChC,UAAI,CAACgf,YAAY;AACf,eAAO3f,OAAOW,EAAG;;IAErB,CAAA;AAEA1N,SAAK+M,QAAQ,CAAC/E,UAAU;AACtB7M,cAAQwE,UAAU,MAAMqI,OAAOA,MAAMpV,OAAO;AAC5CuI,cAAQgE,OAAO,MAAM6I,KAAAA;IACvB,CAAA;EACF;EAKA2kB,kBAAkB;AAChB,UAAM32B,WAAW,KAAK8zB;AACtB,UAAM8C,UAAU,KAAK/4B,KAAKyuB,SAASnuB;AACnC,UAAM04B,UAAU72B,SAAS7B;AAEzB6B,aAASqE,KAAK,CAACC,GAAGC,MAAMD,EAAElE,QAAQmE,EAAEnE,KAAK;AACzC,QAAIy2B,UAAUD,SAAS;AACrB,eAAS12B,IAAI02B,SAAS12B,IAAI22B,SAAS,EAAE32B,GAAG;AACtC,aAAK42B,oBAAoB52B,CAAAA;MAC3B;AACAF,eAAS0J,OAAOktB,SAASC,UAAUD,OAAAA;;AAErC,SAAKxC,kBAAkBp0B,SAASpB,MAAM,CAAGyF,EAAAA,KAAKstB,cAAc,SAAS,OAAA,CAAA;EACvE;EAKAoF,8BAA8B;AAC5B,UAAM,EAACjD,WAAW9zB,UAAUnC,MAAM,EAACyuB,SAAAA,EAAS,IAAI;AAChD,QAAItsB,SAAS7B,SAASmuB,SAASnuB,QAAQ;AACrC,aAAO,KAAK41B;;AAEd/zB,aAASwD,QAAQ,CAACC,OAAMrD,WAAU;AAChC,UAAIksB,SAASvoB,OAAO/C,CAAAA,MAAKA,MAAMyC,MAAKuzB,QAAQ,EAAE74B,WAAW,GAAG;AAC1D,aAAK24B,oBAAoB12B,MAAAA;;IAE7B,CAAA;EACF;EAEA62B,2BAA2B;AACzB,UAAMC,iBAAiB,CAAA;AACvB,UAAM5K,WAAW,KAAKzuB,KAAKyuB;AAC3B,QAAIpsB,GAAGC;AAEP,SAAK42B,4BAA2B;AAEhC,SAAK72B,IAAI,GAAGC,OAAOmsB,SAASnuB,QAAQ+B,IAAIC,MAAMD,KAAK;AACjD,YAAMhC,UAAUouB,SAASpsB,CAAE;AAC3B,UAAIuD,QAAO,KAAKC,eAAexD,CAAAA;AAC/B,YAAM4K,OAAO5M,QAAQ4M,QAAQ,KAAKQ,OAAOR;AAEzC,UAAIrH,MAAKqH,QAAQrH,MAAKqH,SAASA,MAAM;AACnC,aAAKgsB,oBAAoB52B,CAAAA;AACzBuD,QAAAA,QAAO,KAAKC,eAAexD,CAAAA;;AAE7BuD,MAAAA,MAAKqH,OAAOA;AACZrH,MAAAA,MAAK+oB,YAAYtuB,QAAQsuB,aAAaJ,aAAathB,MAAM,KAAKlO,OAAO;AACrE6G,MAAAA,MAAK0zB,QAAQj5B,QAAQi5B,SAAS;AAC9B1zB,MAAAA,MAAKrD,QAAQF;AACbuD,MAAAA,MAAKiZ,QAAQ,KAAKxe,QAAQwe;AAC1BjZ,MAAAA,MAAK2zB,UAAU,KAAKC,iBAAiBn3B,CAAAA;AAErC,UAAIuD,MAAK7F,YAAY;AACnB6F,QAAAA,MAAK7F,WAAW05B,YAAYp3B,CAAAA;AAC5BuD,QAAAA,MAAK7F,WAAW25B,WAAU;aACrB;AACL,cAAMC,kBAAkBtN,SAAShB,cAAcpe,IAAAA;AAC/C,cAAM,EAAC2sB,oBAAoBC,gBAAAA,IAAmB7lB,SAASya,SAASxhB,IAAK;AACrErO,eAAOC,OAAO86B,iBAAiB;UAC7BE,iBAAiBxN,SAASd,WAAWsO,eAAAA;UACrCD,oBAAoBA,sBAAsBvN,SAASd,WAAWqO,kBAAAA;QAChE,CAAA;AACAh0B,QAAAA,MAAK7F,aAAa,IAAI45B,gBAAgB,MAAMt3B,CAAAA;AAC5Cg3B,uBAAen1B,KAAK0B,MAAK7F,UAAU;;IAEvC;AAEA,SAAK+4B,gBAAe;AACpB,WAAOO;EACT;EAMAS,iBAAiB;AACf3tB,SAAK,KAAKnM,KAAKyuB,UAAU,CAACpuB,SAASyD,iBAAiB;AAClD,WAAK+B,eAAe/B,YAAc/D,EAAAA,WAAWg6B,MAAK;IACpD,GAAG,IAAI;EACT;EAKAA,QAAQ;AACN,SAAKD,eAAc;AACnB,SAAKpb,cAAc,OAAA;EACrB;EAEA1T,OAAO8rB,MAAM;AACX,UAAMrpB,SAAS,KAAKA;AAEpBA,WAAOzC,OAAM;AACb,UAAMjM,UAAU,KAAKg3B,WAAWtoB,OAAO0gB,eAAe1gB,OAAO+kB,kBAAiB,GAAI,KAAK7kB,WAAU,CAAA;AACjG,UAAMqsB,gBAAgB,KAAKrD,sBAAsB,CAAC53B,QAAQ6O;AAE1D,SAAKqsB,cAAa;AAClB,SAAKC,oBAAmB;AACxB,SAAKC,qBAAoB;AAIzB,SAAK3D,SAASpJ,WAAU;AAExB,QAAI,KAAK1O,cAAc,gBAAgB;MAACoY;MAAM3J,YAAY;IAAI,CAAA,MAAO,OAAO;AAC1E;;AAIF,UAAMkM,iBAAiB,KAAKD,yBAAwB;AAEpD,SAAK1a,cAAc,sBAAA;AAGnB,QAAI3S,aAAa;AACjB,aAAS1J,IAAI,GAAGC,OAAO,KAAKtC,KAAKyuB,SAASnuB,QAAQ+B,IAAIC,MAAMD,KAAK;AAC/D,YAAM,EAACtC,WAAU,IAAI,KAAK8F,eAAexD,CAAAA;AACzC,YAAM03B,QAAQ,CAACC,iBAAiBX,eAAex2B,QAAQ9C,UAAAA,MAAgB;AAGvEA,iBAAWq6B,sBAAsBL,KAAAA;AACjChuB,mBAAa1K,KAAKC,IAAI,CAACvB,WAAWs6B,eAAc,GAAItuB,UAAAA;IACtD;AACAA,iBAAa,KAAKuuB,cAAcv7B,QAAQmJ,OAAOqyB,cAAcxuB,aAAa;AAC1E,SAAKyuB,cAAczuB,UAAAA;AAGnB,QAAI,CAACiuB,eAAe;AAGlB7tB,WAAKktB,gBAAgB,CAACt5B,eAAe;AACnCA,mBAAWg6B,MAAK;MAClB,CAAA;;AAGF,SAAKU,gBAAgB3D,IAAAA;AAGrB,SAAKpY,cAAc,eAAe;MAACoY;IAAI,CAAA;AAEvC,SAAKtrB,QAAQhF,KAAKstB,cAAc,KAAK,MAAA,CAAA;AAGrC,UAAM,EAACqC,SAASC,WAAU,IAAI;AAC9B,QAAIA,YAAY;AACd,WAAKsE,cAActE,YAAY,IAAI;eAC1BD,QAAQ71B,QAAQ;AACzB,WAAKq6B,mBAAmBxE,SAASA,SAAS,IAAI;;AAGhD,SAAK6B,OAAM;EACb;EAKAiC,gBAAgB;AACd9tB,SAAK,KAAK+M,QAAQ,CAAC/E,UAAU;AAC3B7M,cAAQqE,UAAU,MAAMwI,KAAAA;IAC1B,CAAA;AAEA,SAAK8jB,oBAAmB;AACxB,SAAKG,oBAAmB;EAC1B;EAKA8B,sBAAsB;AACpB,UAAMn7B,UAAU,KAAKA;AACrB,UAAM67B,iBAAiB,IAAIjK,IAAI/xB,OAAO8T,KAAK,KAAK2jB,UAAU,CAAA;AAC1D,UAAMwE,YAAY,IAAIlK,IAAI5xB,QAAQ+7B,MAAM;AAExC,QAAI,CAACC,UAAUH,gBAAgBC,SAAAA,KAAc,CAAC,CAAC,KAAKvE,yBAAyBv3B,QAAQs4B,YAAY;AAE/F,WAAK2D,aAAY;AACjB,WAAKzD,WAAU;;EAEnB;EAKA4C,uBAAuB;AACrB,UAAM,EAAC1D,eAAAA,IAAkB;AACzB,UAAMwE,UAAU,KAAKC,uBAAsB,KAAM,CAAA;AACjD,eAAW,EAACpP,QAAQjqB,OAAO8F,MAAAA,KAAUszB,SAAS;AAC5C,YAAMpG,OAAO/I,WAAW,oBAAoB,CAACnkB,QAAQA;AACrDitB,sBAAgB6B,gBAAgB50B,OAAOgzB,IAAAA;IACzC;EACF;EAKAqG,yBAAyB;AACvB,UAAMlE,eAAe,KAAKA;AAC1B,QAAI,CAACA,gBAAgB,CAACA,aAAa12B,QAAQ;AACzC;;AAGF,SAAK02B,eAAe,CAAA;AACpB,UAAMmE,eAAe,KAAKn7B,KAAKyuB,SAASnuB;AACxC,UAAM86B,UAAU,CAACnZ,QAAQ,IAAI0O,IAC3BqG,aACG9wB,OAAOyuB,CAAAA,MAAKA,EAAE,CAAA,MAAO1S,GAAAA,EACrBsW,IAAI,CAAC5D,GAAGtyB,MAAMA,IAAI,MAAMsyB,EAAE9oB,OAAO,CAAGue,EAAAA,KAAK,GAAA,CAAA,CAAA;AAG9C,UAAMiR,YAAYD,QAAQ,CAAA;AAC1B,aAAS/4B,IAAI,GAAGA,IAAI84B,cAAc94B,KAAK;AACrC,UAAI,CAAC04B,UAAUM,WAAWD,QAAQ/4B,CAAK,CAAA,GAAA;AACrC;;IAEJ;AACA,WAAOgwB,MAAMC,KAAK+I,SACf9C,EAAAA,IAAI5D,CAAAA,MAAKA,EAAE3K,MAAM,GACjBuO,CAAAA,EAAAA,IAAI9xB,CAAAA,OAAM;MAACqlB,QAAQrlB,EAAE,CAAE;MAAE5E,OAAO,CAAC4E,EAAE,CAAE;MAAEkB,OAAO,CAAClB,EAAE,CAAE;MAAA;EACxD;EAOA+zB,cAAczuB,YAAY;AACxB,QAAI,KAAK2S,cAAc,gBAAgB;MAACyO,YAAY;IAAI,CAAA,MAAO,OAAO;AACpE;;AAGF7lB,YAAQ0D,OAAO,MAAM,KAAK3C,OAAO,KAAKE,QAAQwD,UAAAA;AAE9C,UAAM+b,OAAO,KAAK9jB;AAClB,UAAMs3B,SAASxT,KAAKzf,SAAS,KAAKyf,KAAKvf,UAAU;AAEjD,SAAKiD,UAAU,CAAA;AACfW,SAAK,KAAKpF,OAAO,CAACT,QAAQ;AACxB,UAAIg1B,UAAUh1B,IAAIrE,aAAa,aAAa;AAE1C;;AAKF,UAAIqE,IAAIwF,WAAW;AACjBxF,YAAIwF,UAAS;;AAEf,WAAKN,QAAQtH,KAAI,GAAIoC,IAAIkF,QAAO,CAAA;IAClC,GAAG,IAAI;AAEP,SAAKA,QAAQ7F,QAAQ,CAAC4F,MAAMhJ,WAAU;AACpCgJ,WAAKgwB,OAAOh5B;IACd,CAAA;AAEA,SAAKmc,cAAc,aAAA;EACrB;EAOA+b,gBAAgB3D,MAAM;AACpB,QAAI,KAAKpY,cAAc,wBAAwB;MAACoY;MAAM3J,YAAY;IAAI,CAAA,MAAO,OAAO;AAClF;;AAGF,aAAS9qB,IAAI,GAAGC,OAAO,KAAKtC,KAAKyuB,SAASnuB,QAAQ+B,IAAIC,MAAM,EAAED,GAAG;AAC/D,WAAKwD,eAAexD,CAAGtC,EAAAA,WAAW+L,UAAS;IAC7C;AAEA,aAASzJ,IAAI,GAAGC,OAAO,KAAKtC,KAAKyuB,SAASnuB,QAAQ+B,IAAIC,MAAM,EAAED,GAAG;AAC/D,WAAKm5B,eAAen5B,GAAG4wB,WAAW6D,IAAAA,IAAQA,KAAK;QAAChzB,cAAczB;MAAC,CAAA,IAAKy0B,IAAI;IAC1E;AAEA,SAAKpY,cAAc,uBAAuB;MAACoY;IAAI,CAAA;EACjD;EAOA0E,eAAej5B,QAAOu0B,MAAM;AAC1B,UAAMlxB,QAAO,KAAKC,eAAetD,MAAAA;AACjC,UAAMuoB,OAAO;MAACllB,MAAAA;MAAMrD,OAAAA;MAAOu0B;MAAM3J,YAAY;IAAI;AAEjD,QAAI,KAAKzO,cAAc,uBAAuBoM,IAAAA,MAAU,OAAO;AAC7D;;AAGFllB,IAAAA,MAAK7F,WAAW07B,QAAQ3E,IAAAA;AAExBhM,SAAKqC,aAAa;AAClB,SAAKzO,cAAc,sBAAsBoM,IAAAA;EAC3C;EAEAkN,SAAS;AACP,QAAI,KAAKtZ,cAAc,gBAAgB;MAACyO,YAAY;IAAI,CAAA,MAAO,OAAO;AACpE;;AAGF,QAAI8J,SAAS1E,IAAI,IAAI,GAAG;AACtB,UAAI,KAAKmE,YAAY,CAACO,SAASS,QAAQ,IAAI,GAAG;AAC5CT,iBAASp1B,MAAM,IAAI;;WAEhB;AACL,WAAK6J,KAAI;AACTuoB,2BAAqB;QAACjyB,OAAO;MAAI,CAAA;;EAErC;EAEA0J,OAAO;AACL,QAAIrJ;AACJ,QAAI,KAAKu1B,mBAAmB;AAC1B,YAAM,EAACvvB,OAAOE,OAAAA,IAAU,KAAKqvB;AAE7B,WAAKA,oBAAoB;AACzB,WAAKD,QAAQtvB,OAAOE,MAAAA;;AAEtB,SAAKipB,MAAK;AAEV,QAAI,KAAKnpB,SAAS,KAAK,KAAKE,UAAU,GAAG;AACvC;;AAGF,QAAI,KAAKmW,cAAc,cAAc;MAACyO,YAAY;IAAI,CAAA,MAAO,OAAO;AAClE;;AAMF,UAAMuO,SAAS,KAAKlwB;AACpB,SAAKnJ,IAAI,GAAGA,IAAIq5B,OAAOp7B,UAAUo7B,OAAOr5B,CAAAA,EAAGoJ,KAAK,GAAG,EAAEpJ,GAAG;AACtDq5B,aAAOr5B,CAAE,EAACqJ,KAAK,KAAK1H,SAAS;IAC/B;AAEA,SAAK23B,cAAa;AAGlB,WAAOt5B,IAAIq5B,OAAOp7B,QAAQ,EAAE+B,GAAG;AAC7Bq5B,aAAOr5B,CAAE,EAACqJ,KAAK,KAAK1H,SAAS;IAC/B;AAEA,SAAK0a,cAAc,WAAA;EACrB;EAKAkd,uBAAuBC,eAAe;AACpC,UAAM15B,WAAW,KAAKo0B;AACtB,UAAM51B,SAAS,CAAA;AACf,QAAI0B,GAAGC;AAEP,SAAKD,IAAI,GAAGC,OAAOH,SAAS7B,QAAQ+B,IAAIC,MAAM,EAAED,GAAG;AACjD,YAAMuD,QAAOzD,SAASE,CAAE;AACxB,UAAI,CAACw5B,iBAAiBj2B,MAAK2zB,SAAS;AAClC54B,eAAOuD,KAAK0B,KAAAA;;IAEhB;AAEA,WAAOjF;EACT;EAMAyB,+BAA+B;AAC7B,WAAO,KAAKw5B,uBAAuB,IAAI;EACzC;EAOAD,gBAAgB;AACd,QAAI,KAAKjd,cAAc,sBAAsB;MAACyO,YAAY;IAAI,CAAA,MAAO,OAAO;AAC1E;;AAGF,UAAMhrB,WAAW,KAAKC,6BAA4B;AAClD,aAASC,IAAIF,SAAS7B,SAAS,GAAG+B,KAAK,GAAG,EAAEA,GAAG;AAC7C,WAAKy5B,aAAa35B,SAASE,CAAE,CAAA;IAC/B;AAEA,SAAKqc,cAAc,mBAAA;EACrB;EAOAod,aAAal2B,OAAM;AACjB,UAAMyM,MAAM,KAAKA;AACjB,UAAMgjB,OAAOzvB,MAAKm2B;AAClB,UAAMC,UAAU,CAAC3G,KAAK4G;AACtB,UAAMnU,OAAOwN,eAAe1vB,OAAM,KAAK5B,SAAS;AAChD,UAAM8mB,OAAO;MACXllB,MAAAA;MACArD,OAAOqD,MAAKrD;MACZ4qB,YAAY;IACd;AAEA,QAAI,KAAKzO,cAAc,qBAAqBoM,IAAAA,MAAU,OAAO;AAC3D;;AAGF,QAAIkR,SAAS;AACXjU,eAAS1V,KAAK;QACZ3J,MAAM2sB,KAAK3sB,SAAS,QAAQ,IAAIof,KAAKpf,OAAO2sB,KAAK3sB;QACjDC,OAAO0sB,KAAK1sB,UAAU,QAAQ,KAAKN,QAAQyf,KAAKnf,QAAQ0sB,KAAK1sB;QAC7DC,KAAKysB,KAAKzsB,QAAQ,QAAQ,IAAIkf,KAAKlf,MAAMysB,KAAKzsB;QAC9CC,QAAQwsB,KAAKxsB,WAAW,QAAQ,KAAKN,SAASuf,KAAKjf,SAASwsB,KAAKxsB;MACnE,CAAA;;AAGFjD,IAAAA,MAAK7F,WAAW2L,KAAI;AAEpB,QAAIswB,SAAS;AACX9T,iBAAW7V,GAAAA;;AAGbyY,SAAKqC,aAAa;AAClB,SAAKzO,cAAc,oBAAoBoM,IAAAA;EACzC;EAOAlnB,cAAczC,OAAO;AACnB,WAAO4C,eAAe5C,OAAO,KAAK6C,WAAW,KAAKs2B,WAAW;EAC/D;EAEA4B,0BAA0B12B,GAAGsxB,MAAM/3B,SAAS0E,kBAAkB;AAC5D,UAAMqoB,SAASqQ,YAAY52B,MAAMuxB,IAAK;AACtC,QAAI,OAAOhL,WAAW,YAAY;AAChC,aAAOA,OAAO,MAAMtmB,GAAGzG,SAAS0E,gBAAAA;;AAGlC,WAAO,CAAA;EACT;EAEAoC,eAAe/B,cAAc;AAC3B,UAAMzD,UAAU,KAAKL,KAAKyuB,SAAS3qB,YAAa;AAChD,UAAM3B,WAAW,KAAK8zB;AACtB,QAAIrwB,QAAOzD,SAAS+D,OAAO/C,CAAAA,MAAKA,KAAKA,EAAEg2B,aAAa94B,OAAAA,EAAS6pB,IAAG;AAEhE,QAAI,CAACtkB,OAAM;AACTA,MAAAA,QAAO;QACLqH,MAAM;QACNjN,MAAM,CAAA;QACNK,SAAS;QACTN,YAAY;QACZq8B,QAAQ;QACR7M,SAAS;QACTC,SAAS;QACT8J,OAAOj5B,WAAWA,QAAQi5B,SAAS;QACnC/2B,OAAOuB;QACPq1B,UAAU94B;QACVQ,SAAS,CAAA;QACTZ,SAAS;MACX;AACAkC,eAAS+B,KAAK0B,KAAAA;;AAGhB,WAAOA;EACT;EAEA+H,aAAa;AACX,WAAO,KAAKuN,aAAa,KAAKA,WAAWtC,cAAc,MAAM;MAAC5W,OAAO;MAAMiL,MAAM;KAAQ;EAC3F;EAEAovB,yBAAyB;AACvB,WAAO,KAAKj6B,6BAA4B,EAAG9B;EAC7C;EAEAk5B,iBAAiB11B,cAAc;AAC7B,UAAMzD,UAAU,KAAKL,KAAKyuB,SAAS3qB,YAAa;AAChD,QAAI,CAACzD,SAAS;AACZ,aAAO;;AAGT,UAAMuF,QAAO,KAAKC,eAAe/B,YAAAA;AAIjC,WAAO,OAAO8B,MAAKw2B,WAAW,YAAY,CAACx2B,MAAKw2B,SAAS,CAAC/7B,QAAQ+7B;EACpE;EAEAE,qBAAqBx4B,cAAcy1B,SAAS;AAC1C,UAAM3zB,QAAO,KAAKC,eAAe/B,YAAAA;AACjC8B,IAAAA,MAAKw2B,SAAS,CAAC7C;EACjB;EAEAgD,qBAAqBh6B,QAAO;AAC1B,SAAKk0B,eAAel0B,MAAM,IAAG,CAAC,KAAKk0B,eAAel0B,MAAM;EAC1D;EAEAi6B,kBAAkBj6B,QAAO;AACvB,WAAO,CAAC,KAAKk0B,eAAel0B,MAAM;EACpC;EAKAk6B,kBAAkB34B,cAAc44B,WAAWnD,SAAS;AAClD,UAAMzC,OAAOyC,UAAU,SAAS;AAChC,UAAM3zB,QAAO,KAAKC,eAAe/B,YAAAA;AACjC,UAAM+P,QAAQjO,MAAK7F,WAAW48B,mBAAmBztB,QAAW4nB,IAAAA;AAE5D,QAAIzrB,QAAQqxB,SAAY,GAAA;AACtB92B,MAAAA,MAAK5F,KAAK08B,SAAAA,EAAWN,SAAS,CAAC7C;AAC/B,WAAKvuB,OAAM;WACN;AACL,WAAKsxB,qBAAqBx4B,cAAcy1B,OAAAA;AAExC1lB,YAAM7I,OAAOpF,OAAM;QAAC2zB;MAAO,CAAA;AAC3B,WAAKvuB,OAAO,CAACqH,QAAQA,IAAIvO,iBAAiBA,eAAegzB,OAAO5nB,MAAS;;EAE7E;EAEA0tB,KAAK94B,cAAc44B,WAAW;AAC5B,SAAKD,kBAAkB34B,cAAc44B,WAAW,KAAK;EACvD;EAEAG,KAAK/4B,cAAc44B,WAAW;AAC5B,SAAKD,kBAAkB34B,cAAc44B,WAAW,IAAI;EACtD;EAKAzD,oBAAoBn1B,cAAc;AAChC,UAAM8B,QAAO,KAAKqwB,UAAUnyB,YAAa;AACzC,QAAI8B,SAAQA,MAAK7F,YAAY;AAC3B6F,MAAAA,MAAK7F,WAAW+8B,SAAQ;;AAE1B,WAAO,KAAK7G,UAAUnyB,YAAa;EACrC;EAEAi5B,QAAQ;AACN,QAAI16B,GAAGC;AACP,SAAKm1B,KAAI;AACTR,aAASjM,OAAO,IAAI;AAEpB,SAAK3oB,IAAI,GAAGC,OAAO,KAAKtC,KAAKyuB,SAASnuB,QAAQ+B,IAAIC,MAAM,EAAED,GAAG;AAC3D,WAAK42B,oBAAoB52B,CAAAA;IAC3B;EACF;EAEA26B,UAAU;AACR,SAAKte,cAAc,eAAA;AACnB,UAAM,EAAC9R,QAAQyF,IAAG,IAAI;AAEtB,SAAK0qB,MAAK;AACV,SAAKtvB,OAAO8jB,WAAU;AAEtB,QAAI3kB,QAAQ;AACV,WAAKouB,aAAY;AACjBxD,kBAAY5qB,QAAQyF,GAAAA;AACpB,WAAKif,SAASxkB,eAAeuF,GAAAA;AAC7B,WAAKzF,SAAS;AACd,WAAKyF,MAAM;;AAGb,WAAOmiB,UAAU,KAAK3a,EAAE;AAExB,SAAK6E,cAAc,cAAA;EACrB;EAEAue,iBAAiBnS,MAAM;AACrB,WAAO,KAAKle,OAAOswB,UAAapS,GAAAA,IAAAA;EAClC;EAKAyM,aAAa;AACX,SAAK4F,eAAc;AACnB,QAAI,KAAKp+B,QAAQs4B,YAAY;AAC3B,WAAK+F,qBAAoB;WACpB;AACL,WAAK1G,WAAW;;EAEpB;EAKAyG,iBAAiB;AACf,UAAME,YAAY,KAAKhH;AACvB,UAAM/E,WAAW,KAAKA;AAEtB,UAAMgM,OAAO,CAACrwB,MAAMC,cAAa;AAC/BokB,eAAStkB,iBAAiB,MAAMC,MAAMC,SAAAA;AACtCmwB,gBAAUpwB,IAAAA,IAAQC;IACpB;AAEA,UAAMA,WAAW,CAAC1H,GAAGrC,GAAGE,MAAM;AAC5BmC,QAAE+3B,UAAUp6B;AACZqC,QAAEg4B,UAAUn6B;AACZ,WAAKq3B,cAAcl1B,CAAAA;IACrB;AAEA2G,SAAK,KAAKpN,QAAQ+7B,QAAQ,CAAC7tB,SAASqwB,KAAKrwB,MAAMC,QAAAA,CAAAA;EACjD;EAKAkwB,uBAAuB;AACrB,QAAI,CAAC,KAAK9G,sBAAsB;AAC9B,WAAKA,uBAAuB,CAAA;;AAE9B,UAAM+G,YAAY,KAAK/G;AACvB,UAAMhF,WAAW,KAAKA;AAEtB,UAAMgM,OAAO,CAACrwB,MAAMC,cAAa;AAC/BokB,eAAStkB,iBAAiB,MAAMC,MAAMC,SAAAA;AACtCmwB,gBAAUpwB,IAAAA,IAAQC;IACpB;AACA,UAAMuwB,UAAU,CAACxwB,MAAMC,cAAa;AAClC,UAAImwB,UAAUpwB,IAAAA,GAAO;AACnBqkB,iBAASnkB,oBAAoB,MAAMF,MAAMC,SAAAA;AACzC,eAAOmwB,UAAUpwB,IAAK;;IAE1B;AAEA,UAAMC,WAAW,CAAC7E,OAAOE,WAAW;AAClC,UAAI,KAAKqE,QAAQ;AACf,aAAKwE,OAAO/I,OAAOE,MAAAA;;IAEvB;AAEA,QAAIm1B;AACJ,UAAMhH,WAAW,MAAM;AACrB+G,cAAQ,UAAU/G,QAAAA;AAElB,WAAKA,WAAW;AAChB,WAAKtlB,OAAM;AAEXksB,WAAK,UAAUpwB,QAAAA;AACfowB,WAAK,UAAUI,QAAAA;IACjB;AAEAA,eAAW,MAAM;AACf,WAAKhH,WAAW;AAEhB+G,cAAQ,UAAUvwB,QAAAA;AAGlB,WAAK6vB,MAAK;AACV,WAAKpF,QAAQ,GAAG,CAAA;AAEhB2F,WAAK,UAAU5G,QAAAA;IACjB;AAEA,QAAIpF,SAAS/jB,WAAW,KAAKX,MAAM,GAAG;AACpC8pB,eAAAA;WACK;AACLgH,eAAAA;;EAEJ;EAKA1C,eAAe;AACb7uB,SAAK,KAAKkqB,YAAY,CAACnpB,UAAUD,SAAS;AACxC,WAAKqkB,SAASnkB,oBAAoB,MAAMF,MAAMC,QAAAA;IAChD,CAAA;AACA,SAAKmpB,aAAa,CAAA;AAElBlqB,SAAK,KAAKmqB,sBAAsB,CAACppB,UAAUD,SAAS;AAClD,WAAKqkB,SAASnkB,oBAAoB,MAAMF,MAAMC,QAAAA;IAChD,CAAA;AACA,SAAKopB,uBAAuBpnB;EAC9B;EAEAyuB,iBAAiBh6B,OAAOmzB,MAAMjiB,SAAS;AACrC,UAAM+oB,SAAS/oB,UAAU,QAAQ;AACjC,QAAIjP,OAAM2F,MAAMlJ,GAAGC;AAEnB,QAAIw0B,SAAS,WAAW;AACtBlxB,MAAAA,QAAO,KAAKC,eAAelC,MAAM,CAAA,EAAGG,YAAY;AAChD8B,MAAAA,MAAK7F,WAAW,MAAM69B,SAAS,mBAAoB,EAAA;;AAGrD,SAAKv7B,IAAI,GAAGC,OAAOqB,MAAMrD,QAAQ+B,IAAIC,MAAM,EAAED,GAAG;AAC9CkJ,aAAO5H,MAAMtB,CAAE;AACf,YAAMtC,aAAawL,QAAQ,KAAK1F,eAAe0F,KAAKzH,YAAY,EAAE/D;AAClE,UAAIA,YAAY;AACdA,mBAAW69B,SAAS,YAAA,EAAcryB,KAAK9I,SAAS8I,KAAKzH,cAAcyH,KAAKhJ,KAAK;;IAEjF;EACF;EAMAs7B,oBAAoB;AAClB,WAAO,KAAK1H,WAAW,CAAA;EACzB;EAMA2H,kBAAkBC,gBAAgB;AAChC,UAAMC,aAAa,KAAK7H,WAAW,CAAA;AACnC,UAAM7iB,SAASyqB,eAAexF,IAAI,CAAC,EAACz0B,cAAcvB,OAAAA,OAAK,MAAM;AAC3D,YAAMqD,QAAO,KAAKC,eAAe/B,YAAAA;AACjC,UAAI,CAAC8B,OAAM;AACT,cAAM,IAAIpH,MAAM,+BAA+BsF,YAAc;;AAG/D,aAAO;QACLA;QACArB,SAASmD,MAAK5F,KAAKuC,MAAM;QACzBA,OAAAA;MACF;IACF,CAAA;AACA,UAAMwI,UAAU,CAACkzB,eAAe3qB,QAAQ0qB,UAAAA;AAExC,QAAIjzB,SAAS;AACX,WAAKorB,UAAU7iB;AAEf,WAAK8iB,aAAa;AAClB,WAAKuE,mBAAmBrnB,QAAQ0qB,UAAAA;;EAEpC;EAWAtf,cAAckO,MAAM9B,MAAM5kB,QAAQ;AAChC,WAAO,KAAKswB,SAAS7J,OAAO,MAAMC,MAAM9B,MAAM5kB,MAAAA;EAChD;EAOAg4B,gBAAgBC,UAAU;AACxB,WAAO,KAAK3H,SAASxb,OAAO9U,OAAOqtB,CAAAA,MAAKA,EAAEtG,OAAOpT,OAAOskB,QAAAA,EAAU79B,WAAW;EAC/E;EAKAq6B,mBAAmBrnB,QAAQ0qB,YAAYI,QAAQ;AAC7C,UAAMC,eAAe,KAAKt/B,QAAQu/B;AAClC,UAAMh/B,OAAO,CAACmH,GAAGC,MAAMD,EAAEP,OAAO/C,CAAAA,MAAK,CAACuD,EAAEinB,KAAKtqB,CAAAA,MAAKF,EAAEW,iBAAiBT,EAAES,gBAAgBX,EAAEZ,UAAUc,EAAEd,KAAK,CAAA;AAC1G,UAAMg8B,cAAcj/B,KAAK0+B,YAAY1qB,MAAAA;AACrC,UAAMkrB,YAAYJ,SAAS9qB,SAAShU,KAAKgU,QAAQ0qB,UAAW;AAE5D,QAAIO,YAAYj+B,QAAQ;AACtB,WAAKq9B,iBAAiBY,aAAaF,aAAavH,MAAM,KAAK;;AAG7D,QAAI0H,UAAUl+B,UAAU+9B,aAAavH,MAAM;AACzC,WAAK6G,iBAAiBa,WAAWH,aAAavH,MAAM,IAAI;;EAE5D;EAKA4D,cAAcl1B,GAAG44B,QAAQ;AACvB,UAAMtT,OAAO;MACXnb,OAAOnK;MACP44B;MACAjR,YAAY;MACZ8H,aAAa,KAAKrxB,cAAc4B,CAAAA;IAClC;AACA,UAAMi5B,cAAc,CAACxR,YAAYA,OAAOluB,QAAQ+7B,UAAU,KAAK/7B,QAAQ+7B,QAAQrzB,SAASjC,EAAEoK,OAAO3C,IAAI;AAErG,QAAI,KAAKyR,cAAc,eAAeoM,MAAM2T,WAAAA,MAAiB,OAAO;AAClE;;AAGF,UAAM1zB,UAAU,KAAK2zB,aAAal5B,GAAG44B,QAAQtT,KAAKmK,WAAW;AAE7DnK,SAAKqC,aAAa;AAClB,SAAKzO,cAAc,cAAcoM,MAAM2T,WAAAA;AAEvC,QAAI1zB,WAAW+f,KAAK/f,SAAS;AAC3B,WAAKitB,OAAM;;AAGb,WAAO;EACT;EAUA0G,aAAal5B,GAAG44B,QAAQnJ,aAAa;AACnC,UAAM,EAACkB,SAAS6H,aAAa,CAAA,GAAIj/B,QAAAA,IAAW;AAe5C,UAAM0E,mBAAmB26B;AACzB,UAAM9qB,SAAS,KAAKqrB,mBAAmBn5B,GAAGw4B,YAAY/I,aAAaxxB,gBAAAA;AACnE,UAAMyxB,UAAU0J,cAAcp5B,CAAAA;AAC9B,UAAMwvB,YAAYD,mBAAmBvvB,GAAG,KAAK4wB,YAAYnB,aAAaC,OAAAA;AAEtE,QAAID,aAAa;AAGf,WAAKmB,aAAa;AAGlBlJ,eAAanuB,QAAQ8/B,SAAS;QAACr5B;QAAG8N;QAAQ;MAAK,GAAE,IAAI;AAErD,UAAI4hB,SAAS;AACXhI,iBAAanuB,QAAQ+/B,SAAS;UAACt5B;UAAG8N;UAAQ;QAAK,GAAE,IAAI;;;AAIzD,UAAMvI,UAAU,CAACkzB,eAAe3qB,QAAQ0qB,UAAAA;AACxC,QAAIjzB,WAAWqzB,QAAQ;AACrB,WAAKjI,UAAU7iB;AACf,WAAKqnB,mBAAmBrnB,QAAQ0qB,YAAYI,MAAAA;;AAG9C,SAAKhI,aAAapB;AAElB,WAAOjqB;EACT;EAUA4zB,mBAAmBn5B,GAAGw4B,YAAY/I,aAAaxxB,kBAAkB;AAC/D,QAAI+B,EAAEyH,SAAS,YAAY;AACzB,aAAO,CAAA;;AAGT,QAAI,CAACgoB,aAAa;AAEhB,aAAO+I;;AAGT,UAAMK,eAAe,KAAKt/B,QAAQu/B;AAClC,WAAO,KAAKpC,0BAA0B12B,GAAG64B,aAAavH,MAAMuH,cAAc56B,gBAAAA;EAC5E;AACF;AA3oCE,cAFIgyB,OAEGzhB,YAAWA;AAClB,cAHIyhB,OAGGjB,aAAYA;AACnB,cAJIiB,OAIGpM,aAAYA;AACnB,cALIoM,OAKGpJ,YAAWA;AAClB,cANIoJ,OAMGsJ,WAAUA;AACjB,cAPItJ,OAOGhB,YAAWA;AAyoCpB,SAASiB,oBAAoB;AAC3B,SAAOvpB,KAAKspB,MAAMjB,WAAW,CAACxyB,UAAUA,MAAMw0B,SAASpJ,WAAU,CAAA;AACnE;AE/vCA,SAAS4R,SAASC,KAAKC,SAASC,QAAQD,SAAS;AAC/CD,MAAIG,UAAUC,eAAeF,MAAMG,gBAAgBJ,QAAQI,cAAc;AACzEL,MAAIM,YAAYF,eAAeF,MAAMK,YAAYN,QAAQM,UAAU,CAAA;AACnEP,MAAIQ,iBAAiBJ,eAAeF,MAAMO,kBAAkBR,QAAQQ,gBAAgB;AACpFT,MAAIU,WAAWN,eAAeF,MAAMS,iBAAiBV,QAAQU,eAAe;AAC5EX,MAAIY,YAAYR,eAAeF,MAAMW,aAAaZ,QAAQY,WAAW;AACrEb,MAAIc,cAAcV,eAAeF,MAAMa,aAAad,QAAQc,WAAW;AACzE;AAEA,SAASC,OAAOhB,KAAKiB,UAAUC,QAAQ;AACrClB,MAAIgB,OAAOE,OAAOC,GAAGD,OAAOE,CAAC;AAC/B;AAKA,SAASC,cAAcpB,SAAS;AAC9B,MAAIA,QAAQqB,SAAS;AACnB,WAAOC;;AAGT,MAAItB,QAAQuB,WAAWvB,QAAQwB,2BAA2B,YAAY;AACpE,WAAOC;;AAGT,SAAOV;AACT;AAEA,SAASW,SAASC,QAAQC,SAASC,SAAS,CAAA,GAAI;AAC9C,QAAMC,QAAQH,OAAOI;AACrB,QAAM,EAACC,OAAOC,cAAc,GAAGC,KAAKC,YAAYL,QAAQ,EAAC,IAAID;AAC7D,QAAM,EAACG,OAAOI,cAAcF,KAAKG,WAAAA,IAAcT;AAC/C,QAAMI,QAAQM,KAAKC,IAAIN,aAAaG,YAAAA;AACpC,QAAMF,MAAMI,KAAKE,IAAIL,WAAWE,UAAAA;AAChC,QAAMI,UAAUR,cAAcG,gBAAgBD,YAAYC,gBAAgBH,cAAcI,cAAcF,YAAYE;AAElH,SAAO;IACLP;IACAE;IACAU,MAAMd,QAAQc;IACdC,MAAMT,MAAMF,SAAS,CAACS,UAAUX,QAAQI,MAAMF,QAAQE,MAAMF;EAC9D;AACF;AAiBA,SAASY,YAAY7C,KAAK8C,MAAMjB,SAASC,QAAQ;AAC/C,QAAM,EAACF,QAAQ3B,QAAAA,IAAW6C;AAC1B,QAAM,EAACf,OAAOE,OAAOU,MAAMC,KAAAA,IAAQjB,SAASC,QAAQC,SAASC,MAAAA;AAC7D,QAAMiB,aAAa1B,cAAcpB,OAAAA;AAEjC,MAAI,EAAC+C,OAAO,MAAMC,QAAO,IAAInB,UAAU,CAAA;AACvC,MAAIoB,GAAGC,OAAOC;AAEd,OAAKF,IAAI,GAAGA,KAAKN,MAAM,EAAEM,GAAG;AAC1BC,YAAQvB,QAAQK,SAASgB,UAAUL,OAAOM,IAAIA,MAAMnB,KAAM;AAE1D,QAAIoB,MAAME,MAAM;AAEd;IACF,WAAWL,MAAM;AACfhD,UAAIsD,OAAOH,MAAMhC,GAAGgC,MAAM/B,CAAC;AAC3B4B,aAAO;WACF;AACLD,iBAAW/C,KAAKoD,MAAMD,OAAOF,SAAShD,QAAQqB,OAAO;;AAGvD8B,WAAOD;EACT;AAEA,MAAIR,MAAM;AACRQ,YAAQvB,QAAQK,SAASgB,UAAUL,OAAO,MAAMb,KAAM;AACtDgB,eAAW/C,KAAKoD,MAAMD,OAAOF,SAAShD,QAAQqB,OAAO;;AAGvD,SAAO,CAAC,CAACqB;AACX;AAiBA,SAASY,gBAAgBvD,KAAK8C,MAAMjB,SAASC,QAAQ;AACnD,QAAMF,SAASkB,KAAKlB;AACpB,QAAM,EAACG,OAAOE,OAAOW,KAAAA,IAAQjB,SAASC,QAAQC,SAASC,MAAAA;AACvD,QAAM,EAACkB,OAAO,MAAMC,QAAO,IAAInB,UAAU,CAAA;AACzC,MAAI0B,OAAO;AACX,MAAIC,SAAS;AACb,MAAIP,GAAGC,OAAOO,OAAOC,MAAMC,MAAMC;AAEjC,QAAMC,aAAa,CAACC,YAAW9B,SAASgB,UAAUL,OAAOmB,SAAQA,WAAUhC;AAC3E,QAAMiC,QAAQ,MAAM;AAClB,QAAIL,SAASC,MAAM;AAEjB5D,UAAIgB,OAAOwC,MAAMI,IAAAA;AACjB5D,UAAIgB,OAAOwC,MAAMG,IAAAA;AAGjB3D,UAAIgB,OAAOwC,MAAMK,KAAAA;;EAErB;AAEA,MAAIb,MAAM;AACRG,YAAQvB,OAAOkC,WAAW,CAAG,CAAA;AAC7B9D,QAAIsD,OAAOH,MAAMhC,GAAGgC,MAAM/B,CAAC;;AAG7B,OAAK8B,IAAI,GAAGA,KAAKN,MAAM,EAAEM,GAAG;AAC1BC,YAAQvB,OAAOkC,WAAWZ,CAAG,CAAA;AAE7B,QAAIC,MAAME,MAAM;AAEd;;AAGF,UAAMlC,IAAIgC,MAAMhC;AAChB,UAAMC,IAAI+B,MAAM/B;AAChB,UAAM6C,SAAS9C,IAAI;AAEnB,QAAI8C,WAAWP,OAAO;AAEpB,UAAItC,IAAIuC,MAAM;AACZA,eAAOvC;iBACEA,IAAIwC,MAAM;AACnBA,eAAOxC;;AAGToC,cAAQC,SAASD,OAAOrC,KAAK,EAAEsC;WAC1B;AACLO,YAAAA;AAGAhE,UAAIgB,OAAOG,GAAGC,CAAAA;AAEdsC,cAAQO;AACRR,eAAS;AACTE,aAAOC,OAAOxC;;AAGhByC,YAAQzC;EACV;AACA4C,QAAAA;AACF;AAOA,SAASE,kBAAkBpB,MAAM;AAC/B,QAAMqB,OAAOrB,KAAK7C;AAClB,QAAMM,aAAa4D,KAAK5D,cAAc4D,KAAK5D,WAAWyB;AACtD,QAAMoC,cAAc,CAACtB,KAAKuB,cAAc,CAACvB,KAAKwB,SAAS,CAACH,KAAK3C,WAAW2C,KAAK1C,2BAA2B,cAAc,CAAC0C,KAAK7C,WAAW,CAACf;AACxI,SAAO6D,cAAcb,kBAAkBV;AACzC;AAKA,SAAS0B,wBAAwBtE,SAAS;AACxC,MAAIA,QAAQqB,SAAS;AACnB,WAAOkD;;AAGT,MAAIvE,QAAQuB,WAAWvB,QAAQwB,2BAA2B,YAAY;AACpE,WAAOgD;;AAGT,SAAOC;AACT;AAEA,SAASC,oBAAoB3E,KAAK8C,MAAMb,OAAOF,OAAO;AACpD,MAAI6C,OAAO9B,KAAK+B;AAChB,MAAI,CAACD,MAAM;AACTA,WAAO9B,KAAK+B,QAAQ,IAAIC,OAAAA;AACxB,QAAIhC,KAAK8B,KAAKA,MAAM3C,OAAOF,KAAQ,GAAA;AACjC6C,WAAKG,UAAS;;;AAGlBhF,WAASC,KAAK8C,KAAK7C,OAAO;AAC1BD,MAAIgF,OAAOJ,IAAAA;AACb;AAEA,SAASK,iBAAiBjF,KAAK8C,MAAMb,OAAOF,OAAO;AACjD,QAAM,EAACmD,UAAUjF,QAAAA,IAAW6C;AAC5B,QAAMqC,gBAAgBjB,kBAAkBpB,IAAAA;AAExC,aAAWjB,WAAWqD,UAAU;AAC9BnF,aAASC,KAAKC,SAAS4B,QAAQ3B,KAAK;AACpCF,QAAIoF,UAAS;AACb,QAAID,cAAcnF,KAAK8C,MAAMjB,SAAS;MAACI;MAAOE,KAAKF,QAAQF,QAAQ;KAAK,GAAA;AACtE/B,UAAI+E,UAAS;;AAEf/E,QAAIgF,OAAM;EACZ;AACF;AAEA,IAAMK,YAAY,OAAOP,WAAW;AAEpC,SAASQ,KAAKtF,KAAK8C,MAAMb,OAAOF,OAAO;AACrC,MAAIsD,aAAa,CAACvC,KAAK7C,QAAQ4B,SAAS;AACtC8C,wBAAoB3E,KAAK8C,MAAMb,OAAOF,KAAAA;SACjC;AACLkD,qBAAiBjF,KAAK8C,MAAMb,OAAOF,KAAAA;;AAEvC;AAEe,IAAMwD,cAAN,cAA0BC,QAAAA;EAoCvCC,YAAYC,KAAK;AACf,UAAK;AAEL,SAAKC,WAAW;AAChB,SAAK1F,UAAU2F;AACf,SAAKC,SAASD;AACd,SAAKtB,QAAQsB;AACb,SAAKE,YAAYF;AACjB,SAAKf,QAAQe;AACb,SAAKG,UAAUH;AACf,SAAKI,YAAYJ;AACjB,SAAKvB,aAAa;AAClB,SAAK4B,iBAAiB;AACtB,SAAKC,gBAAgBN;AAErB,QAAIF,KAAK;AACPS,aAAOC,OAAO,MAAMV,GAAAA;;EAExB;EAEAW,oBAAoBC,WAAWC,WAAW;AACxC,UAAMtG,UAAU,KAAKA;AACrB,SAAKA,QAAQuB,WAAWvB,QAAQwB,2BAA2B,eAAe,CAACxB,QAAQqB,WAAW,CAAC,KAAK2E,gBAAgB;AAClH,YAAMtD,OAAO1C,QAAQuG,WAAW,KAAKlC,QAAQ,KAAKwB;AAClDW,iCAA2B,KAAKV,SAAS9F,SAASqG,WAAW3D,MAAM4D,SAAAA;AACnE,WAAKN,iBAAiB;;EAE1B;EAEA,IAAIrE,OAAOA,QAAQ;AACjB,SAAKmE,UAAUnE;AACf,WAAO,KAAKoE;AACZ,WAAO,KAAKnB;AACZ,SAAKoB,iBAAiB;EACxB;EAEA,IAAIrE,SAAS;AACX,WAAO,KAAKmE;EACd;EAEA,IAAIb,WAAW;AACb,WAAO,KAAKc,cAAc,KAAKA,YAAYU,iBAAiB,MAAM,KAAKzG,QAAQ4B,OAAO;EACxF;EAMA8E,QAAQ;AACN,UAAMzB,WAAW,KAAKA;AACtB,UAAMtD,SAAS,KAAKA;AACpB,WAAOsD,SAASlD,UAAUJ,OAAOsD,SAAS,CAAA,EAAGjD,KAAK;EACpD;EAMA2E,OAAO;AACL,UAAM1B,WAAW,KAAKA;AACtB,UAAMtD,SAAS,KAAKA;AACpB,UAAMG,QAAQmD,SAASlD;AACvB,WAAOD,SAASH,OAAOsD,SAASnD,QAAQ,CAAA,EAAGI,GAAG;EAChD;EASA0E,YAAY1D,OAAO2D,UAAU;AAC3B,UAAM7G,UAAU,KAAKA;AACrB,UAAM8G,QAAQ5D,MAAM2D,QAAS;AAC7B,UAAMlF,SAAS,KAAKA;AACpB,UAAMsD,WAAW8B,eAAe,MAAM;MAACF;MAAU7E,OAAO8E;MAAO5E,KAAK4E;IAAK,CAAA;AAEzE,QAAI,CAAC7B,SAASlD,QAAQ;AACpB;;AAGF,UAAMiF,SAAS,CAAA;AACf,UAAMC,eAAe3C,wBAAwBtE,OAAAA;AAC7C,QAAIiD,GAAGN;AACP,SAAKM,IAAI,GAAGN,OAAOsC,SAASlD,QAAQkB,IAAIN,MAAM,EAAEM,GAAG;AACjD,YAAM,EAACjB,OAAOE,IAAAA,IAAO+C,SAAShC,CAAE;AAChC,YAAMiE,KAAKvF,OAAOK,KAAM;AACxB,YAAMmF,KAAKxF,OAAOO,GAAI;AACtB,UAAIgF,OAAOC,IAAI;AACbH,eAAOI,KAAKF,EAAAA;AACZ;;AAEF,YAAMG,IAAI/E,KAAKgF,KAAKR,QAAQI,GAAGL,QAAAA,MAAcM,GAAGN,QAAAA,IAAYK,GAAGL,QAAAA,EAAQ;AACvE,YAAMU,eAAeN,aAAaC,IAAIC,IAAIE,GAAGrH,QAAQqB,OAAO;AAC5DkG,mBAAaV,QAAAA,IAAY3D,MAAM2D,QAAS;AACxCG,aAAOI,KAAKG,YAAAA;IACd;AACA,WAAOP,OAAOjF,WAAW,IAAIiF,OAAO,CAAA,IAAKA;EAC3C;EAgBApE,YAAY7C,KAAK6B,SAASC,QAAQ;AAChC,UAAMqD,gBAAgBjB,kBAAkB,IAAI;AAC5C,WAAOiB,cAAcnF,KAAK,MAAM6B,SAASC,MAAAA;EAC3C;EASA8C,KAAK5E,KAAKiC,OAAOF,OAAO;AACtB,UAAMmD,WAAW,KAAKA;AACtB,UAAMC,gBAAgBjB,kBAAkB,IAAI;AAC5C,QAAIvB,OAAO,KAAK2B;AAEhBrC,YAAQA,SAAS;AACjBF,YAAQA,SAAU,KAAKH,OAAOI,SAASC;AAEvC,eAAWJ,WAAWqD,UAAU;AAC9BvC,cAAQwC,cAAcnF,KAAK,MAAM6B,SAAS;QAACI;QAAOE,KAAKF,QAAQF,QAAQ;MAAC,CAAA;IAC1E;AACA,WAAO,CAAC,CAACY;EACX;EASA2C,KAAKtF,KAAKsG,WAAWrE,OAAOF,OAAO;AACjC,UAAM9B,UAAU,KAAKA,WAAW,CAAA;AAChC,UAAM2B,SAAS,KAAKA,UAAU,CAAA;AAE9B,QAAIA,OAAOI,UAAU/B,QAAQY,aAAa;AACxCb,UAAIyH,KAAI;AAERnC,WAAKtF,KAAK,MAAMiC,OAAOF,KAAAA;AAEvB/B,UAAI0H,QAAO;;AAGb,QAAI,KAAK/B,UAAU;AAEjB,WAAKM,iBAAiB;AACtB,WAAKpB,QAAQe;;EAEjB;AACF;AAxME,cAFmBL,aAEZoC,MAAK;AAKZ,cAPmBpC,aAOZqC,YAAW;EAChBvH,gBAAgB;EAChBE,YAAY,CAAA;EACZE,kBAAkB;EAClBE,iBAAiB;EACjBE,aAAa;EACbgH,iBAAiB;EACjBpG,wBAAwB;EACxBqG,MAAM;EACNtB,UAAU;EACVlF,SAAS;EACTE,SAAS;;AAMX,cAxBmB+D,aAwBZwC,iBAAgB;EACrBC,iBAAiB;EACjBjH,aAAa;;AAIf,cA9BmBwE,aA8BZ0C,eAAc;EACnBC,aAAa;EACbC,YAAY,CAACC,SAASA,SAAS,gBAAgBA,SAAS;;ACxQ5D,SAASC,UAAQC,IAAkBC,KAAaC,MAAiBC,kBAA4B;AAC3F,QAAMxI,UAAUqI,GAAGrI;AACnB,QAAM,EAAC,CAACuI,IAAK,GAAEzB,MAAAA,IAASuB,GAAGI,SAAS;IAACF;KAAOC,gBAAAA;AAE5C,SAAQlG,KAAKgF,IAAIgB,MAAMxB,KAAAA,IAAS9G,QAAQ0I,SAAS1I,QAAQ2I;AAC3D;AAIe,IAAMC,eAAN,cAA2BrD,QAAAA;EAIxCsD;EACAzF;EACA0F;EAuBAtD,YAAYC,KAAK;AACf,UAAK;AAEL,SAAKzF,UAAU2F;AACf,SAAKkD,SAASlD;AACd,SAAKvC,OAAOuC;AACZ,SAAKmD,OAAOnD;AAEZ,QAAIF,KAAK;AACPS,aAAOC,OAAO,MAAMV,GAAAA;;EAExB;EAEA2C,QAAQW,QAAgBC,QAAgBR,kBAA4B;AAClE,UAAMxI,UAAU,KAAKA;AACrB,UAAM,EAACkB,GAAGC,EAAAA,IAAK,KAAKsH,SAAS;MAAC;MAAK;OAAMD,gBAAAA;AACzC,WAASlG,KAAK2G,IAAIF,SAAS7H,GAAG,CAAA,IAAKoB,KAAK2G,IAAID,SAAS7H,GAAG,CAAA,IAAMmB,KAAK2G,IAAIjJ,QAAQ2I,YAAY3I,QAAQ0I,QAAQ,CAAA;EAC7G;EAEAQ,SAASH,QAAgBP,kBAA4B;AACnD,WAAOJ,UAAQ,MAAMW,QAAQ,KAAKP,gBAAAA;EACpC;EAEAW,SAASH,QAAgBR,kBAA4B;AACnD,WAAOJ,UAAQ,MAAMY,QAAQ,KAAKR,gBAAAA;EACpC;EAEAY,eAAeZ,kBAA4B;AACzC,UAAM,EAACtH,GAAGC,EAAAA,IAAK,KAAKsH,SAAS;MAAC;MAAK;OAAMD,gBAAAA;AACzC,WAAO;MAACtH;MAAGC;IAAC;EACd;EAEAkI,KAAKrJ,SAAqD;AACxDA,cAAUA,WAAW,KAAKA,WAAW,CAAA;AACrC,QAAI0I,SAAS1I,QAAQ0I,UAAU;AAC/BA,aAASpG,KAAKC,IAAImG,QAAQA,UAAU1I,QAAQsJ,eAAe,CAAA;AAC3D,UAAM1I,cAAc8H,UAAU1I,QAAQY,eAAe;AACrD,YAAQ8H,SAAS9H,eAAe;EAClC;EAEAyE,KAAKtF,KAA+BwJ,MAAiB;AACnD,UAAMvJ,UAAU,KAAKA;AAErB,QAAI,KAAKoD,QAAQpD,QAAQ0I,SAAS,OAAO,CAACc,eAAe,MAAMD,MAAM,KAAKF,KAAKrJ,OAAAA,IAAW,CAAI,GAAA;AAC5F;;AAGFD,QAAIc,cAAcb,QAAQc;AAC1Bf,QAAIY,YAAYX,QAAQY;AACxBb,QAAI0J,YAAYzJ,QAAQ+H;AACxB2B,cAAU3J,KAAKC,SAAS,KAAKkB,GAAG,KAAKC,CAAC;EACxC;EAEAwI,WAAW;AACT,UAAM3J,UAAU,KAAKA,WAAW,CAAA;AAEhC,WAAOA,QAAQ0I,SAAS1I,QAAQ2I;EAClC;AACF;AArFE,cAFmBC,cAEZlB,MAAK;;;;AASZ,cAXmBkB,cAWZjB,YAAW;EAChB/G,aAAa;EACb+H,WAAW;EACXiB,kBAAkB;EAClBN,aAAa;EACbO,YAAY;EACZnB,QAAQ;EACRoB,UAAU;;;;;AAMZ,cAxBmBlB,cAwBZd,iBAAgB;EACrBC,iBAAiB;EACjBjH,aAAa;;AC/BjB,SAASiJ,aAAaC,KAAKxB,kBAAkB;AAC3C,QAAM,EAACtH,GAAGC,GAAG8I,MAAMC,OAAOC,OAAAA,IAAmCH,IAAIvB,SAAS;IAAC;IAAK;IAAK;IAAQ;IAAS;KAAWD,gBAAAA;AAEjH,MAAI4B,MAAMC,OAAOC,KAAKC,QAAQC;AAE9B,MAAIR,IAAIS,YAAY;AAClBD,WAAOL,SAAS;AAChBC,WAAO9H,KAAKE,IAAItB,GAAG+I,IAAAA;AACnBI,YAAQ/H,KAAKC,IAAIrB,GAAG+I,IAAAA;AACpBK,UAAMnJ,IAAIqJ;AACVD,aAASpJ,IAAIqJ;SACR;AACLA,WAAON,QAAQ;AACfE,WAAOlJ,IAAIsJ;AACXH,YAAQnJ,IAAIsJ;AACZF,UAAMhI,KAAKE,IAAIrB,GAAG8I,IAAAA;AAClBM,aAASjI,KAAKC,IAAIpB,GAAG8I,IAAAA;;AAGvB,SAAO;IAACG;IAAME;IAAKD;IAAOE;EAAM;AAClC;AAEA,SAASG,YAAYtH,OAAM0D,OAAOtE,KAAKD,KAAK;AAC1C,SAAOa,QAAO,IAAIuH,YAAY7D,OAAOtE,KAAKD,GAAI;AAChD;AAEA,SAASqI,iBAAiBZ,KAAKa,MAAMC,MAAM;AACzC,QAAMhE,QAAQkD,IAAIhK,QAAQY;AAC1B,QAAMwC,QAAO4G,IAAIe;AACjB,QAAMC,IAAIC,OAAOnE,KAAAA;AAEjB,SAAO;IACLO,GAAGqD,YAAYtH,MAAKkH,KAAKU,EAAEV,KAAK,GAAGQ,IAAAA;IACnCI,GAAGR,YAAYtH,MAAKiH,OAAOW,EAAEX,OAAO,GAAGQ,IAAAA;IACvCM,GAAGT,YAAYtH,MAAKmH,QAAQS,EAAET,QAAQ,GAAGO,IAAAA;IACzCM,GAAGV,YAAYtH,MAAKgH,MAAMY,EAAEZ,MAAM,GAAGS,IAAAA;EACvC;AACF;AAEA,SAASQ,kBAAkBrB,KAAKa,MAAMC,MAAM;AAC1C,QAAM,EAACQ,mBAAkB,IAAItB,IAAIvB,SAAS;IAAC;EAAqB,CAAA;AAChE,QAAM3B,QAAQkD,IAAIhK,QAAQuL;AAC1B,QAAMP,IAAIQ,cAAc1E,KAAAA;AACxB,QAAM2E,OAAOnJ,KAAKE,IAAIqI,MAAMC,IAAAA;AAC5B,QAAM1H,QAAO4G,IAAIe;AAIjB,QAAMW,eAAeJ,sBAAsBK,SAAS7E,KAAAA;AAEpD,SAAO;IACL8E,SAASlB,YAAY,CAACgB,gBAAgBtI,MAAKkH,OAAOlH,MAAKgH,MAAMY,EAAEY,SAAS,GAAGH,IAAAA;IAC3EI,UAAUnB,YAAY,CAACgB,gBAAgBtI,MAAKkH,OAAOlH,MAAKiH,OAAOW,EAAEa,UAAU,GAAGJ,IAAAA;IAC9EK,YAAYpB,YAAY,CAACgB,gBAAgBtI,MAAKmH,UAAUnH,MAAKgH,MAAMY,EAAEc,YAAY,GAAGL,IAAAA;IACpFM,aAAarB,YAAY,CAACgB,gBAAgBtI,MAAKmH,UAAUnH,MAAKiH,OAAOW,EAAEe,aAAa,GAAGN,IAAAA;EACzF;AACF;AAEA,SAASO,cAAchC,KAAK;AAC1B,QAAMiC,SAASlC,aAAaC,GAAAA;AAC5B,QAAME,QAAQ+B,OAAO5B,QAAQ4B,OAAO7B;AACpC,QAAMD,SAAS8B,OAAO1B,SAAS0B,OAAO3B;AACtC,QAAM4B,SAAStB,iBAAiBZ,KAAKE,QAAQ,GAAGC,SAAS,CAAA;AACzD,QAAMzB,SAAS2C,kBAAkBrB,KAAKE,QAAQ,GAAGC,SAAS,CAAA;AAE1D,SAAO;IACLgC,OAAO;MACLjL,GAAG+K,OAAO7B;MACVjJ,GAAG8K,OAAO3B;MACV8B,GAAGlC;MACHmC,GAAGlC;MACHzB;IACF;IACA4D,OAAO;MACLpL,GAAG+K,OAAO7B,OAAO8B,OAAOd;MACxBjK,GAAG8K,OAAO3B,MAAM4B,OAAO7E;MACvB+E,GAAGlC,QAAQgC,OAAOd,IAAIc,OAAOhB;MAC7BmB,GAAGlC,SAAS+B,OAAO7E,IAAI6E,OAAOf;MAC9BzC,QAAQ;QACNkD,SAAStJ,KAAKC,IAAI,GAAGmG,OAAOkD,UAAUtJ,KAAKC,IAAI2J,OAAO7E,GAAG6E,OAAOd,CAAC,CAAA;QACjES,UAAUvJ,KAAKC,IAAI,GAAGmG,OAAOmD,WAAWvJ,KAAKC,IAAI2J,OAAO7E,GAAG6E,OAAOhB,CAAC,CAAA;QACnEY,YAAYxJ,KAAKC,IAAI,GAAGmG,OAAOoD,aAAaxJ,KAAKC,IAAI2J,OAAOf,GAAGe,OAAOd,CAAC,CAAA;QACvEW,aAAazJ,KAAKC,IAAI,GAAGmG,OAAOqD,cAAczJ,KAAKC,IAAI2J,OAAOf,GAAGe,OAAOhB,CAAC,CAAA;MAC3E;IACF;EACF;AACF;AAEA,SAAS9C,QAAQ4B,KAAK9I,GAAGC,GAAGqH,kBAAkB;AAC5C,QAAM+D,QAAQrL,MAAM;AACpB,QAAMsL,QAAQrL,MAAM;AACpB,QAAMsL,WAAWF,SAASC;AAC1B,QAAMP,SAASjC,OAAO,CAACyC,YAAY1C,aAAaC,KAAKxB,gBAAAA;AAErD,SAAOyD,WACHM,SAASG,WAAWxL,GAAG+K,OAAO7B,MAAM6B,OAAO5B,KAAK,OAChDmC,SAASE,WAAWvL,GAAG8K,OAAO3B,KAAK2B,OAAO1B,MAAM;AACtD;AAEA,SAASoC,UAAUjE,QAAQ;AACzB,SAAOA,OAAOkD,WAAWlD,OAAOmD,YAAYnD,OAAOoD,cAAcpD,OAAOqD;AAC1E;AAOA,SAASa,kBAAkB7M,KAAK8M,MAAM;AACpC9M,MAAI8M,KAAKA,KAAK3L,GAAG2L,KAAK1L,GAAG0L,KAAKT,GAAGS,KAAKR,CAAC;AACzC;AAEA,SAASS,YAAYD,MAAME,QAAQC,UAAU,CAAA,GAAI;AAC/C,QAAM9L,IAAI2L,KAAK3L,MAAM8L,QAAQ9L,IAAI,CAAC6L,SAAS;AAC3C,QAAM5L,IAAI0L,KAAK1L,MAAM6L,QAAQ7L,IAAI,CAAC4L,SAAS;AAC3C,QAAMX,KAAKS,KAAK3L,IAAI2L,KAAKT,MAAMY,QAAQ9L,IAAI8L,QAAQZ,IAAIW,SAAS,KAAK7L;AACrE,QAAMmL,KAAKQ,KAAK1L,IAAI0L,KAAKR,MAAMW,QAAQ7L,IAAI6L,QAAQX,IAAIU,SAAS,KAAK5L;AACrE,SAAO;IACLD,GAAG2L,KAAK3L,IAAIA;IACZC,GAAG0L,KAAK1L,IAAIA;IACZiL,GAAGS,KAAKT,IAAIA;IACZC,GAAGQ,KAAKR,IAAIA;IACZ3D,QAAQmE,KAAKnE;EACf;AACF;AAEe,IAAMuE,aAAN,cAAyB1H,QAAAA;EAuBtCC,YAAYC,KAAK;AACf,UAAK;AAEL,SAAKzF,UAAU2F;AACf,SAAK8E,aAAa9E;AAClB,SAAKsE,OAAOtE;AACZ,SAAKuE,QAAQvE;AACb,SAAKwE,SAASxE;AACd,SAAKuH,gBAAgBvH;AAErB,QAAIF,KAAK;AACPS,aAAOC,OAAO,MAAMV,GAAAA;;EAExB;EAEAJ,KAAKtF,KAAK;AACR,UAAM,EAACmN,eAAelN,SAAS,EAACc,aAAaiH,gBAAAA,EAAgB,IAAI;AACjE,UAAM,EAACuE,OAAOH,MAAAA,IAASH,cAAc,IAAI;AACzC,UAAMmB,cAAcR,UAAUR,MAAMzD,MAAM,IAAI0E,qBAAqBR;AAEnE7M,QAAIyH,KAAI;AAER,QAAI2E,MAAMC,MAAME,MAAMF,KAAKD,MAAME,MAAMC,MAAMD,GAAG;AAC9CtM,UAAIoF,UAAS;AACbgI,kBAAYpN,KAAK+M,YAAYX,OAAOe,eAAeZ,KAAAA,CAAAA;AACnDvM,UAAIsN,KAAI;AACRF,kBAAYpN,KAAK+M,YAAYR,OAAO,CAACY,eAAef,KAAAA,CAAAA;AACpDpM,UAAI0J,YAAY3I;AAChBf,UAAI8H,KAAK,SAAA;;AAGX9H,QAAIoF,UAAS;AACbgI,gBAAYpN,KAAK+M,YAAYR,OAAOY,aAAAA,CAAAA;AACpCnN,QAAI0J,YAAY1B;AAChBhI,QAAI8H,KAAI;AAER9H,QAAI0H,QAAO;EACb;EAEAW,QAAQW,QAAQC,QAAQR,kBAAkB;AACxC,WAAOJ,QAAQ,MAAMW,QAAQC,QAAQR,gBAAAA;EACvC;EAEAU,SAASH,QAAQP,kBAAkB;AACjC,WAAOJ,QAAQ,MAAMW,QAAQ,MAAMP,gBAAAA;EACrC;EAEAW,SAASH,QAAQR,kBAAkB;AACjC,WAAOJ,QAAQ,MAAM,MAAMY,QAAQR,gBAAAA;EACrC;EAEAY,eAAeZ,kBAAkB;AAC/B,UAAM,EAACtH,GAAGC,GAAG8I,MAAMQ,WAAU,IAA6B,KAAKhC,SAAS;MAAC;MAAK;MAAK;MAAQ;OAAeD,gBAAAA;AAC1G,WAAO;MACLtH,GAAGuJ,cAAcvJ,IAAI+I,QAAQ,IAAI/I;MACjCC,GAAGsJ,aAAatJ,KAAKA,IAAI8I,QAAQ;IACnC;EACF;EAEAN,SAASpB,MAAM;AACb,WAAOA,SAAS,MAAM,KAAK2B,QAAQ,IAAI,KAAKC,SAAS;EACvD;AACF;AAnFE,cAFmB8C,YAEZvF,MAAK;AAKZ,cAPmBuF,YAOZtF,YAAW;EAChBoD,eAAe;EACfnK,aAAa;EACb2K,cAAc;EACd2B,eAAe;EACfrD,YAAYlE;;AAMd,cAlBmBsH,YAkBZnF,iBAAgB;EACrBC,iBAAiB;EACjBjH,aAAa;;AG9JV,SAASwM,UAAUC,MAAMC,QAAQC,UAAU;AAChD,QAAMC,WAAWH,KAAKG;AACtB,QAAMC,SAASJ,KAAKI;AACpB,QAAMC,UAAUJ,OAAOG;AACvB,QAAME,QAAQ,CAAA;AAEd,aAAWC,WAAWJ,UAAU;AAC9B,QAAI,EAACK,OAAOC,IAAAA,IAAOF;AACnBE,UAAMC,gBAAgBF,OAAOC,KAAKL,MAAAA;AAElC,UAAMO,SAASC,WAAWV,UAAUE,OAAOI,KAAAA,GAAQJ,OAAOK,GAAAA,GAAMF,QAAQM,IAAI;AAE5E,QAAI,CAACZ,OAAOE,UAAU;AAGpBG,YAAMQ,KAAK;QACTC,QAAQR;QACRN,QAAQU;QACRH,OAAOJ,OAAOI,KAAM;QACpBC,KAAKL,OAAOK,GAAI;MAClB,CAAA;AACA;;AAIF,UAAMO,iBAAiBC,eAAehB,QAAQU,MAAAA;AAE9C,eAAWO,OAAOF,gBAAgB;AAChC,YAAMG,YAAYP,WAAWV,UAAUG,QAAQa,IAAIV,KAAK,GAAGH,QAAQa,IAAIT,GAAG,GAAGS,IAAIL,IAAI;AACrF,YAAMO,cAAcC,cAAcd,SAASH,QAAQe,SAAAA;AAEnD,iBAAWG,cAAcF,aAAa;AACpCd,cAAMQ,KAAK;UACTC,QAAQO;UACRrB,QAAQiB;UACRV,OAAO;YACL,CAACN,QAAAA,GAAWqB,SAASZ,QAAQQ,WAAW,SAASK,KAAKC,GAAG;UAC3D;UACAhB,KAAK;YACH,CAACP,QAAAA,GAAWqB,SAASZ,QAAQQ,WAAW,OAAOK,KAAKE,GAAG;UACzD;QACF,CAAA;MACF;IACF;EACF;AACA,SAAOpB;AACT;AAEO,SAASM,WAAWV,UAAUyB,OAAOC,MAAMf,MAAM;AACtD,MAAIA,MAAM;AACR;;AAEF,MAAIL,QAAQmB,MAAMzB,QAAS;AAC3B,MAAIO,MAAMmB,KAAK1B,QAAS;AAExB,MAAIA,aAAa,SAAS;AACxBM,YAAQqB,gBAAgBrB,KAAAA;AACxBC,UAAMoB,gBAAgBpB,GAAAA;;AAExB,SAAO;IAACP;IAAUM;IAAOC;EAAG;AAC9B;AAEO,SAASqB,oBAAoBC,UAAU/B,MAAM;AAClD,QAAM,EAACgC,IAAI,MAAMC,IAAI,KAAI,IAAIF,YAAY,CAAA;AACzC,QAAMG,aAAalC,KAAKI;AACxB,QAAMA,SAAS,CAAA;AACfJ,OAAKG,SAASgC,QAAQ,CAAC,EAAC3B,OAAOC,IAAG,MAAM;AACtCA,UAAMC,gBAAgBF,OAAOC,KAAKyB,UAAAA;AAClC,UAAMP,QAAQO,WAAW1B,KAAM;AAC/B,UAAMoB,OAAOM,WAAWzB,GAAI;AAC5B,QAAIwB,MAAM,MAAM;AACd7B,aAAOU,KAAK;QAACkB,GAAGL,MAAMK;QAAGC;MAAC,CAAA;AAC1B7B,aAAOU,KAAK;QAACkB,GAAGJ,KAAKI;QAAGC;MAAC,CAAA;eAChBD,MAAM,MAAM;AACrB5B,aAAOU,KAAK;QAACkB;QAAGC,GAAGN,MAAMM;MAAC,CAAA;AAC1B7B,aAAOU,KAAK;QAACkB;QAAGC,GAAGL,KAAKK;MAAC,CAAA;;EAE7B,CAAA;AACA,SAAO7B;AACT;AAEO,SAASM,gBAAgBF,OAAOC,KAAKL,QAAQ;AAClD,SAAMK,MAAMD,OAAOC,OAAO;AACxB,UAAM2B,QAAQhC,OAAOK,GAAI;AACzB,QAAI,CAAC4B,MAAMD,MAAMJ,CAAC,KAAK,CAACK,MAAMD,MAAMH,CAAC,GAAG;AACtC;;EAEJ;AACA,SAAOxB;AACT;AAEA,SAASc,SAASe,GAAGC,GAAGC,MAAMC,IAAI;AAChC,MAAIH,KAAKC,GAAG;AACV,WAAOE,GAAGH,EAAEE,IAAAA,GAAOD,EAAEC,IAAK,CAAA;;AAE5B,SAAOF,IAAIA,EAAEE,IAAK,IAAGD,IAAIA,EAAEC,IAAK,IAAG;AACrC;ACnFO,SAASE,oBAAoBX,UAAU/B,MAAM;AAClD,MAAII,SAAS,CAAA;AACb,MAAIuC,QAAQ;AAEZ,MAAIC,QAAQb,QAAW,GAAA;AACrBY,YAAQ;AAERvC,aAAS2B;SACJ;AACL3B,aAAS0B,oBAAoBC,UAAU/B,IAAAA;;AAGzC,SAAOI,OAAOyC,SAAS,IAAIC,YAAY;IACrC1C;IACA2C,SAAS;MAACC,SAAS;IAAC;IACpBL;IACAM,WAAWN;EACb,CAAA,IAAK;AACP;AAEO,SAASO,iBAAiBnC,QAAQ;AACvC,SAAOA,UAAUA,OAAOoC,SAAS;AACnC;AC5BO,SAASC,eAAeC,SAASC,QAAOC,WAAW;AACxD,QAAMxC,SAASsC,QAAQC,MAAM;AAC7B,MAAIH,QAAOpC,OAAOoC;AAClB,QAAMK,UAAU;IAACF;EAAM;AACvB,MAAIrD;AAEJ,MAAI,CAACsD,WAAW;AACd,WAAOJ;;AAGT,SAAOA,UAAS,SAASK,QAAQC,QAAQN,KAAAA,MAAU,IAAI;AACrD,QAAI,CAACO,eAASP,KAAO,GAAA;AACnB,aAAOA;;AAGTlD,aAASoD,QAAQF,KAAK;AACtB,QAAI,CAAClD,QAAQ;AACX,aAAO;;AAGT,QAAIA,OAAO0D,SAAS;AAClB,aAAOR;;AAGTK,YAAQ1C,KAAKqC,KAAAA;AACbA,IAAAA,QAAOlD,OAAOkD;EAChB;AAEA,SAAO;AACT;AAOO,SAASS,YAAY5D,MAAMsD,QAAOO,OAAO;AAE9C,QAAMV,QAAOW,gBAAgB9D,IAAAA;AAE7B,MAAI+D,SAASZ,KAAO,GAAA;AAClB,WAAOd,MAAMc,MAAKa,KAAK,IAAI,QAAQb;;AAGrC,MAAIlD,SAASgE,WAAWd,KAAAA;AAExB,MAAIO,eAASzD,MAAWuB,KAAAA,KAAK0C,MAAMjE,MAAAA,MAAYA,QAAQ;AACrD,WAAOkE,kBAAkBhB,MAAK,CAAE,GAAEG,QAAOrD,QAAQ4D,KAAAA;;AAGnD,SAAO;IAAC;IAAU;IAAS;IAAO;IAAS;IAASJ,QAAQN,KAAAA,KAAS,KAAKA;AAC5E;AAEA,SAASgB,kBAAkBC,SAASd,QAAOrD,QAAQ4D,OAAO;AACxD,MAAIO,YAAY,OAAOA,YAAY,KAAK;AACtCnE,aAASqD,SAAQrD;;AAGnB,MAAIA,WAAWqD,UAASrD,SAAS,KAAKA,UAAU4D,OAAO;AACrD,WAAO;;AAGT,SAAO5D;AACT;AAOO,SAASoE,gBAAgBlB,OAAMmB,OAAO;AAC3C,MAAIC,QAAQ;AACZ,MAAIpB,UAAS,SAAS;AACpBoB,YAAQD,MAAME;aACLrB,UAAS,OAAO;AACzBoB,YAAQD,MAAMG;aACLV,SAASZ,KAAO,GAAA;AAEzBoB,YAAQD,MAAMI,iBAAiBvB,MAAKa,KAAK;aAChCM,MAAMK,cAAc;AAC7BJ,YAAQD,MAAMK,aAAY;;AAE5B,SAAOJ;AACT;AAQO,SAASK,gBAAgBzB,OAAMmB,OAAOO,YAAY;AACvD,MAAIb;AAEJ,MAAIb,UAAS,SAAS;AACpBa,YAAQa;aACC1B,UAAS,OAAO;AACzBa,YAAQM,MAAMvB,QAAQ+B,UAAUR,MAAM5C,MAAM4C,MAAM7C;aACzCsC,SAASZ,KAAO,GAAA;AAEzBa,YAAQb,MAAKa;SACR;AACLA,YAAQM,MAAMS,aAAY;;AAE5B,SAAOf;AACT;AAKA,SAASF,gBAAgB9D,MAAM;AAC7B,QAAM+C,UAAU/C,KAAK+C;AACrB,QAAMiC,aAAajC,QAAQI;AAC3B,MAAIA,QAAO8B,eAAeD,cAAcA,WAAW/E,QAAQ+E,UAAAA;AAE3D,MAAI7B,UAAS+B,QAAW;AACtB/B,IAAAA,QAAO,CAAC,CAACJ,QAAQoC;;AAGnB,MAAIhC,UAAS,SAASA,UAAS,MAAM;AACnC,WAAO;;AAGT,MAAIA,UAAS,MAAM;AACjB,WAAO;;AAET,SAAOA;AACT;AC1HO,SAASiC,gBAAgBrE,QAAQ;AACtC,QAAM,EAACuD,OAAOhB,OAAAA,QAAOtD,KAAAA,IAAQe;AAC7B,QAAMX,SAAS,CAAA;AACf,QAAMD,WAAWH,KAAKG;AACtB,QAAMkF,eAAerF,KAAKI;AAC1B,QAAMkF,aAAaC,cAAcjB,OAAOhB,MAAAA;AACxCgC,aAAWxE,KAAK4B,oBAAoB;IAACV,GAAG;IAAMC,GAAGqC,MAAME;KAASxE,IAAAA,CAAAA;AAEhE,WAASwF,IAAI,GAAGA,IAAIrF,SAAS0C,QAAQ2C,KAAK;AACxC,UAAMjF,UAAUJ,SAASqF,CAAE;AAC3B,aAASC,IAAIlF,QAAQC,OAAOiF,KAAKlF,QAAQE,KAAKgF,KAAK;AACjDC,qBAAetF,QAAQiF,aAAaI,CAAAA,GAAIH,UAAAA;IAC1C;EACF;AACA,SAAO,IAAIxC,YAAY;IAAC1C;IAAQ2C,SAAS,CAAA;EAAE,CAAA;AAC7C;AAOA,SAASwC,cAAcjB,OAAOhB,QAAO;AACnC,QAAMqC,QAAQ,CAAA;AACd,QAAMC,QAAQtB,MAAMuB,wBAAwB,MAAA;AAE5C,WAASL,IAAI,GAAGA,IAAII,MAAM/C,QAAQ2C,KAAK;AACrC,UAAMM,QAAOF,MAAMJ,CAAE;AACrB,QAAIM,MAAKxC,UAAUA,QAAO;AACxB;;AAEF,QAAI,CAACwC,MAAKC,QAAQ;AAChBJ,YAAMK,QAAQF,MAAKG,OAAO;;EAE9B;AACA,SAAON;AACT;AAOA,SAASD,eAAetF,QAAQ8F,aAAaZ,YAAY;AACvD,QAAMa,YAAY,CAAA;AAClB,WAASV,IAAI,GAAGA,IAAIH,WAAWzC,QAAQ4C,KAAK;AAC1C,UAAMzF,OAAOsF,WAAWG,CAAE;AAC1B,UAAM,EAAC9D,OAAOC,MAAMQ,MAAAA,IAASgE,UAAUpG,MAAMkG,aAAa,GAAA;AAE1D,QAAI,CAAC9D,SAAUT,SAASC,MAAO;AAC7B;;AAEF,QAAID,OAAO;AAGTwE,gBAAUH,QAAQ5D,KAAAA;WACb;AACLhC,aAAOU,KAAKsB,KAAAA;AACZ,UAAI,CAACR,MAAM;AAET;;;EAGN;AACAxB,SAAOU,KAAQqF,GAAAA,SAAAA;AACjB;AAQA,SAASC,UAAUpG,MAAMkG,aAAahG,UAAU;AAC9C,QAAMkC,QAAQpC,KAAKqG,YAAYH,aAAahG,QAAAA;AAC5C,MAAI,CAACkC,OAAO;AACV,WAAO,CAAA;;AAGT,QAAMkE,aAAalE,MAAMlC,QAAS;AAClC,QAAMC,WAAWH,KAAKG;AACtB,QAAM+B,aAAalC,KAAKI;AACxB,MAAIuB,QAAQ;AACZ,MAAIC,OAAO;AACX,WAAS4D,IAAI,GAAGA,IAAIrF,SAAS0C,QAAQ2C,KAAK;AACxC,UAAMjF,UAAUJ,SAASqF,CAAE;AAC3B,UAAMe,aAAarE,WAAW3B,QAAQC,KAAK,EAAEN,QAAS;AACtD,UAAMsG,YAAYtE,WAAW3B,QAAQE,GAAG,EAAEP,QAAS;AACnD,QAAIuG,WAAWH,YAAYC,YAAYC,SAAY,GAAA;AACjD7E,cAAQ2E,eAAeC;AACvB3E,aAAO0E,eAAeE;AACtB;;EAEJ;AACA,SAAO;IAAC7E;IAAOC;IAAMQ;EAAK;AAC5B;AC1GO,IAAMsE,YAAN,MAAMA;EACXC,YAAYC,MAAM;AAChB,SAAK5E,IAAI4E,KAAK5E;AACd,SAAKC,IAAI2E,KAAK3E;AACd,SAAK4E,SAASD,KAAKC;EACrB;EAEAC,YAAYC,KAAKpG,QAAQiG,MAAM;AAC7B,UAAM,EAAC5E,GAAGC,GAAG4E,OAAM,IAAI;AACvBlG,aAASA,UAAU;MAACH,OAAO;MAAGC,KAAKuG;IAAG;AACtCD,QAAIE,IAAIjF,GAAGC,GAAG4E,QAAQlG,OAAOF,KAAKE,OAAOH,OAAO,IAAI;AACpD,WAAO,CAACoG,KAAKjG;EACf;EAEA0F,YAAYjE,OAAO;AACjB,UAAM,EAACJ,GAAGC,GAAG4E,OAAM,IAAI;AACvB,UAAMK,QAAQ9E,MAAM8E;AACpB,WAAO;MACLlF,GAAGA,IAAIR,KAAK2F,IAAID,KAASL,IAAAA;MACzB5E,GAAGA,IAAIT,KAAK4F,IAAIF,KAASL,IAAAA;MACzBK;IACF;EACF;AACF;ACdO,SAASG,WAAWtG,QAAQ;AACjC,QAAM,EAACuG,OAAOnE,MAAAA,OAAMnD,KAAAA,IAAQe;AAE5B,MAAI2C,eAASP,KAAO,GAAA;AAClB,WAAOoE,eAAeD,OAAOnE,KAAAA;;AAG/B,MAAIA,UAAS,SAAS;AACpB,WAAOiC,gBAAgBrE,MAAAA;;AAGzB,MAAIoC,UAAS,SAAS;AACpB,WAAO;;AAGT,QAAMpB,WAAWyF,gBAAgBzG,MAAAA;AAEjC,MAAIgB,oBAAoB2E,WAAW;AACjC,WAAO3E;;AAGT,SAAOW,oBAAoBX,UAAU/B,IAAAA;AACvC;AAMA,SAASuH,eAAeD,OAAOhE,QAAO;AACpC,QAAMwC,QAAOwB,MAAMG,eAAenE,MAAAA;AAClC,QAAMK,UAAUmC,SAAQwB,MAAMI,iBAAiBpE,MAAAA;AAC/C,SAAOK,UAAUmC,MAAKG,UAAU;AAClC;AAEA,SAASuB,gBAAgBzG,QAAQ;AAC/B,QAAMuD,QAAQvD,OAAOuD,SAAS,CAAA;AAE9B,MAAIA,MAAMqD,0BAA0B;AAClC,WAAOC,wBAAwB7G,MAAAA;;AAEjC,SAAO8G,sBAAsB9G,MAAAA;AAC/B;AAGA,SAAS8G,sBAAsB9G,QAAQ;AACrC,QAAM,EAACuD,QAAQ,CAAA,GAAInB,MAAAA,MAAAA,IAAQpC;AAC3B,QAAMwD,QAAQF,gBAAgBlB,OAAMmB,KAAAA;AAEpC,MAAIZ,eAASa,KAAQ,GAAA;AACnB,UAAMuD,aAAaxD,MAAMyD,aAAY;AAErC,WAAO;MACL/F,GAAG8F,aAAavD,QAAQ;MACxBtC,GAAG6F,aAAa,OAAOvD;IACzB;;AAGF,SAAO;AACT;AAEA,SAASqD,wBAAwB7G,QAAQ;AACvC,QAAM,EAACuD,OAAOnB,MAAAA,MAAAA,IAAQpC;AACtB,QAAMgC,UAAUuB,MAAMvB;AACtB,QAAMF,SAASyB,MAAM0D,UAAS,EAAGnF;AACjC,QAAMrC,QAAQuC,QAAQ+B,UAAUR,MAAM7C,MAAM6C,MAAM5C;AAClD,QAAMsC,QAAQY,gBAAgBzB,OAAMmB,OAAO9D,KAAAA;AAC3C,QAAMP,SAAS,CAAA;AAEf,MAAI8C,QAAQkF,KAAKC,UAAU;AACzB,UAAMC,SAAS7D,MAAMqD,yBAAyB,GAAGnH,KAAAA;AACjD,WAAO,IAAIkG,UAAU;MACnB1E,GAAGmG,OAAOnG;MACVC,GAAGkG,OAAOlG;MACV4E,QAAQvC,MAAM8D,8BAA8BpE,KAAAA;IAC9C,CAAA;;AAGF,WAASwB,IAAI,GAAGA,IAAI3C,QAAQ,EAAE2C,GAAG;AAC/BvF,WAAOa,KAAKwD,MAAMqD,yBAAyBnC,GAAGxB,KAAAA,CAAAA;EAChD;AACA,SAAO/D;AACT;ACzFO,SAASoI,UAAUtB,KAAKhG,QAAQuH,MAAM;AAC3C,QAAMrI,SAASoH,WAAWtG,MAAAA;AAC1B,QAAM,EAACf,MAAMsE,OAAOiE,KAAAA,IAAQxH;AAC5B,QAAMyH,WAAWxI,KAAK+C;AACtB,QAAMiC,aAAawD,SAASrF;AAC5B,QAAMsF,SAAQD,SAASrD;AACvB,QAAM,EAACuD,QAAQD,QAAO9C,QAAQ8C,OAAK,IAAIzD,cAAc,CAAA;AACrD,MAAI/E,UAAUD,KAAKI,OAAOyC,QAAQ;AAChC8F,aAAS5B,KAAKuB,IAAAA;AACdM,WAAO7B,KAAK;MAAC/G;MAAMC;MAAQyI;MAAO/C;MAAO2C;MAAMhE;MAAOiE;IAAI,CAAA;AAC1DM,eAAW9B,GAAAA;;AAEf;AAEA,SAAS6B,OAAO7B,KAAK+B,KAAK;AACxB,QAAM,EAAC9I,MAAMC,QAAQyI,OAAO/C,OAAO2C,MAAMhE,MAAAA,IAASwE;AAClD,QAAM5I,WAAWF,KAAK2C,QAAQ,UAAUmG,IAAIP;AAE5CxB,MAAIgC,KAAI;AAER,MAAI7I,aAAa,OAAOyF,UAAU+C,OAAO;AACvCM,iBAAajC,KAAK9G,QAAQqI,KAAK7D,GAAG;AAClCtB,SAAK4D,KAAK;MAAC/G;MAAMC;MAAQwI,OAAOC;MAAOpE;MAAOpE;IAAQ,CAAA;AACtD6G,QAAIkC,QAAO;AACXlC,QAAIgC,KAAI;AACRC,iBAAajC,KAAK9G,QAAQqI,KAAK9D,MAAM;;AAEvCrB,OAAK4D,KAAK;IAAC/G;IAAMC;IAAQwI,OAAO9C;IAAOrB;IAAOpE;EAAQ,CAAA;AAEtD6G,MAAIkC,QAAO;AACb;AAEA,SAASD,aAAajC,KAAK9G,QAAQiJ,OAAO;AACxC,QAAM,EAAC/I,UAAUC,OAAAA,IAAUH;AAC3B,MAAI0B,QAAQ;AACZ,MAAIwH,WAAW;AAEfpC,MAAIqC,UAAS;AACb,aAAW7I,WAAWJ,UAAU;AAC9B,UAAM,EAACK,OAAOC,IAAAA,IAAOF;AACrB,UAAM8I,aAAajJ,OAAOI,KAAM;AAChC,UAAM8I,YAAYlJ,OAAOM,gBAAgBF,OAAOC,KAAKL,MAAQ,CAAA;AAC7D,QAAIuB,OAAO;AACToF,UAAIwC,OAAOF,WAAWrH,GAAGqH,WAAWpH,CAAC;AACrCN,cAAQ;WACH;AACLoF,UAAIyC,OAAOH,WAAWrH,GAAGkH,KAAAA;AACzBnC,UAAIyC,OAAOH,WAAWrH,GAAGqH,WAAWpH,CAAC;;AAEvCkH,eAAW,CAAC,CAAClJ,OAAO6G,YAAYC,KAAKxG,SAAS;MAACkJ,MAAMN;IAAQ,CAAA;AAC7D,QAAIA,UAAU;AACZpC,UAAI2C,UAAS;WACR;AACL3C,UAAIyC,OAAOF,UAAUtH,GAAGkH,KAAAA;;EAE5B;AAEAnC,MAAIyC,OAAOvJ,OAAO0B,MAAK,EAAGK,GAAGkH,KAAAA;AAC7BnC,MAAI2C,UAAS;AACb3C,MAAI4C,KAAI;AACV;AAEA,SAASxG,KAAK4D,KAAK+B,KAAK;AACtB,QAAM,EAAC9I,MAAMC,QAAQC,UAAUuI,OAAAA,QAAOnE,MAAK,IAAIwE;AAC/C,QAAM3I,WAAWJ,UAAUC,MAAMC,QAAQC,QAAAA;AAEzC,aAAW,EAACa,QAAQ6I,KAAK3J,QAAQiB,KAAKV,OAAOC,IAAG,KAAKN,UAAU;AAC7D,UAAM,EAAC0J,OAAO,EAAC1E,kBAAkBsD,OAAAA,IAAS,CAAA,EAAE,IAAImB;AAChD,UAAME,WAAW7J,WAAW;AAE5B8G,QAAIgC,KAAI;AACRhC,QAAIgD,YAAY5E;AAEhB6E,eAAWjD,KAAKzC,OAAOwF,YAAYlJ,WAAWV,UAAUM,OAAOC,GAAAA,CAAAA;AAE/DsG,QAAIqC,UAAS;AAEb,UAAMD,WAAW,CAAC,CAACnJ,KAAK8G,YAAYC,KAAK6C,GAAAA;AAEzC,QAAI/I;AACJ,QAAIiJ,UAAU;AACZ,UAAIX,UAAU;AACZpC,YAAI2C,UAAS;aACR;AACLO,2BAAmBlD,KAAK9G,QAAQQ,KAAKP,QAAAA;;AAGvC,YAAMgK,aAAa,CAAC,CAACjK,OAAO6G,YAAYC,KAAK7F,KAAK;QAACuI,MAAMN;QAAUrE,SAAS;MAAI,CAAA;AAChFjE,aAAOsI,YAAYe;AACnB,UAAI,CAACrJ,MAAM;AACToJ,2BAAmBlD,KAAK9G,QAAQO,OAAON,QAAAA;;;AAI3C6G,QAAI2C,UAAS;AACb3C,QAAI5D,KAAKtC,OAAO,YAAY,SAAS;AAErCkG,QAAIkC,QAAO;EACb;AACF;AAEA,SAASe,WAAWjD,KAAKzC,OAAO3D,QAAQ;AACtC,QAAM,EAAC8D,KAAKD,OAAAA,IAAUF,MAAMgD,MAAM6C;AAClC,QAAM,EAACjK,UAAUM,OAAOC,IAAG,IAAIE,UAAU,CAAA;AACzC,MAAIT,aAAa,KAAK;AACpB6G,QAAIqC,UAAS;AACbrC,QAAIqD,KAAK5J,OAAOiE,KAAKhE,MAAMD,OAAOgE,SAASC,GAAAA;AAC3CsC,QAAI4C,KAAI;;AAEZ;AAEA,SAASM,mBAAmBlD,KAAK9G,QAAQmC,OAAOlC,UAAU;AACxD,QAAMmK,oBAAoBpK,OAAOoG,YAAYjE,OAAOlC,QAAAA;AACpD,MAAImK,mBAAmB;AACrBtD,QAAIyC,OAAOa,kBAAkBrI,GAAGqI,kBAAkBpI,CAAC;;AAEvD;AC7GA,IAAA,QAAe;EACbqI,IAAI;EAEJC,oBAAoBjD,OAAOkD,OAAOzH,SAAS;AACzC,UAAMc,SAASyD,MAAMmD,KAAKC,YAAY,CAAA,GAAI7H;AAC1C,UAAMQ,UAAU,CAAA;AAChB,QAAIyC,OAAMN,GAAGxF,MAAMe;AAEnB,SAAKyE,IAAI,GAAGA,IAAI3B,OAAO,EAAE2B,GAAG;AAC1BM,MAAAA,QAAOwB,MAAMG,eAAejC,CAAAA;AAC5BxF,aAAO8F,MAAKG;AACZlF,eAAS;AAET,UAAIf,QAAQA,KAAK+C,WAAW/C,gBAAgB8C,aAAa;AACvD/B,iBAAS;UACP4C,SAAS2D,MAAMI,iBAAiBlC,CAAAA;UAChClC,OAAOkC;UACPrC,MAAMS,YAAY5D,MAAMwF,GAAG3B,KAAAA;UAC3ByD;UACAiB,MAAMzC,MAAK6E,WAAW5H,QAAQ6H;UAC9BtG,OAAOwB,MAAK+E;UACZ7K;QACF;;AAGF8F,MAAAA,MAAKgF,UAAU/J;AACfsC,cAAQvC,KAAKC,MAAAA;IACf;AAEA,SAAKyE,IAAI,GAAGA,IAAI3B,OAAO,EAAE2B,GAAG;AAC1BzE,eAASsC,QAAQmC,CAAE;AACnB,UAAI,CAACzE,UAAUA,OAAOoC,SAAS,OAAO;AACpC;;AAGFpC,aAAOoC,OAAOC,eAAeC,SAASmC,GAAGzC,QAAQQ,SAAS;IAC5D;EACF;EAEAwH,WAAWzD,OAAOkD,OAAOzH,SAAS;AAChC,UAAMiI,QAAOjI,QAAQkI,aAAa;AAClC,UAAMC,WAAW5D,MAAM6D,6BAA4B;AACnD,UAAM7C,OAAOhB,MAAM6C;AACnB,aAAS3E,IAAI0F,SAASrI,SAAS,GAAG2C,KAAK,GAAG,EAAEA,GAAG;AAC7C,YAAMzE,SAASmK,SAAS1F,CAAAA,EAAGsF;AAC3B,UAAI,CAAC/J,QAAQ;AACX;;AAGFA,aAAOf,KAAKoL,oBAAoB9C,MAAMvH,OAAOwH,IAAI;AACjD,UAAIyC,SAAQjK,OAAOoC,MAAM;AACvBkF,kBAAUf,MAAMP,KAAKhG,QAAQuH,IAAAA;;IAEjC;EACF;EAEA+C,mBAAmB/D,OAAOkD,OAAOzH,SAAS;AACxC,QAAIA,QAAQkI,aAAa,sBAAsB;AAC7C;;AAGF,UAAMC,WAAW5D,MAAM6D,6BAA4B;AACnD,aAAS3F,IAAI0F,SAASrI,SAAS,GAAG2C,KAAK,GAAG,EAAEA,GAAG;AAC7C,YAAMzE,SAASmK,SAAS1F,CAAAA,EAAGsF;AAE3B,UAAI5H,iBAAiBnC,MAAS,GAAA;AAC5BsH,kBAAUf,MAAMP,KAAKhG,QAAQuG,MAAM6C,SAAS;;IAEhD;EACF;EAEAmB,kBAAkBhE,OAAOiE,MAAMxI,SAAS;AACtC,UAAMhC,SAASwK,KAAKzF,KAAKgF;AAEzB,QAAI,CAAC5H,iBAAiBnC,MAAAA,KAAWgC,QAAQkI,aAAa,qBAAqB;AACzE;;AAGF5C,cAAUf,MAAMP,KAAKhG,QAAQuG,MAAM6C,SAAS;EAC9C;EAEAqB,UAAU;IACRjI,WAAW;IACX0H,UAAU;EACZ;AACF;ACzEA,IAAMQ,aAAa,CAACC,WAAWC,aAAa;AAC1C,MAAI,EAACC,YAAYD,UAAUE,WAAWF,SAAAA,IAAYD;AAElD,MAAIA,UAAUI,eAAe;AAC3BF,gBAAYpK,KAAKE,IAAIkK,WAAWD,QAAAA;AAChCE,eAAWH,UAAUK,mBAAmBvK,KAAKE,IAAImK,UAAUF,QAAAA;;AAG7D,SAAO;IACLE;IACAD;IACAI,YAAYxK,KAAKC,IAAIkK,UAAUC,SAAAA;EACjC;AACF;AAEA,IAAMK,aAAa,CAAC3J,GAAGC,MAAMD,MAAM,QAAQC,MAAM,QAAQD,EAAE4J,iBAAiB3J,EAAE2J,gBAAgB5J,EAAEgB,UAAUf,EAAEe;AAErG,IAAM6I,UAAN,cAAqBC,QAAAA;EAK1BzF,YAAY0F,QAAQ;AAClB,UAAK;AAEL,SAAKC,SAAS;AAGd,SAAKC,iBAAiB,CAAA;AAKtB,SAAKC,eAAe;AAGpB,SAAKC,eAAe;AAEpB,SAAKnF,QAAQ+E,OAAO/E;AACpB,SAAKvE,UAAUsJ,OAAOtJ;AACtB,SAAKgE,MAAMsF,OAAOtF;AAClB,SAAK2F,cAAcxH;AACnB,SAAKyH,cAAczH;AACnB,SAAK0H,aAAa1H;AAClB,SAAK2H,YAAY3H;AACjB,SAAK4H,WAAW5H;AAChB,SAAKT,MAAMS;AACX,SAAKV,SAASU;AACd,SAAK6H,OAAO7H;AACZ,SAAK8H,QAAQ9H;AACb,SAAK+H,SAAS/H;AACd,SAAKgI,QAAQhI;AACb,SAAKiI,WAAWjI;AAChB,SAAKkI,WAAWlI;AAChB,SAAKmI,SAASnI;AACd,SAAKoI,WAAWpI;EAClB;EAEAqI,OAAOT,UAAUD,WAAWW,SAAS;AACnC,SAAKV,WAAWA;AAChB,SAAKD,YAAYA;AACjB,SAAKM,WAAWK;AAEhB,SAAKC,cAAa;AAClB,SAAKC,YAAW;AAChB,SAAKC,IAAG;EACV;EAEAF,gBAAgB;AACd,QAAI,KAAK1F,aAAY,GAAI;AACvB,WAAKmF,QAAQ,KAAKJ;AAClB,WAAKC,OAAO,KAAKI,SAASJ;AAC1B,WAAKC,QAAQ,KAAKE;WACb;AACL,WAAKD,SAAS,KAAKJ;AACnB,WAAKpI,MAAM,KAAK0I,SAAS1I;AACzB,WAAKD,SAAS,KAAKyI;;EAEvB;EAEAS,cAAc;AACZ,UAAMhC,YAAY,KAAK3I,QAAQ6K,UAAU,CAAA;AACzC,QAAIlB,cAAcmB,SAAKnC,UAAUoC,gBAAgB;MAAC,KAAKxG;OAAQ,IAAI,KAAK,CAAA;AAExE,QAAIoE,UAAUqC,QAAQ;AACpBrB,oBAAcA,YAAYqB,OAAO,CAACC,SAAStC,UAAUqC,OAAOC,MAAM,KAAK1G,MAAMmD,IAAI,CAAA;;AAGnF,QAAIiB,UAAUuC,MAAM;AAClBvB,oBAAcA,YAAYuB,KAAK,CAAC3L,GAAGC,MAAMmJ,UAAUuC,KAAK3L,GAAGC,GAAG,KAAK+E,MAAMmD,IAAI,CAAA;;AAG/E,QAAI,KAAK1H,QAAQ+B,SAAS;AACxB4H,kBAAY5H,QAAO;;AAGrB,SAAK4H,cAAcA;EACrB;EAEAiB,MAAM;AACJ,UAAM,EAAC5K,SAASgE,IAAG,IAAI;AAMvB,QAAI,CAAChE,QAAQmL,SAAS;AACpB,WAAKhB,QAAQ,KAAKD,SAAS;AAC3B;;AAGF,UAAMvB,YAAY3I,QAAQ6K;AAC1B,UAAMO,YAAYC,OAAO1C,UAAU2C,IAAI;AACvC,UAAM1C,WAAWwC,UAAUG;AAC3B,UAAMC,cAAc,KAAKC,oBAAmB;AAC5C,UAAM,EAAC3C,UAAUG,WAAAA,IAAcP,WAAWC,WAAWC,QAAAA;AAErD,QAAIuB,OAAOD;AAEXlG,QAAIsH,OAAOF,UAAUM;AAErB,QAAI,KAAK1G,aAAY,GAAI;AACvBmF,cAAQ,KAAKJ;AACbG,eAAS,KAAKyB,SAASH,aAAa5C,UAAUE,UAAUG,UAAc,IAAA;WACjE;AACLiB,eAAS,KAAKJ;AACdK,cAAQ,KAAKyB,SAASJ,aAAaJ,WAAWtC,UAAUG,UAAc,IAAA;;AAGxE,SAAKkB,QAAQ1L,KAAKE,IAAIwL,OAAOnK,QAAQ+J,YAAY,KAAKA,QAAQ;AAC9D,SAAKG,SAASzL,KAAKE,IAAIuL,QAAQlK,QAAQ8J,aAAa,KAAKA,SAAS;EACpE;EAKA6B,SAASH,aAAa5C,UAAUE,UAAUG,YAAY;AACpD,UAAM,EAACjF,KAAK+F,UAAU/J,SAAS,EAAC6K,QAAQ,EAACgB,QAAAA,EAAQ,EAAC,IAAI;AACtD,UAAMC,WAAW,KAAKtC,iBAAiB,CAAA;AAEvC,UAAMK,aAAa,KAAKA,aAAa;MAAC;IAAE;AACxC,UAAMkC,aAAa9C,aAAa4C;AAChC,QAAIG,cAAcR;AAElBxH,QAAIiI,YAAY;AAChBjI,QAAIkI,eAAe;AAEnB,QAAIC,MAAM;AACV,QAAIzK,MAAM,CAACqK;AACX,SAAKpC,YAAYvK,QAAQ,CAACgN,YAAY3J,MAAM;AAC1C,YAAM4J,YAAYvD,WAAYF,WAAW,IAAK5E,IAAIsI,YAAYF,WAAWG,IAAI,EAAEpC;AAE/E,UAAI1H,MAAM,KAAKoH,WAAWA,WAAW/J,SAAS,CAAA,IAAKuM,YAAY,IAAIR,UAAU9B,UAAU;AACrFiC,uBAAeD;AACflC,mBAAWA,WAAW/J,UAAU2C,IAAI,IAAI,IAAI,EAAA,IAAM;AAClDf,eAAOqK;AACPI;;AAGFL,eAASrJ,CAAAA,IAAK;QAACuH,MAAM;QAAGtI;QAAKyK;QAAKhC,OAAOkC;QAAWnC,QAAQjB;MAAU;AAEtEY,iBAAWA,WAAW/J,SAAS,CAAA,KAAMuM,YAAYR;IACnD,CAAA;AAEA,WAAOG;EACT;EAEAJ,SAASJ,aAAaJ,WAAWtC,UAAU0D,aAAa;AACtD,UAAM,EAACxI,KAAK8F,WAAW9J,SAAS,EAAC6K,QAAQ,EAACgB,QAAAA,EAAQ,EAAC,IAAI;AACvD,UAAMC,WAAW,KAAKtC,iBAAiB,CAAA;AACvC,UAAMI,cAAc,KAAKA,cAAc,CAAA;AACvC,UAAM6C,cAAc3C,YAAY0B;AAEhC,QAAIkB,aAAab;AACjB,QAAIc,kBAAkB;AACtB,QAAIC,mBAAmB;AAEvB,QAAI5C,OAAO;AACX,QAAI6C,MAAM;AAEV,SAAKlD,YAAYvK,QAAQ,CAACgN,YAAY3J,MAAM;AAC1C,YAAM,EAAC4J,WAAWpD,WAAU,IAAI6D,kBAAkBhE,UAAUsC,WAAWpH,KAAKoI,YAAYI,WAAAA;AAGxF,UAAI/J,IAAI,KAAKmK,mBAAmB3D,aAAa,IAAI4C,UAAUY,aAAa;AACtEC,sBAAcC,kBAAkBd;AAChCjC,oBAAY7L,KAAK;UAACoM,OAAOwC;UAAiBzC,QAAQ0C;QAAgB,CAAA;AAClE5C,gBAAQ2C,kBAAkBd;AAC1BgB;AACAF,0BAAkBC,mBAAmB;;AAIvCd,eAASrJ,CAAAA,IAAK;QAACuH;QAAMtI,KAAKkL;QAAkBC;QAAK1C,OAAOkC;QAAWnC,QAAQjB;MAAU;AAGrF0D,wBAAkBlO,KAAKC,IAAIiO,iBAAiBN,SAAAA;AAC5CO,0BAAoB3D,aAAa4C;IACnC,CAAA;AAEAa,kBAAcC;AACd/C,gBAAY7L,KAAK;MAACoM,OAAOwC;MAAiBzC,QAAQ0C;IAAgB,CAAA;AAElE,WAAOF;EACT;EAEAK,iBAAiB;AACf,QAAI,CAAC,KAAK/M,QAAQmL,SAAS;AACzB;;AAEF,UAAMK,cAAc,KAAKC,oBAAmB;AAC5C,UAAM,EAACjC,gBAAgBsC,UAAU9L,SAAS,EAACgN,OAAOnC,QAAQ,EAACgB,QAAO,GAAGoB,IAAAA,EAAI,IAAI;AAC7E,UAAMC,YAAYC,cAAcF,KAAK,KAAKjD,MAAM,KAAKG,KAAK;AAC1D,QAAI,KAAKnF,aAAY,GAAI;AACvB,UAAImH,MAAM;AACV,UAAInC,OAAOoD,eAAeJ,OAAO,KAAKhD,OAAO6B,SAAS,KAAK5B,QAAQ,KAAKJ,WAAWsC,GAAI,CAAA;AACvF,iBAAWkB,UAAUvB,UAAU;AAC7B,YAAIK,QAAQkB,OAAOlB,KAAK;AACtBA,gBAAMkB,OAAOlB;AACbnC,iBAAOoD,eAAeJ,OAAO,KAAKhD,OAAO6B,SAAS,KAAK5B,QAAQ,KAAKJ,WAAWsC,GAAI,CAAA;;AAErFkB,eAAO3L,OAAO,KAAKA,MAAM8J,cAAcK;AACvCwB,eAAOrD,OAAOkD,UAAUI,WAAWJ,UAAUjO,EAAE+K,IAAOqD,GAAAA,OAAOlD,KAAK;AAClEH,gBAAQqD,OAAOlD,QAAQ0B;MACzB;WACK;AACL,UAAIgB,MAAM;AACV,UAAInL,MAAM0L,eAAeJ,OAAO,KAAKtL,MAAM8J,cAAcK,SAAS,KAAKpK,SAAS,KAAKmI,YAAYiD,GAAAA,EAAK3C,MAAM;AAC5G,iBAAWmD,UAAUvB,UAAU;AAC7B,YAAIuB,OAAOR,QAAQA,KAAK;AACtBA,gBAAMQ,OAAOR;AACbnL,gBAAM0L,eAAeJ,OAAO,KAAKtL,MAAM8J,cAAcK,SAAS,KAAKpK,SAAS,KAAKmI,YAAYiD,GAAAA,EAAK3C,MAAM;;AAE1GmD,eAAO3L,MAAMA;AACb2L,eAAOrD,QAAQ,KAAKA,OAAO6B;AAC3BwB,eAAOrD,OAAOkD,UAAUI,WAAWJ,UAAUjO,EAAEoO,OAAOrD,IAAI,GAAGqD,OAAOlD,KAAK;AACzEzI,eAAO2L,OAAOnD,SAAS2B;MACzB;;EAEJ;EAEA7G,eAAe;AACb,WAAO,KAAKhF,QAAQqK,aAAa,SAAS,KAAKrK,QAAQqK,aAAa;EACtE;EAEApC,OAAO;AACL,QAAI,KAAKjI,QAAQmL,SAAS;AACxB,YAAMnH,MAAM,KAAKA;AACjB4B,eAAS5B,KAAK,IAAI;AAElB,WAAKuJ,MAAK;AAEVzH,iBAAW9B,GAAAA;;EAEf;EAKAuJ,QAAQ;AACN,UAAM,EAACvN,SAAS6D,MAAM+F,aAAaC,YAAY7F,IAAAA,IAAO;AACtD,UAAM,EAACgJ,OAAOnC,QAAQlC,UAAAA,IAAa9E;AACnC,UAAM2J,eAAe/E,SAAS/C;AAC9B,UAAMwH,YAAYC,cAActJ,KAAKoJ,KAAK,KAAKjD,MAAM,KAAKG,KAAK;AAC/D,UAAMiB,YAAYC,OAAO1C,UAAU2C,IAAI;AACvC,UAAM,EAACO,QAAO,IAAIlD;AAClB,UAAMC,WAAWwC,UAAUG;AAC3B,UAAMkC,eAAe7E,WAAW;AAChC,QAAI8E;AAEJ,SAAKC,UAAS;AAGd3J,QAAIiI,YAAYiB,UAAUjB,UAAU,MAAA;AACpCjI,QAAIkI,eAAe;AACnBlI,QAAI4J,YAAY;AAChB5J,QAAIsH,OAAOF,UAAUM;AAErB,UAAM,EAAC5C,UAAUD,WAAWI,WAAU,IAAIP,WAAWC,WAAWC,QAAAA;AAGhE,UAAMiF,gBAAgB,SAAS5O,GAAGC,GAAGkN,YAAY;AAC/C,UAAI9M,MAAMwJ,QAAaA,KAAAA,YAAY,KAAKxJ,MAAMuJ,SAAAA,KAAcA,YAAY,GAAG;AACzE;;AAIF7E,UAAIgC,KAAI;AAER,YAAM4H,YAAY1L,eAAekK,WAAWwB,WAAW,CAAA;AACvD5J,UAAIgD,YAAY9E,eAAekK,WAAWpF,WAAWwG,YAAAA;AACrDxJ,UAAI8J,UAAU5L,eAAekK,WAAW0B,SAAS,MAAA;AACjD9J,UAAI+J,iBAAiB7L,eAAekK,WAAW2B,gBAAgB,CAAA;AAC/D/J,UAAIgK,WAAW9L,eAAekK,WAAW4B,UAAU,OAAA;AACnDhK,UAAI4J,YAAYA;AAChB5J,UAAIiK,cAAc/L,eAAekK,WAAW6B,aAAaT,YAAAA;AAEzDxJ,UAAIkK,YAAYhM,eAAekK,WAAW+B,UAAU,CAAA,CAAE,CAAA;AAEtD,UAAIxF,UAAUI,eAAe;AAG3B,cAAMqF,cAAc;UAClBtK,QAAQ+E,YAAYpK,KAAK4P,QAAQ;UACjCC,YAAYlC,WAAWkC;UACvBC,UAAUnC,WAAWmC;UACrBC,aAAaZ;QACf;AACA,cAAMa,UAAUvB,UAAUwB,MAAMzP,GAAG6J,WAAW,CAAA;AAC9C,cAAM6F,UAAUzP,IAAIuO;AAGpBmB,wBAAgB5K,KAAKoK,aAAaK,SAASE,SAAShG,UAAUK,mBAAmBF,QAAAA;aAC5E;AAGL,cAAM+F,UAAU3P,IAAIT,KAAKC,KAAKkK,WAAWC,aAAa,GAAG,CAAA;AACzD,cAAMiG,WAAW5B,UAAUI,WAAWrO,GAAG6J,QAAAA;AACzC,cAAMiG,eAAeC,cAAc5C,WAAW2C,YAAY;AAE1D/K,YAAIqC,UAAS;AAEb,YAAI4I,OAAOC,OAAOH,YAAAA,EAAcI,KAAKC,CAAAA,MAAKA,MAAM,CAAI,GAAA;AAClDC,6BAAmBrL,KAAK;YACtB/E,GAAG6P;YACH5P,GAAG2P;YACHS,GAAGxG;YACHyG,GAAG1G;YACH/E,QAAQiL;UACV,CAAA;eACK;AACL/K,cAAIqD,KAAKyH,UAAUD,SAAS/F,UAAUD,SAAAA;;AAGxC7E,YAAI5D,KAAI;AACR,YAAIwN,cAAc,GAAG;AACnB5J,cAAIwL,OAAM;;;AAIdxL,UAAIkC,QAAO;IACb;AAEA,UAAMuJ,WAAW,SAASxQ,GAAGC,GAAGkN,YAAY;AAC1CsD,iBAAW1L,KAAKoI,WAAWG,MAAMtN,GAAGC,IAAK+J,aAAa,GAAImC,WAAW;QACnEuE,eAAevD,WAAWpJ;QAC1BiJ,WAAWiB,UAAUjB,UAAUG,WAAWH,SAAS;MACrD,CAAA;IACF;AAGA,UAAMjH,eAAe,KAAKA,aAAY;AACtC,UAAMwG,cAAc,KAAKC,oBAAmB;AAC5C,QAAIzG,cAAc;AAChB0I,eAAS;QACPzO,GAAGmO,eAAeJ,OAAO,KAAKhD,OAAO6B,SAAS,KAAK5B,QAAQJ,WAAW,CAAE,CAAA;QACxE3K,GAAG,KAAKwC,MAAMmK,UAAUL;QACxBvO,MAAM;MACR;WACK;AACLyQ,eAAS;QACPzO,GAAG,KAAK+K,OAAO6B;QACf3M,GAAGkO,eAAeJ,OAAO,KAAKtL,MAAM8J,cAAcK,SAAS,KAAKpK,SAASmI,YAAY,CAAA,EAAGM,MAAM;QAC9FjN,MAAM;MACR;;AAGF2S,0BAAsB,KAAK5L,KAAKH,KAAKgM,aAAa;AAElD,UAAM9D,aAAa9C,aAAa4C;AAChC,SAAKlC,YAAYvK,QAAQ,CAACgN,YAAY3J,MAAM;AAC1CuB,UAAIiK,cAAc7B,WAAW0D;AAC7B9L,UAAIgD,YAAYoF,WAAW0D;AAE3B,YAAMC,YAAY/L,IAAIsI,YAAYF,WAAWG,IAAI,EAAEpC;AACnD,YAAM8B,YAAYiB,UAAUjB,UAAUG,WAAWH,cAAcG,WAAWH,YAAYtD,UAAUsD,UAAQ;AACxG,YAAM9B,QAAQrB,WAAW2E,eAAesC;AACxC,UAAI9Q,IAAIyO,OAAOzO;AACf,UAAIC,IAAIwO,OAAOxO;AAEfgO,gBAAU8C,SAAS,KAAK7F,KAAK;AAE7B,UAAInF,cAAc;AAChB,YAAIvC,IAAI,KAAKxD,IAAIkL,QAAQ0B,UAAU,KAAK5B,OAAO;AAC7C/K,cAAIwO,OAAOxO,KAAK6M;AAChB2B,iBAAOzQ;AACPgC,cAAIyO,OAAOzO,IAAImO,eAAeJ,OAAO,KAAKhD,OAAO6B,SAAS,KAAK5B,QAAQJ,WAAW6D,OAAOzQ,IAAI,CAAC;;iBAEvFwF,IAAI,KAAKvD,IAAI6M,aAAa,KAAKtK,QAAQ;AAChDxC,YAAIyO,OAAOzO,IAAIA,IAAI2K,YAAY8D,OAAOzQ,IAAI,EAAEkN,QAAQ0B;AACpD6B,eAAOzQ;AACPiC,YAAIwO,OAAOxO,IAAIkO,eAAeJ,OAAO,KAAKtL,MAAM8J,cAAcK,SAAS,KAAKpK,SAASmI,YAAY8D,OAAOzQ,IAAI,EAAEiN,MAAM;;AAGtH,YAAM+F,QAAQ/C,UAAUjO,EAAEA,CAAAA;AAE1B4O,oBAAcoC,OAAO/Q,GAAGkN,UAAAA;AAExBnN,UAAIiR,OAAOjE,WAAWhN,IAAI6J,WAAW2E,cAAczI,eAAe/F,IAAIkL,QAAQ,KAAKF,OAAOpG,KAAKoJ,GAAG;AAGlGwC,eAASvC,UAAUjO,EAAEA,CAAAA,GAAIC,GAAGkN,UAAAA;AAE5B,UAAIpH,cAAc;AAChB0I,eAAOzO,KAAKkL,QAAQ0B;MACtB,WAAW,OAAOO,WAAWG,SAAS,UAAU;AAC9C,cAAM4D,iBAAiB/E,UAAUW;AACjC2B,eAAOxO,KAAKkR,0BAA0BhE,YAAY+D,cAAkBtE,IAAAA;aAC/D;AACL6B,eAAOxO,KAAK6M;;IAEhB,CAAA;AAEAsE,yBAAqB,KAAKrM,KAAKH,KAAKgM,aAAa;EACnD;EAKAlC,YAAY;AACV,UAAM9J,OAAO,KAAK7D;AAClB,UAAMsQ,YAAYzM,KAAK0M;AACvB,UAAMC,YAAYnF,OAAOiF,UAAUhF,IAAI;AACvC,UAAMmF,eAAeC,UAAUJ,UAAUzE,OAAO;AAEhD,QAAI,CAACyE,UAAUnF,SAAS;AACtB;;AAGF,UAAM+B,YAAYC,cAActJ,KAAKoJ,KAAK,KAAKjD,MAAM,KAAKG,KAAK;AAC/D,UAAMnG,MAAM,KAAKA;AACjB,UAAMqG,WAAWiG,UAAUjG;AAC3B,UAAMoD,eAAe+C,UAAUjF,OAAO;AACtC,UAAMoF,6BAA6BF,aAAa/O,MAAM+L;AACtD,QAAIvO;AAIJ,QAAI8K,OAAO,KAAKA;AAChB,QAAID,WAAW,KAAKI;AAEpB,QAAI,KAAKnF,aAAY,GAAI;AAEvB+E,iBAAWtL,KAAKC,IAAO,GAAA,KAAKmL,UAAU;AACtC3K,UAAI,KAAKwC,MAAMiP;AACf3G,aAAOoD,eAAevJ,KAAKmJ,OAAOhD,MAAM,KAAKC,QAAQF,QAAAA;WAChD;AAEL,YAAMD,YAAY,KAAKF,YAAYgH,OAAO,CAACC,KAAKtF,SAAS9M,KAAKC,IAAImS,KAAKtF,KAAKrB,MAAM,GAAG,CAAA;AACrFhL,UAAIyR,6BAA6BvD,eAAevJ,KAAKmJ,OAAO,KAAKtL,KAAK,KAAKD,SAASqI,YAAYjG,KAAKgH,OAAOgB,UAAU,KAAKJ,oBAAmB,CAAA;;AAKhJ,UAAMxM,IAAImO,eAAe/C,UAAUL,MAAMA,OAAOD,QAAAA;AAGhD/F,QAAIiI,YAAYiB,UAAUjB,UAAU6E,mBAAmBzG,QAAAA,CAAAA;AACvDrG,QAAIkI,eAAe;AACnBlI,QAAIiK,cAAcqC,UAAU5K;AAC5B1B,QAAIgD,YAAYsJ,UAAU5K;AAC1B1B,QAAIsH,OAAOkF,UAAU9E;AAErBgE,eAAW1L,KAAKsM,UAAU/D,MAAMtN,GAAGC,GAAGsR,SAAAA;EACxC;EAKA/E,sBAAsB;AACpB,UAAM6E,YAAY,KAAKtQ,QAAQuQ;AAC/B,UAAMC,YAAYnF,OAAOiF,UAAUhF,IAAI;AACvC,UAAMmF,eAAeC,UAAUJ,UAAUzE,OAAO;AAChD,WAAOyE,UAAUnF,UAAUqF,UAAUzE,aAAa0E,aAAavG,SAAS;EAC1E;EAKA6G,iBAAiB9R,GAAGC,GAAG;AACrB,QAAIuD,GAAGuO,QAAQC;AAEf,QAAIvN,WAAWzE,GAAG,KAAK+K,MAAM,KAAKC,KAAK,KAClCvG,WAAWxE,GAAG,KAAKwC,KAAK,KAAKD,MAAM,GAAG;AAEzCwP,WAAK,KAAKzH;AACV,WAAK/G,IAAI,GAAGA,IAAIwO,GAAGnR,QAAQ,EAAE2C,GAAG;AAC9BuO,iBAASC,GAAGxO,CAAE;AAEd,YAAIiB,WAAWzE,GAAG+R,OAAOhH,MAAMgH,OAAOhH,OAAOgH,OAAO7G,KAAK,KACpDzG,WAAWxE,GAAG8R,OAAOtP,KAAKsP,OAAOtP,MAAMsP,OAAO9G,MAAM,GAAG;AAE1D,iBAAO,KAAKP,YAAYlH,CAAE;;MAE9B;;AAGF,WAAO;EACT;EAMAyO,YAAYC,GAAG;AACb,UAAMtN,OAAO,KAAK7D;AAClB,QAAI,CAACoR,WAAWD,EAAEE,MAAMxN,IAAO,GAAA;AAC7B;;AAIF,UAAMyN,cAAc,KAAKP,iBAAiBI,EAAElS,GAAGkS,EAAEjS,CAAC;AAElD,QAAIiS,EAAEE,SAAS,eAAeF,EAAEE,SAAS,YAAY;AACnD,YAAME,WAAW,KAAK9H;AACtB,YAAM+H,WAAWtI,WAAWqI,UAAUD,WAAAA;AACtC,UAAIC,YAAY,CAACC,UAAU;AACzB1G,iBAAKjH,KAAK4N,SAAS;UAACN;UAAGI;UAAU;QAAK,GAAE,IAAI;;AAG9C,WAAK9H,eAAe6H;AAEpB,UAAIA,eAAe,CAACE,UAAU;AAC5B1G,iBAAKjH,KAAK6N,SAAS;UAACP;UAAGG;UAAa;QAAK,GAAE,IAAI;;IAEnD,WAAWA,aAAa;AACtBxG,eAAKjH,KAAK8N,SAAS;QAACR;QAAGG;QAAa;MAAK,GAAE,IAAI;;EAEnD;AACF;AAEA,SAASxE,kBAAkBhE,UAAUsC,WAAWpH,KAAKoI,YAAYI,aAAa;AAC5E,QAAMH,YAAYuF,mBAAmBxF,YAAYtD,UAAUsC,WAAWpH,GAAAA;AACtE,QAAMiF,aAAa4I,oBAAoBrF,aAAaJ,YAAYhB,UAAUW,UAAU;AACpF,SAAO;IAACM;IAAWpD;EAAU;AAC/B;AAEA,SAAS2I,mBAAmBxF,YAAYtD,UAAUsC,WAAWpH,KAAK;AAChE,MAAI8N,iBAAiB1F,WAAWG;AAChC,MAAIuF,kBAAkB,OAAOA,mBAAmB,UAAU;AACxDA,qBAAiBA,eAAelB,OAAO,CAACrR,GAAGC,MAAMD,EAAEO,SAASN,EAAEM,SAASP,IAAIC,CAAC;;AAE9E,SAAOsJ,WAAYsC,UAAUG,OAAO,IAAKvH,IAAIsI,YAAYwF,cAAAA,EAAgB3H;AAC3E;AAEA,SAAS0H,oBAAoBrF,aAAaJ,YAAY+D,gBAAgB;AACpE,MAAIlH,aAAauD;AACjB,MAAI,OAAOJ,WAAWG,SAAS,UAAU;AACvCtD,iBAAamH,0BAA0BhE,YAAY+D,cAAAA;;AAErD,SAAOlH;AACT;AAEA,SAASmH,0BAA0BhE,YAAY+D,gBAAgB;AAC7D,QAAM4B,cAAc3F,WAAWG,OAAOH,WAAWG,KAAKzM,SAAS;AAC/D,SAAOqQ,iBAAiB4B;AAC1B;AAEA,SAASX,WAAWC,MAAMxN,MAAM;AAC9B,OAAKwN,SAAS,eAAeA,SAAS,gBAAgBxN,KAAK6N,WAAW7N,KAAK4N,UAAU;AACnF,WAAO;;AAET,MAAI5N,KAAK8N,YAAYN,SAAS,WAAWA,SAAS,YAAY;AAC5D,WAAO;;AAET,SAAO;AACT;AAEA,IAAA,gBAAe;EACb9J,IAAI;EAMJyK,UAAU5I;EAEV3L,MAAM8G,OAAOkD,OAAOzH,SAAS;AAC3B,UAAMiS,SAAS1N,MAAM0N,SAAS,IAAI7I,QAAO;MAACpF,KAAKO,MAAMP;MAAKhE;MAASuE;IAAK,CAAA;AACxE2N,YAAQC,UAAU5N,OAAO0N,QAAQjS,OAAAA;AACjCkS,YAAQE,OAAO7N,OAAO0N,MAAAA;EACxB;EAEAI,KAAK9N,OAAO;AACV2N,YAAQI,UAAU/N,OAAOA,MAAM0N,MAAM;AACrC,WAAO1N,MAAM0N;EACf;EAKAM,aAAahO,OAAOkD,OAAOzH,SAAS;AAClC,UAAMiS,SAAS1N,MAAM0N;AACrBC,YAAQC,UAAU5N,OAAO0N,QAAQjS,OAAAA;AACjCiS,WAAOjS,UAAUA;EACnB;EAIAwS,YAAYjO,OAAO;AACjB,UAAM0N,SAAS1N,MAAM0N;AACrBA,WAAOtH,YAAW;AAClBsH,WAAOlF,eAAc;EACvB;EAGA0F,WAAWlO,OAAOiE,MAAM;AACtB,QAAI,CAACA,KAAKkK,QAAQ;AAChBnO,YAAM0N,OAAOf,YAAY1I,KAAKmK,KAAK;;EAEvC;EAEAlK,UAAU;IACR0C,SAAS;IACTd,UAAU;IACV2C,OAAO;IACPzC,UAAU;IACVxI,SAAS;IACTuI,QAAQ;IAGRqH,QAAQR,GAAG/E,YAAY6F,QAAQ;AAC7B,YAAM1R,SAAQ6L,WAAWjD;AACzB,YAAMyJ,KAAKX,OAAO1N;AAClB,UAAIqO,GAAGjO,iBAAiBpE,MAAQ,GAAA;AAC9BqS,WAAGC,KAAKtS,MAAAA;AACR6L,mBAAWpJ,SAAS;aACf;AACL4P,WAAGE,KAAKvS,MAAAA;AACR6L,mBAAWpJ,SAAS;;IAExB;IAEA0O,SAAS;IACTD,SAAS;IAET5G,QAAQ;MACNnF,OAAO,CAAC1B,QAAQA,IAAIO,MAAMvE,QAAQ0F;MAClCoD,UAAU;MACV+C,SAAS;MAYTd,eAAexG,OAAO;AACpB,cAAMoD,WAAWpD,MAAMmD,KAAKC;AAC5B,cAAM,EAACkD,QAAQ,EAAC9B,eAAeuF,YAAYrC,WAAWvG,OAAAA,QAAOqN,iBAAiBhE,aAAAA,EAAa,IAAIxK,MAAM0N,OAAOjS;AAE5G,eAAOuE,MAAMyO,uBAAsB,EAAGC,IAAI,CAAClQ,UAAS;AAClD,gBAAM+D,QAAQ/D,MAAK6E,WAAWsL,SAASnK,gBAAgB,IAAI5G,MAAS;AACpE,gBAAMqM,cAAckC,UAAU5J,MAAM0H,WAAW;AAE/C,iBAAO;YACLjC,MAAM5E,SAAS5E,MAAKxC,KAAK,EAAE4S;YAC3BnM,WAAWF,MAAM1E;YACjB0N,WAAWpK;YACX1C,QAAQ,CAACD,MAAKnC;YACdkN,SAAShH,MAAMsM;YACfjF,UAAUrH,MAAMuM;YAChBtF,gBAAgBjH,MAAMwM;YACtBtF,UAAUlH,MAAMyM;YAChB3F,YAAYY,YAAYrE,QAAQqE,YAAYtE,UAAU;YACtD+D,aAAanH,MAAM0M;YACnBlF,YAAYA,cAAcxH,MAAMwH;YAChCC,UAAUzH,MAAMyH;YAChBtC,WAAWA,aAAanF,MAAMmF;YAC9B8C,cAAcgE,oBAAoBhE,gBAAgBjI,MAAMiI;YAGxD5F,cAAcpG,MAAKxC;UACrB;QACF,GAAG,IAAI;MACT;IACF;IAEAgQ,OAAO;MACL7K,OAAO,CAAC1B,QAAQA,IAAIO,MAAMvE,QAAQ0F;MAClCyF,SAAS;MACTd,UAAU;MACVkC,MAAM;IACR;EACF;EAEAkH,aAAa;IACXC,aAAa,CAACC,SAAS,CAACA,KAAKC,WAAW,IAAA;IACxC/I,QAAQ;MACN6I,aAAa,CAACC,SAAS,CAAC;QAAC;QAAkB;QAAU;MAAO,EAACE,SAASF,IAAAA;IACxE;EACF;AACF;ACzsBO,IAAMG,QAAN,cAAoBzK,QAAAA;EAIzBzF,YAAY0F,QAAQ;AAClB,UAAK;AAEL,SAAK/E,QAAQ+E,OAAO/E;AACpB,SAAKvE,UAAUsJ,OAAOtJ;AACtB,SAAKgE,MAAMsF,OAAOtF;AAClB,SAAK+P,WAAW5R;AAChB,SAAKT,MAAMS;AACX,SAAKV,SAASU;AACd,SAAK6H,OAAO7H;AACZ,SAAK8H,QAAQ9H;AACb,SAAKgI,QAAQhI;AACb,SAAK+H,SAAS/H;AACd,SAAKkI,WAAWlI;AAChB,SAAKmI,SAASnI;AACd,SAAKoI,WAAWpI;EAClB;EAEAqI,OAAOT,UAAUD,WAAW;AAC1B,UAAMjG,OAAO,KAAK7D;AAElB,SAAKgK,OAAO;AACZ,SAAKtI,MAAM;AAEX,QAAI,CAACmC,KAAKsH,SAAS;AACjB,WAAKhB,QAAQ,KAAKD,SAAS,KAAKD,QAAQ,KAAKxI,SAAS;AACtD;;AAGF,SAAK0I,QAAQ,KAAKF,QAAQF;AAC1B,SAAKG,SAAS,KAAKzI,SAASqI;AAE5B,UAAMkK,YAAYnU,QAAQgE,KAAK0I,IAAI,IAAI1I,KAAK0I,KAAKzM,SAAS;AAC1D,SAAKiU,WAAWrD,UAAU7M,KAAKgI,OAAO;AACtC,UAAMoI,WAAWD,YAAY3I,OAAOxH,KAAKyH,IAAI,EAAES,aAAa,KAAKgI,SAAS7J;AAE1E,QAAI,KAAKlF,aAAY,GAAI;AACvB,WAAKkF,SAAS+J;WACT;AACL,WAAK9J,QAAQ8J;;EAEjB;EAEAjP,eAAe;AACb,UAAMkP,MAAM,KAAKlU,QAAQqK;AACzB,WAAO6J,QAAQ,SAASA,QAAQ;EAClC;EAEAC,UAAUC,QAAQ;AAChB,UAAM,EAAC1S,KAAKsI,MAAMvI,QAAQwI,OAAOjK,QAAAA,IAAW;AAC5C,UAAMgN,QAAQhN,QAAQgN;AACtB,QAAIuB,WAAW;AACf,QAAIxE,UAAUsK,QAAQC;AAEtB,QAAI,KAAKtP,aAAY,GAAI;AACvBqP,eAASjH,eAAeJ,OAAOhD,MAAMC,KAAAA;AACrCqK,eAAS5S,MAAM0S;AACfrK,iBAAWE,QAAQD;WACd;AACL,UAAIhK,QAAQqK,aAAa,QAAQ;AAC/BgK,iBAASrK,OAAOoK;AAChBE,iBAASlH,eAAeJ,OAAOvL,QAAQC,GAAAA;AACvC6M,mBAAWgG,KAAK;aACX;AACLF,iBAASpK,QAAQmK;AACjBE,iBAASlH,eAAeJ,OAAOtL,KAAKD,MAAAA;AACpC8M,mBAAWgG,KAAK;;AAElBxK,iBAAWtI,SAASC;;AAEtB,WAAO;MAAC2S;MAAQC;MAAQvK;MAAUwE;IAAQ;EAC5C;EAEAtG,OAAO;AACL,UAAMjE,MAAM,KAAKA;AACjB,UAAMH,OAAO,KAAK7D;AAElB,QAAI,CAAC6D,KAAKsH,SAAS;AACjB;;AAGF,UAAMqJ,WAAWnJ,OAAOxH,KAAKyH,IAAI;AACjC,UAAMS,aAAayI,SAASzI;AAC5B,UAAMqI,SAASrI,aAAa,IAAI,KAAKgI,SAASrS;AAC9C,UAAM,EAAC2S,QAAQC,QAAQvK,UAAUwE,SAAAA,IAAY,KAAK4F,UAAUC,MAAAA;AAE5D1E,eAAW1L,KAAKH,KAAK0I,MAAM,GAAG,GAAGiI,UAAU;MACzC9O,OAAO7B,KAAK6B;MACZqE;MACAwE;MACAtC,WAAW6E,mBAAmBjN,KAAKmJ,KAAK;MACxCd,cAAc;MACduI,aAAa;QAACJ;QAAQC;MAAO;IAC/B,CAAA;EACF;AACF;AAEA,SAASI,YAAYnQ,OAAO+L,WAAW;AACrC,QAAMC,QAAQ,IAAIuD,MAAM;IACtB9P,KAAKO,MAAMP;IACXhE,SAASsQ;IACT/L;EACF,CAAA;AAEA2N,UAAQC,UAAU5N,OAAOgM,OAAOD,SAAAA;AAChC4B,UAAQE,OAAO7N,OAAOgM,KAAAA;AACtBhM,QAAMoQ,aAAapE;AACrB;AAEA,IAAA,eAAe;EACbhJ,IAAI;EAMJyK,UAAU8B;EAEVrW,MAAM8G,OAAOkD,OAAOzH,SAAS;AAC3B0U,gBAAYnQ,OAAOvE,OAAAA;EACrB;EAEAqS,KAAK9N,OAAO;AACV,UAAMoQ,aAAapQ,MAAMoQ;AACzBzC,YAAQI,UAAU/N,OAAOoQ,UAAAA;AACzB,WAAOpQ,MAAMoQ;EACf;EAEApC,aAAahO,OAAOkD,OAAOzH,SAAS;AAClC,UAAMuQ,QAAQhM,MAAMoQ;AACpBzC,YAAQC,UAAU5N,OAAOgM,OAAOvQ,OAAAA;AAChCuQ,UAAMvQ,UAAUA;EAClB;EAEAyI,UAAU;IACRuE,OAAO;IACP7B,SAAS;IACTG,MAAM;MACJhB,QAAQ;IACV;IACAC,UAAU;IACVsB,SAAS;IACTxB,UAAU;IACVkC,MAAM;IACNjC,QAAQ;EACV;EAEAsK,eAAe;IACblP,OAAO;EACT;EAEA+N,aAAa;IACXC,aAAa;IACbmB,YAAY;EACd;AACF;AErJA,IAAMC,cAAc;EAIlBC,QAAQC,OAAO;AACb,QAAI,CAACA,MAAMC,QAAQ;AACjB,aAAO;;AAGT,QAAIC,GAAGC;AACP,QAAIC,OAAO,oBAAIC,IAAAA;AACf,QAAIC,IAAI;AACR,QAAIC,QAAQ;AAEZ,SAAKL,IAAI,GAAGC,MAAMH,MAAMC,QAAQC,IAAIC,KAAK,EAAED,GAAG;AAC5C,YAAMM,KAAKR,MAAME,CAAAA,EAAGO;AACpB,UAAID,MAAMA,GAAGE,SAAQ,GAAI;AACvB,cAAMC,MAAMH,GAAGI,gBAAe;AAC9BR,aAAKS,IAAIF,IAAIG,CAAC;AACdR,aAAKK,IAAIL;AACT,UAAEC;;IAEN;AAGA,QAAIA,UAAU,KAAKH,KAAKW,SAAS,GAAG;AAClC,aAAO;;AAGT,UAAMC,WAAW;MAAIZ,GAAAA;MAAMa,OAAO,CAACC,GAAGC,MAAMD,IAAIC,CAAAA,IAAKf,KAAKW;AAE1D,WAAO;MACLD,GAAGE;MACHV,GAAGA,IAAIC;IACT;EACF;EAKAa,QAAQpB,OAAOqB,eAAe;AAC5B,QAAI,CAACrB,MAAMC,QAAQ;AACjB,aAAO;;AAGT,QAAIa,IAAIO,cAAcP;AACtB,QAAIR,IAAIe,cAAcf;AACtB,QAAIgB,cAAcC,OAAOC;AACzB,QAAItB,GAAGC,KAAKsB;AAEZ,SAAKvB,IAAI,GAAGC,MAAMH,MAAMC,QAAQC,IAAIC,KAAK,EAAED,GAAG;AAC5C,YAAMM,KAAKR,MAAME,CAAAA,EAAGO;AACpB,UAAID,MAAMA,GAAGE,SAAQ,GAAI;AACvB,cAAMgB,SAASlB,GAAGmB,eAAc;AAChC,cAAMC,IAAIC,sBAAsBR,eAAeK,MAAAA;AAE/C,YAAIE,IAAIN,aAAa;AACnBA,wBAAcM;AACdH,2BAAiBjB;;;IAGvB;AAEA,QAAIiB,gBAAgB;AAClB,YAAMK,KAAKL,eAAeb,gBAAe;AACzCE,UAAIgB,GAAGhB;AACPR,UAAIwB,GAAGxB;;AAGT,WAAO;MACLQ;MACAR;IACF;EACF;AACF;AAGA,SAASyB,aAAaC,MAAMC,QAAQ;AAClC,MAAIA,QAAQ;AACV,QAAIC,QAAQD,MAAS,GAAA;AAEnBE,YAAMC,UAAUC,KAAKC,MAAMN,MAAMC,MAAAA;WAC5B;AACLD,WAAKK,KAAKJ,MAAAA;;;AAId,SAAOD;AACT;AAQA,SAASO,cAAcC,KAAK;AAC1B,OAAK,OAAOA,QAAQ,YAAYA,eAAeC,WAAWD,IAAIE,QAAQ,IAAA,IAAQ,IAAI;AAChF,WAAOF,IAAIG,MAAM,IAAA;;AAEnB,SAAOH;AACT;AASA,SAASI,kBAAkBC,OAAOC,MAAM;AACtC,QAAM,EAACrC,SAASsC,cAAcC,OAAAA,OAAAA,IAASF;AACvC,QAAMG,aAAaJ,MAAMK,eAAeH,YAAAA,EAAcE;AACtD,QAAM,EAACE,OAAOC,MAAAA,IAASH,WAAWI,iBAAiBL,MAAAA;AAEnD,SAAO;IACLH;IACAM;IACAG,QAAQL,WAAWM,UAAUP,MAAAA;IAC7BQ,KAAKX,MAAMY,KAAKC,SAASX,YAAa,EAACU,KAAKT,MAAM;IAClDW,gBAAgBP;IAChBQ,SAASX,WAAWY,WAAU;IAC9BC,WAAWd;IACXD;IACAtC;EACF;AACF;AAKA,SAASsD,eAAeC,SAASC,SAAS;AACxC,QAAMC,MAAMF,QAAQnB,MAAMqB;AAC1B,QAAM,EAACC,MAAMC,QAAQC,MAAAA,IAASL;AAC9B,QAAM,EAACM,UAAUC,UAAAA,IAAaN;AAC9B,QAAMO,WAAWC,OAAOR,QAAQO,QAAQ;AACxC,QAAME,YAAYD,OAAOR,QAAQS,SAAS;AAC1C,QAAMC,aAAaF,OAAOR,QAAQU,UAAU;AAC5C,QAAMC,iBAAiBP,MAAMpE;AAC7B,QAAM4E,kBAAkBT,OAAOnE;AAC/B,QAAM6E,oBAAoBX,KAAKlE;AAE/B,QAAM8E,UAAUC,UAAUf,QAAQc,OAAO;AACzC,MAAIE,SAASF,QAAQE;AACrB,MAAIC,QAAQ;AAGZ,MAAIC,qBAAqBhB,KAAKlD,OAAO,CAACV,OAAO6E,aAAa7E,QAAQ6E,SAASC,OAAOpF,SAASmF,SAASE,MAAMrF,SAASmF,SAASG,MAAMtF,QAAQ,CAAA;AAC1IkF,wBAAsBnB,QAAQwB,WAAWvF,SAAS+D,QAAQyB,UAAUxF;AAEpE,MAAI2E,gBAAgB;AAClBK,cAAUL,iBAAiBF,UAAUgB,cACnCd,iBAAiB,KAAKX,QAAQ0B,eAC/B1B,QAAQ2B;;AAEX,MAAIT,oBAAoB;AAEtB,UAAMU,iBAAiB5B,QAAQ6B,gBAAgBC,KAAKC,IAAIzB,WAAWC,SAASkB,UAAU,IAAIlB,SAASkB;AACnGT,cAAUH,oBAAoBe,kBAC5BV,qBAAqBL,qBAAqBN,SAASkB,cACnDP,qBAAqB,KAAKlB,QAAQgC;;AAEtC,MAAIpB,iBAAiB;AACnBI,cAAUhB,QAAQiC,kBACjBrB,kBAAkBF,WAAWe,cAC5Bb,kBAAkB,KAAKZ,QAAQkC;;AAInC,MAAIC,eAAe;AACnB,QAAMC,eAAe,SAASC,MAAM;AAClCpB,YAAQa,KAAKC,IAAId,OAAOhB,IAAIqC,YAAYD,IAAMpB,EAAAA,QAAQkB,YAAAA;EACxD;AAEAlC,MAAIsC,KAAI;AAERtC,MAAIuC,OAAO/B,UAAUgC;AACrBC,OAAK3C,QAAQK,OAAOgC,YAAAA;AAGpBnC,MAAIuC,OAAOjC,SAASkC;AACpBC,OAAK3C,QAAQwB,WAAWoB,OAAO5C,QAAQyB,SAAS,GAAGY,YAAAA;AAGnDD,iBAAenC,QAAQ6B,gBAAiBxB,WAAW,IAAIL,QAAQ4C,aAAc;AAC7EF,OAAKxC,MAAM,CAACiB,aAAa;AACvBuB,SAAKvB,SAASC,QAAQgB,YAAAA;AACtBM,SAAKvB,SAASE,OAAOe,YAAAA;AACrBM,SAAKvB,SAASG,OAAOc,YAAAA;EACvB,CAAA;AAGAD,iBAAe;AAGflC,MAAIuC,OAAO9B,WAAW+B;AACtBC,OAAK3C,QAAQI,QAAQiC,YAAAA;AAErBnC,MAAI4C,QAAO;AAGX5B,WAASH,QAAQG;AAEjB,SAAO;IAACA;IAAOD;EAAM;AACvB;AAEA,SAAS8B,gBAAgBlE,OAAO9B,MAAM;AACpC,QAAM,EAACT,GAAG2E,OAAAA,IAAUlE;AAEpB,MAAIT,IAAI2E,SAAS,GAAG;AAClB,WAAO;EACT,WAAW3E,IAAKuC,MAAMoC,SAASA,SAAS,GAAI;AAC1C,WAAO;;AAET,SAAO;AACT;AAEA,SAAS+B,oBAAoBC,QAAQpE,OAAOoB,SAASlD,MAAM;AACzD,QAAM,EAACD,GAAGoE,MAAAA,IAASnE;AACnB,QAAMmG,QAAQjD,QAAQkD,YAAYlD,QAAQmD;AAC1C,MAAIH,WAAW,UAAUnG,IAAIoE,QAAQgC,QAAQrE,MAAMqC,OAAO;AACxD,WAAO;;AAGT,MAAI+B,WAAW,WAAWnG,IAAIoE,QAAQgC,QAAQ,GAAG;AAC/C,WAAO;;AAEX;AAEA,SAASG,gBAAgBxE,OAAOoB,SAASlD,MAAMuG,QAAQ;AACrD,QAAM,EAACxG,GAAGoE,MAAAA,IAASnE;AACnB,QAAM,EAACmE,OAAOqC,YAAYC,WAAW,EAACC,MAAMC,MAAK,EAAC,IAAI7E;AACtD,MAAIoE,SAAS;AAEb,MAAIK,WAAW,UAAU;AACvBL,aAASnG,MAAM2G,OAAOC,SAAS,IAAI,SAAS;aACnC5G,KAAKoE,QAAQ,GAAG;AACzB+B,aAAS;EACX,WAAWnG,KAAKyG,aAAarC,QAAQ,GAAG;AACtC+B,aAAS;;AAGX,MAAID,oBAAoBC,QAAQpE,OAAOoB,SAASlD,IAAO,GAAA;AACrDkG,aAAS;;AAGX,SAAOA;AACT;AAKA,SAASU,mBAAmB9E,OAAOoB,SAASlD,MAAM;AAChD,QAAMuG,SAASvG,KAAKuG,UAAUrD,QAAQqD,UAAUP,gBAAgBlE,OAAO9B,IAAAA;AAEvE,SAAO;IACLkG,QAAQlG,KAAKkG,UAAUhD,QAAQgD,UAAUI,gBAAgBxE,OAAOoB,SAASlD,MAAMuG,MAAAA;IAC/EA;EACF;AACF;AAEA,SAASM,OAAO7G,MAAMkG,QAAQ;AAC5B,MAAI,EAACnG,GAAGoE,MAAAA,IAASnE;AACjB,MAAIkG,WAAW,SAAS;AACtBnG,SAAKoE;aACI+B,WAAW,UAAU;AAC9BnG,SAAMoE,QAAQ;;AAEhB,SAAOpE;AACT;AAEA,SAAS+G,OAAO9G,MAAMuG,QAAQQ,gBAAgB;AAE5C,MAAI,EAACxH,GAAG2E,OAAAA,IAAUlE;AAClB,MAAIuG,WAAW,OAAO;AACpBhH,SAAKwH;aACIR,WAAW,UAAU;AAC9BhH,SAAK2E,SAAS6C;SACT;AACLxH,SAAM2E,SAAS;;AAEjB,SAAO3E;AACT;AAKA,SAASyH,mBAAmB9D,SAASlD,MAAMiH,WAAWnF,OAAO;AAC3D,QAAM,EAACsE,WAAWC,cAAca,aAAAA,IAAgBhE;AAChD,QAAM,EAACgD,QAAQK,OAAAA,IAAUU;AACzB,QAAMF,iBAAiBX,YAAYC;AACnC,QAAM,EAACc,SAASC,UAAUC,YAAYC,YAAAA,IAAeC,cAAcL,YAAAA;AAEnE,MAAInH,IAAI8G,OAAO7G,MAAMkG,MAAAA;AACrB,QAAM3G,IAAIuH,OAAO9G,MAAMuG,QAAQQ,cAAAA;AAE/B,MAAIR,WAAW,UAAU;AACvB,QAAIL,WAAW,QAAQ;AACrBnG,WAAKgH;eACIb,WAAW,SAAS;AAC7BnG,WAAKgH;;aAEEb,WAAW,QAAQ;AAC5BnG,SAAKiF,KAAKC,IAAIkC,SAASE,UAAcjB,IAAAA;aAC5BF,WAAW,SAAS;AAC7BnG,SAAKiF,KAAKC,IAAImC,UAAUE,WAAelB,IAAAA;;AAGzC,SAAO;IACLrG,GAAGyH,YAAYzH,GAAG,GAAG+B,MAAMqC,QAAQnE,KAAKmE,KAAK;IAC7C5E,GAAGiI,YAAYjI,GAAG,GAAGuC,MAAMoC,SAASlE,KAAKkE,MAAM;EACjD;AACF;AAEA,SAASuD,YAAYxE,SAASyE,OAAOxE,SAAS;AAC5C,QAAMc,UAAUC,UAAUf,QAAQc,OAAO;AAEzC,SAAO0D,UAAU,WACbzE,QAAQlD,IAAIkD,QAAQkB,QAAQ,IAC5BuD,UAAU,UACRzE,QAAQlD,IAAIkD,QAAQkB,QAAQH,QAAQ2C,QACpC1D,QAAQlD,IAAIiE,QAAQ0C;AAC5B;AAKA,SAASiB,wBAAwBC,WAAU;AACzC,SAAO5G,aAAa,CAAA,GAAIQ,cAAcoG,SAAAA,CAAAA;AACxC;AAEA,SAASC,qBAAqBC,QAAQ7E,SAAS8E,cAAc;AAC3D,SAAOC,cAAcF,QAAQ;IAC3B7E;IACA8E;IACAE,MAAM;EACR,CAAA;AACF;AAEA,SAASC,kBAAkBC,WAAWC,SAAS;AAC7C,QAAMC,WAAWD,WAAWA,QAAQvF,WAAWuF,QAAQvF,QAAQI,WAAWmF,QAAQvF,QAAQI,QAAQkF;AAClG,SAAOE,WAAWF,UAAUE,SAASA,QAAAA,IAAYF;AACnD;AAEA,IAAMG,mBAAmB;EAEvBC,aAAaC;EACblF,MAAMyE,cAAc;AAClB,QAAIA,aAAa7I,SAAS,GAAG;AAC3B,YAAM6C,OAAOgG,aAAa,CAAE;AAC5B,YAAMU,SAAS1G,KAAKD,MAAMY,KAAK+F;AAC/B,YAAMC,aAAaD,SAASA,OAAOvJ,SAAS;AAE5C,UAAI,QAAQ,KAAKgE,WAAW,KAAKA,QAAQyF,SAAS,WAAW;AAC3D,eAAO5G,KAAKc,QAAQT,SAAS;iBACpBL,KAAKK,OAAO;AACrB,eAAOL,KAAKK;MACd,WAAWsG,aAAa,KAAK3G,KAAKgB,YAAY2F,YAAY;AACxD,eAAOD,OAAO1G,KAAKgB,SAAS;;;AAIhC,WAAO;EACT;EACA6F,YAAYJ;EAGZ/D,YAAY+D;EAGZK,aAAaL;EACbpG,MAAM0G,aAAa;AACjB,QAAI,QAAQ,KAAK5F,WAAW,KAAKA,QAAQyF,SAAS,WAAW;AAC3D,aAAOG,YAAY1G,QAAQ,OAAO0G,YAAYlG,kBAAkBkG,YAAYlG;;AAG9E,QAAIR,QAAQ0G,YAAYjG,QAAQT,SAAS;AAEzC,QAAIA,OAAO;AACTA,eAAS;;AAEX,UAAMC,QAAQyG,YAAYlG;AAC1B,QAAI,CAACmG,cAAc1G,KAAQ,GAAA;AACzBD,eAASC;;AAEX,WAAOD;EACT;EACA4G,WAAWF,aAAa;AACtB,UAAMG,QAAOH,YAAYhH,MAAMK,eAAe2G,YAAY9G,YAAY;AACtE,UAAMkB,UAAU+F,MAAK/G,WAAWgH,SAASJ,YAAY/F,SAAS;AAC9D,WAAO;MACLoG,aAAajG,QAAQiG;MACrBC,iBAAiBlG,QAAQkG;MACzBC,aAAanG,QAAQmG;MACrBC,YAAYpG,QAAQoG;MACpBC,kBAAkBrG,QAAQqG;MAC1BC,cAAc;IAChB;EACF;EACAC,iBAAiB;AACf,WAAO,KAAKvG,QAAQwG;EACtB;EACAC,gBAAgBb,aAAa;AAC3B,UAAMG,QAAOH,YAAYhH,MAAMK,eAAe2G,YAAY9G,YAAY;AACtE,UAAMkB,UAAU+F,MAAK/G,WAAWgH,SAASJ,YAAY/F,SAAS;AAC9D,WAAO;MACL6G,YAAY1G,QAAQ0G;MACpBC,UAAU3G,QAAQ2G;IACpB;EACF;EACAC,YAAYtB;EAGZ9D,WAAW8D;EAGXuB,cAAcvB;EACdnF,QAAQmF;EACRwB,aAAaxB;AACf;AAWA,SAASyB,2BAA2B9B,WAAW+B,MAAM/G,KAAKgH,KAAK;AAC7D,QAAMC,SAASjC,UAAU+B,IAAAA,EAAMG,KAAKlH,KAAKgH,GAAAA;AAEzC,MAAI,OAAOC,WAAW,aAAa;AACjC,WAAO9B,iBAAiB4B,IAAAA,EAAMG,KAAKlH,KAAKgH,GAAAA;;AAG1C,SAAOC;AACT;AAEO,IAAME,WAAN,cAAsBC,QAAAA;EAO3BC,YAAYC,QAAQ;AAClB,UAAK;AAEL,SAAKC,UAAU;AACf,SAAKC,UAAU,CAAA;AACf,SAAKC,iBAAiBC;AACtB,SAAKC,QAAQD;AACb,SAAKE,oBAAoBF;AACzB,SAAKG,gBAAgB,CAAA;AACrB,SAAKC,cAAcJ;AACnB,SAAKK,WAAWL;AAChB,SAAK/I,QAAQ2I,OAAO3I;AACpB,SAAKoB,UAAUuH,OAAOvH;AACtB,SAAKiI,aAAaN;AAClB,SAAKvH,QAAQuH;AACb,SAAKpG,aAAaoG;AAClB,SAAKzH,OAAOyH;AACZ,SAAKnG,YAAYmG;AACjB,SAAKxH,SAASwH;AACd,SAAK3E,SAAS2E;AACd,SAAKtE,SAASsE;AACd,SAAK9K,IAAI8K;AACT,SAAKtL,IAAIsL;AACT,SAAK3G,SAAS2G;AACd,SAAK1G,QAAQ0G;AACb,SAAKO,SAASP;AACd,SAAKQ,SAASR;AAGd,SAAKS,cAAcT;AACnB,SAAKU,mBAAmBV;AACxB,SAAKW,kBAAkBX;EACzB;EAEAY,WAAWvI,SAAS;AAClB,SAAKA,UAAUA;AACf,SAAK6H,oBAAoBF;AACzB,SAAKK,WAAWL;EAClB;EAKAa,qBAAqB;AACnB,UAAMC,SAAS,KAAKZ;AAEpB,QAAIY,QAAQ;AACV,aAAOA;;AAGT,UAAM7J,QAAQ,KAAKA;AACnB,UAAMoB,UAAU,KAAKA,QAAQ0I,WAAW,KAAKC,WAAU,CAAA;AACvD,UAAMC,OAAO5I,QAAQ6I,WAAWjK,MAAMoB,QAAQ8I,aAAa9I,QAAQ+I;AACnE,UAAMA,aAAa,IAAIC,WAAW,KAAKpK,OAAOgK,IAAAA;AAC9C,QAAIA,KAAKK,YAAY;AACnB,WAAKpB,oBAAoBqB,OAAOC,OAAOJ,UAAAA;;AAGzC,WAAOA;EACT;EAKAJ,aAAa;AACX,WAAO,KAAKX,aACZ,KAAKA,WAAWrD,qBAAqB,KAAK/F,MAAM+J,WAAU,GAAI,MAAM,KAAKb,aAAa;EACxF;EAEAsB,SAASlE,SAASlF,SAAS;AACzB,UAAM,EAACiF,UAAS,IAAIjF;AAEpB,UAAMqF,cAAc0B,2BAA2B9B,WAAW,eAAe,MAAMC,OAAAA;AAC/E,UAAM9E,QAAQ2G,2BAA2B9B,WAAW,SAAS,MAAMC,OAAAA;AACnE,UAAMQ,aAAaqB,2BAA2B9B,WAAW,cAAc,MAAMC,OAAAA;AAE7E,QAAI7D,QAAQ,CAAA;AACZA,YAAQvD,aAAauD,OAAO/C,cAAc+G,WAAAA,CAAAA;AAC1ChE,YAAQvD,aAAauD,OAAO/C,cAAc8B,KAAAA,CAAAA;AAC1CiB,YAAQvD,aAAauD,OAAO/C,cAAcoH,UAAAA,CAAAA;AAE1C,WAAOrE;EACT;EAEAgI,cAAcxE,cAAc7E,SAAS;AACnC,WAAOyE,wBACLsC,2BAA2B/G,QAAQiF,WAAW,cAAc,MAAMJ,YAAAA,CAAAA;EAEtE;EAEAyE,QAAQzE,cAAc7E,SAAS;AAC7B,UAAM,EAACiF,UAAS,IAAIjF;AACpB,UAAMuJ,YAAY,CAAA;AAElB7G,SAAKmC,cAAc,CAACK,YAAY;AAC9B,YAAM/D,WAAW;QACfC,QAAQ,CAAA;QACRC,OAAO,CAAA;QACPC,OAAO,CAAA;MACT;AACA,YAAMkI,SAASxE,kBAAkBC,WAAWC,OAAAA;AAC5CpH,mBAAaqD,SAASC,QAAQ9C,cAAcyI,2BAA2ByC,QAAQ,eAAe,MAAMtE,OAAAA,CAAAA,CAAAA;AACpGpH,mBAAaqD,SAASE,OAAO0F,2BAA2ByC,QAAQ,SAAS,MAAMtE,OAAAA,CAAAA;AAC/EpH,mBAAaqD,SAASG,OAAOhD,cAAcyI,2BAA2ByC,QAAQ,cAAc,MAAMtE,OAAAA,CAAAA,CAAAA;AAElGqE,gBAAUnL,KAAK+C,QAAAA;IACjB,CAAA;AAEA,WAAOoI;EACT;EAEAE,aAAa5E,cAAc7E,SAAS;AAClC,WAAOyE,wBACLsC,2BAA2B/G,QAAQiF,WAAW,aAAa,MAAMJ,YAAAA,CAAAA;EAErE;EAGA6E,UAAU7E,cAAc7E,SAAS;AAC/B,UAAM,EAACiF,UAAS,IAAIjF;AAEpB,UAAM6G,eAAeE,2BAA2B9B,WAAW,gBAAgB,MAAMJ,YAAAA;AACjF,UAAM1E,SAAS4G,2BAA2B9B,WAAW,UAAU,MAAMJ,YAAAA;AACrE,UAAMiC,cAAcC,2BAA2B9B,WAAW,eAAe,MAAMJ,YAAAA;AAE/E,QAAIxD,QAAQ,CAAA;AACZA,YAAQvD,aAAauD,OAAO/C,cAAcuI,YAAAA,CAAAA;AAC1CxF,YAAQvD,aAAauD,OAAO/C,cAAc6B,MAAAA,CAAAA;AAC1CkB,YAAQvD,aAAauD,OAAO/C,cAAcwI,WAAAA,CAAAA;AAE1C,WAAOzF;EACT;EAKAsI,aAAa3J,SAAS;AACpB,UAAM4J,SAAS,KAAKnC;AACpB,UAAMjI,OAAO,KAAKZ,MAAMY;AACxB,UAAM4I,cAAc,CAAA;AACpB,UAAMC,mBAAmB,CAAA;AACzB,UAAMC,kBAAkB,CAAA;AACxB,QAAIzD,eAAe,CAAA;AACnB,QAAI5I,GAAGC;AAEP,SAAKD,IAAI,GAAGC,MAAM0N,OAAO5N,QAAQC,IAAIC,KAAK,EAAED,GAAG;AAC7C4I,mBAAazG,KAAKO,kBAAkB,KAAKC,OAAOgL,OAAO3N,CAAE,CAAA,CAAA;IAC3D;AAGA,QAAI+D,QAAQ6J,QAAQ;AAClBhF,qBAAeA,aAAagF,OAAO,CAACrN,SAASuC,QAAO+K,UAAU9J,QAAQ6J,OAAOrN,SAASuC,QAAO+K,OAAOtK,IAAAA,CAAAA;;AAItG,QAAIQ,QAAQ+J,UAAU;AACpBlF,qBAAeA,aAAamF,KAAK,CAAC/M,GAAGC,MAAM8C,QAAQ+J,SAAS9M,GAAGC,GAAGsC,IAAAA,CAAAA;;AAIpEkD,SAAKmC,cAAc,CAACK,YAAY;AAC9B,YAAMsE,SAASxE,kBAAkBhF,QAAQiF,WAAWC,OAAAA;AACpDkD,kBAAYhK,KAAK2I,2BAA2ByC,QAAQ,cAAc,MAAMtE,OAAAA,CAAAA;AACxEmD,uBAAiBjK,KAAK2I,2BAA2ByC,QAAQ,mBAAmB,MAAMtE,OAAAA,CAAAA;AAClFoD,sBAAgBlK,KAAK2I,2BAA2ByC,QAAQ,kBAAkB,MAAMtE,OAAAA,CAAAA;IAClF,CAAA;AAEA,SAAKkD,cAAcA;AACnB,SAAKC,mBAAmBA;AACxB,SAAKC,kBAAkBA;AACvB,SAAKL,aAAapD;AAClB,WAAOA;EACT;EAEAoF,OAAOC,SAASC,QAAQ;AACtB,UAAMnK,UAAU,KAAKA,QAAQ0I,WAAW,KAAKC,WAAU,CAAA;AACvD,UAAMiB,SAAS,KAAKnC;AACpB,QAAI2C;AACJ,QAAIvF,eAAe,CAAA;AAEnB,QAAI,CAAC+E,OAAO5N,QAAQ;AAClB,UAAI,KAAKwL,YAAY,GAAG;AACtB4C,qBAAa;UACX5C,SAAS;QACX;;WAEG;AACL,YAAM6C,WAAWxO,YAAYmE,QAAQqK,QAAQ,EAAElD,KAAK,MAAMyC,QAAQ,KAAKlC,cAAc;AACrF7C,qBAAe,KAAK8E,aAAa3J,OAAAA;AAEjC,WAAKI,QAAQ,KAAKgJ,SAASvE,cAAc7E,OAAAA;AACzC,WAAKuB,aAAa,KAAK8H,cAAcxE,cAAc7E,OAAAA;AACnD,WAAKE,OAAO,KAAKoJ,QAAQzE,cAAc7E,OAAAA;AACvC,WAAKwB,YAAY,KAAKiI,aAAa5E,cAAc7E,OAAAA;AACjD,WAAKG,SAAS,KAAKuJ,UAAU7E,cAAc7E,OAAAA;AAE3C,YAAMlD,OAAO,KAAK8K,QAAQ9H,eAAe,MAAME,OAAAA;AAC/C,YAAMsK,kBAAkBpB,OAAOqB,OAAO,CAAA,GAAIF,UAAUvN,IAAAA;AACpD,YAAMiH,YAAYL,mBAAmB,KAAK9E,OAAOoB,SAASsK,eAAAA;AAC1D,YAAME,kBAAkB1G,mBAAmB9D,SAASsK,iBAAiBvG,WAAW,KAAKnF,KAAK;AAE1F,WAAKoE,SAASe,UAAUf;AACxB,WAAKK,SAASU,UAAUV;AAExB+G,mBAAa;QACX5C,SAAS;QACT3K,GAAG2N,gBAAgB3N;QACnBR,GAAGmO,gBAAgBnO;QACnB4E,OAAOnE,KAAKmE;QACZD,QAAQlE,KAAKkE;QACbkH,QAAQmC,SAASxN;QACjBsL,QAAQkC,SAAShO;MACnB;;AAGF,SAAKyL,gBAAgBjD;AACrB,SAAKmD,WAAWL;AAEhB,QAAIyC,YAAY;AACd,WAAK5B,mBAAkB,EAAGyB,OAAO,MAAMG,UAAAA;;AAGzC,QAAIF,WAAWlK,QAAQyK,UAAU;AAC/BzK,cAAQyK,SAAStD,KAAK,MAAM;QAACvI,OAAO,KAAKA;QAAOmB,SAAS;QAAMoK;MAAM,CAAA;;EAEzE;EAEAO,UAAUC,cAAc1K,KAAKnD,MAAMkD,SAAS;AAC1C,UAAM4K,gBAAgB,KAAKC,iBAAiBF,cAAc7N,MAAMkD,OAAAA;AAEhEC,QAAI6K,OAAOF,cAAcG,IAAIH,cAAcI,EAAE;AAC7C/K,QAAI6K,OAAOF,cAAcK,IAAIL,cAAcM,EAAE;AAC7CjL,QAAI6K,OAAOF,cAAcO,IAAIP,cAAcQ,EAAE;EAC/C;EAEAP,iBAAiBF,cAAc7N,MAAMkD,SAAS;AAC5C,UAAM,EAACgD,QAAQK,OAAM,IAAI;AACzB,UAAM,EAACH,WAAWc,aAAAA,IAAgBhE;AAClC,UAAM,EAACiE,SAASC,UAAUC,YAAYC,YAAAA,IAAeC,cAAcL,YAAAA;AACnE,UAAM,EAACnH,GAAGwO,KAAKhP,GAAGiP,IAAAA,IAAOX;AACzB,UAAM,EAAC1J,OAAOD,OAAAA,IAAUlE;AACxB,QAAIiO,IAAIE,IAAIE,IAAIH,IAAIE,IAAIE;AAExB,QAAI/H,WAAW,UAAU;AACvB6H,WAAKI,MAAOtK,SAAS;AAErB,UAAIgC,WAAW,QAAQ;AACrB+H,aAAKM;AACLJ,aAAKF,KAAK7H;AAGV8H,aAAKE,KAAKhI;AACVkI,aAAKF,KAAKhI;aACL;AACL6H,aAAKM,MAAMpK;AACXgK,aAAKF,KAAK7H;AAGV8H,aAAKE,KAAKhI;AACVkI,aAAKF,KAAKhI;;AAGZiI,WAAKJ;WACA;AACL,UAAI/H,WAAW,QAAQ;AACrBiI,aAAKI,MAAMvJ,KAAKC,IAAIkC,SAASE,UAAejB,IAAAA;iBACnCF,WAAW,SAAS;AAC7BiI,aAAKI,MAAMpK,QAAQa,KAAKC,IAAImC,UAAUE,WAAelB,IAAAA;aAChD;AACL+H,aAAK,KAAK/C;;AAGZ,UAAI7E,WAAW,OAAO;AACpB2H,aAAKM;AACLJ,aAAKF,KAAK9H;AAGV6H,aAAKE,KAAK/H;AACViI,aAAKF,KAAK/H;aACL;AACL8H,aAAKM,MAAMtK;AACXkK,aAAKF,KAAK9H;AAGV6H,aAAKE,KAAK/H;AACViI,aAAKF,KAAK/H;;AAEZkI,WAAKJ;;AAEP,WAAO;MAACD;MAAIE;MAAIE;MAAIH;MAAIE;MAAIE;IAAE;EAChC;EAEAG,UAAUC,IAAIvL,KAAKD,SAAS;AAC1B,UAAMI,QAAQ,KAAKA;AACnB,UAAMpE,SAASoE,MAAMpE;AACrB,QAAIyE,WAAWiB,cAAczF;AAE7B,QAAID,QAAQ;AACV,YAAMyP,YAAYC,cAAc1L,QAAQ2L,KAAK,KAAK9O,GAAG,KAAKoE,KAAK;AAE/DuK,SAAG3O,IAAI0H,YAAY,MAAMvE,QAAQ4L,YAAY5L,OAAAA;AAE7CC,UAAI4L,YAAYJ,UAAUI,UAAU7L,QAAQ4L,UAAU;AACtD3L,UAAI6L,eAAe;AAEnBrL,kBAAYD,OAAOR,QAAQS,SAAS;AACpCiB,qBAAe1B,QAAQ0B;AAEvBzB,UAAI8L,YAAY/L,QAAQgM;AACxB/L,UAAIuC,OAAO/B,UAAUgC;AAErB,WAAKxG,IAAI,GAAGA,IAAID,QAAQ,EAAEC,GAAG;AAC3BgE,YAAIgM,SAAS7L,MAAMnE,CAAAA,GAAIwP,UAAU5O,EAAE2O,GAAG3O,CAAC,GAAG2O,GAAGnP,IAAIoE,UAAUgB,aAAa,CAAA;AACxE+J,WAAGnP,KAAKoE,UAAUgB,aAAaC;AAE/B,YAAIzF,IAAI,MAAMD,QAAQ;AACpBwP,aAAGnP,KAAK2D,QAAQ2B,oBAAoBD;;MAExC;;EAEJ;EAKAwK,cAAcjM,KAAKuL,IAAIvP,GAAGwP,WAAWzL,SAAS;AAC5C,UAAM8F,aAAa,KAAKsC,YAAYnM,CAAE;AACtC,UAAMwK,kBAAkB,KAAK4B,iBAAiBpM,CAAE;AAChD,UAAM,EAACqE,WAAWD,SAAAA,IAAYL;AAC9B,UAAMO,WAAWC,OAAOR,QAAQO,QAAQ;AACxC,UAAM4L,SAAS5H,YAAY,MAAM,QAAQvE,OAAAA;AACzC,UAAMoM,YAAYX,UAAU5O,EAAEsP,MAAAA;AAC9B,UAAME,UAAU/L,YAAYC,SAASkB,cAAclB,SAASkB,aAAanB,aAAa,IAAI;AAC1F,UAAMgM,SAASd,GAAGnP,IAAIgQ;AAEtB,QAAIrM,QAAQuM,eAAe;AACzB,YAAMC,cAAc;QAClBC,QAAQ3K,KAAK4K,IAAIrM,UAAUC,SAAa,IAAA;QACxCoG,YAAYD,gBAAgBC;QAC5BC,UAAUF,gBAAgBE;QAC1BR,aAAa;MACf;AAGA,YAAMwG,UAAUlB,UAAUmB,WAAWR,WAAW/L,QAAAA,IAAYA,WAAW;AACvE,YAAMwM,UAAUP,SAAShM,YAAY;AAGrCL,UAAI6M,cAAc9M,QAAQ+M;AAC1B9M,UAAI8L,YAAY/L,QAAQ+M;AACxBC,gBAAU/M,KAAKuM,aAAaG,SAASE,OAAAA;AAGrC5M,UAAI6M,cAAchH,WAAWG;AAC7BhG,UAAI8L,YAAYjG,WAAWI;AAC3B8G,gBAAU/M,KAAKuM,aAAaG,SAASE,OAAAA;WAChC;AAEL5M,UAAIgN,YAAYC,SAASpH,WAAWK,WAAW,IAAIrE,KAAKC,IAAOmH,GAAAA,OAAOiE,OAAOrH,WAAWK,WAAW,CAAML,IAAAA,WAAWK,eAAe;AACnIlG,UAAI6M,cAAchH,WAAWG;AAC7BhG,UAAImN,YAAYtH,WAAWM,cAAc,CAAA,CAAE;AAC3CnG,UAAIoN,iBAAiBvH,WAAWO,oBAAoB;AAGpD,YAAMiH,SAAS7B,UAAUmB,WAAWR,WAAW/L,QAAAA;AAC/C,YAAMkN,SAAS9B,UAAUmB,WAAWnB,UAAU+B,MAAMpB,WAAW,CAAA,GAAI/L,WAAW,CAAA;AAC9E,YAAMiG,eAAejC,cAAcyB,WAAWQ,YAAY;AAE1D,UAAI4C,OAAOiE,OAAO7G,YAAAA,EAAcmH,KAAKC,CAAAA,MAAKA,MAAM,CAAI,GAAA;AAClDzN,YAAI0N,UAAS;AACb1N,YAAI8L,YAAY/L,QAAQ+M;AACxBa,2BAAmB3N,KAAK;UACtBpD,GAAGyQ;UACHjR,GAAGiQ;UACHuB,GAAGxN;UACHyN,GAAGxN;UACHmM,QAAQnG;QACV,CAAA;AACArG,YAAI8N,KAAI;AACR9N,YAAI+N,OAAM;AAGV/N,YAAI8L,YAAYjG,WAAWI;AAC3BjG,YAAI0N,UAAS;AACbC,2BAAmB3N,KAAK;UACtBpD,GAAG0Q;UACHlR,GAAGiQ,SAAS;UACZuB,GAAGxN,WAAW;UACdyN,GAAGxN,YAAY;UACfmM,QAAQnG;QACV,CAAA;AACArG,YAAI8N,KAAI;aACH;AAEL9N,YAAI8L,YAAY/L,QAAQ+M;AACxB9M,YAAIgO,SAASX,QAAQhB,QAAQjM,UAAUC,SAAAA;AACvCL,YAAIiO,WAAWZ,QAAQhB,QAAQjM,UAAUC,SAAAA;AAEzCL,YAAI8L,YAAYjG,WAAWI;AAC3BjG,YAAIgO,SAASV,QAAQjB,SAAS,GAAGjM,WAAW,GAAGC,YAAY,CAAA;;;AAK/DL,QAAI8L,YAAY,KAAKzD,gBAAgBrM,CAAE;EACzC;EAEAkS,SAAS3C,IAAIvL,KAAKD,SAAS;AACzB,UAAM,EAACE,KAAAA,IAAQ;AACf,UAAM,EAAC8B,aAAaoM,WAAWvM,eAAevB,WAAWD,UAAUuC,WAAAA,IAAc5C;AACjF,UAAMO,WAAWC,OAAOR,QAAQO,QAAQ;AACxC,QAAIqB,iBAAiBrB,SAASkB;AAC9B,QAAI4M,eAAe;AAEnB,UAAM5C,YAAYC,cAAc1L,QAAQ2L,KAAK,KAAK9O,GAAG,KAAKoE,KAAK;AAE/D,UAAMqN,iBAAiB,SAASjM,MAAM;AACpCpC,UAAIgM,SAAS5J,MAAMoJ,UAAU5O,EAAE2O,GAAG3O,IAAIwR,YAAAA,GAAe7C,GAAGnP,IAAIuF,iBAAiB,CAAA;AAC7E4J,SAAGnP,KAAKuF,iBAAiBI;IAC3B;AAEA,UAAMuM,0BAA0B9C,UAAUI,UAAUuC,SAAAA;AACpD,QAAIjN,UAAUqN,WAAWnN,OAAOpF,GAAGwS,GAAGC,MAAMC;AAE5C1O,QAAI4L,YAAYuC;AAChBnO,QAAI6L,eAAe;AACnB7L,QAAIuC,OAAOjC,SAASkC;AAEpB+I,OAAG3O,IAAI0H,YAAY,MAAMgK,yBAAyBvO,OAAAA;AAGlDC,QAAI8L,YAAY/L,QAAQwG;AACxB9D,SAAK,KAAKnB,YAAY+M,cAAAA;AAEtBD,mBAAexM,iBAAiB0M,4BAA4B,UACxDH,cAAc,WAAY/N,WAAW,IAAIuC,aAAevC,WAAW,IAAIuC,aACvE;AAGJ,SAAK3G,IAAI,GAAGyS,OAAOxO,KAAKlE,QAAQC,IAAIyS,MAAM,EAAEzS,GAAG;AAC7CkF,iBAAWjB,KAAKjE,CAAE;AAClBuS,kBAAY,KAAKlG,gBAAgBrM,CAAE;AAEnCgE,UAAI8L,YAAYyC;AAChB9L,WAAKvB,SAASC,QAAQkN,cAAAA;AAEtBjN,cAAQF,SAASE;AAEjB,UAAIQ,iBAAiBR,MAAMrF,QAAQ;AACjC,aAAKkQ,cAAcjM,KAAKuL,IAAIvP,GAAGwP,WAAWzL,OAAAA;AAC1C4B,yBAAiBE,KAAKC,IAAIxB,SAASkB,YAAYnB,SAAAA;;AAGjD,WAAKmO,IAAI,GAAGE,OAAOtN,MAAMrF,QAAQyS,IAAIE,MAAM,EAAEF,GAAG;AAC9CH,uBAAejN,MAAMoN,CAAE,CAAA;AAEvB7M,yBAAiBrB,SAASkB;MAC5B;AAEAiB,WAAKvB,SAASG,OAAOgN,cAAAA;IACvB;AAGAD,mBAAe;AACfzM,qBAAiBrB,SAASkB;AAG1BiB,SAAK,KAAKlB,WAAW8M,cAAAA;AACrB9C,OAAGnP,KAAK2F;EACV;EAEA4M,WAAWpD,IAAIvL,KAAKD,SAAS;AAC3B,UAAMG,SAAS,KAAKA;AACpB,UAAMnE,SAASmE,OAAOnE;AACtB,QAAI0E,YAAYzE;AAEhB,QAAID,QAAQ;AACV,YAAMyP,YAAYC,cAAc1L,QAAQ2L,KAAK,KAAK9O,GAAG,KAAKoE,KAAK;AAE/DuK,SAAG3O,IAAI0H,YAAY,MAAMvE,QAAQ6O,aAAa7O,OAAAA;AAC9CwL,SAAGnP,KAAK2D,QAAQiC;AAEhBhC,UAAI4L,YAAYJ,UAAUI,UAAU7L,QAAQ6O,WAAW;AACvD5O,UAAI6L,eAAe;AAEnBpL,mBAAaF,OAAOR,QAAQU,UAAU;AAEtCT,UAAI8L,YAAY/L,QAAQ8O;AACxB7O,UAAIuC,OAAO9B,WAAW+B;AAEtB,WAAKxG,IAAI,GAAGA,IAAID,QAAQ,EAAEC,GAAG;AAC3BgE,YAAIgM,SAAS9L,OAAOlE,CAAAA,GAAIwP,UAAU5O,EAAE2O,GAAG3O,CAAC,GAAG2O,GAAGnP,IAAIqE,WAAWe,aAAa,CAAA;AAC1E+J,WAAGnP,KAAKqE,WAAWe,aAAazB,QAAQkC;MAC1C;;EAEJ;EAEA6M,eAAevD,IAAIvL,KAAK+O,aAAahP,SAAS;AAC5C,UAAM,EAACgD,QAAQK,OAAM,IAAI;AACzB,UAAM,EAACxG,GAAGR,EAAAA,IAAKmP;AACf,UAAM,EAACvK,OAAOD,OAAAA,IAAUgO;AACxB,UAAM,EAAC/K,SAASC,UAAUC,YAAYC,YAAAA,IAAeC,cAAcrE,QAAQgE,YAAY;AAEvF/D,QAAI8L,YAAY/L,QAAQkG;AACxBjG,QAAI6M,cAAc9M,QAAQiG;AAC1BhG,QAAIgN,YAAYjN,QAAQmG;AAExBlG,QAAI0N,UAAS;AACb1N,QAAIgP,OAAOpS,IAAIoH,SAAS5H,CAAAA;AACxB,QAAIgH,WAAW,OAAO;AACpB,WAAKqH,UAAUc,IAAIvL,KAAK+O,aAAahP,OAAAA;;AAEvCC,QAAI6K,OAAOjO,IAAIoE,QAAQiD,UAAU7H,CAAAA;AACjC4D,QAAIiP,iBAAiBrS,IAAIoE,OAAO5E,GAAGQ,IAAIoE,OAAO5E,IAAI6H,QAAAA;AAClD,QAAIb,WAAW,YAAYL,WAAW,SAAS;AAC7C,WAAK0H,UAAUc,IAAIvL,KAAK+O,aAAahP,OAAAA;;AAEvCC,QAAI6K,OAAOjO,IAAIoE,OAAO5E,IAAI2E,SAASoD,WAAAA;AACnCnE,QAAIiP,iBAAiBrS,IAAIoE,OAAO5E,IAAI2E,QAAQnE,IAAIoE,QAAQmD,aAAa/H,IAAI2E,MAAAA;AACzE,QAAIqC,WAAW,UAAU;AACvB,WAAKqH,UAAUc,IAAIvL,KAAK+O,aAAahP,OAAAA;;AAEvCC,QAAI6K,OAAOjO,IAAIsH,YAAY9H,IAAI2E,MAAAA;AAC/Bf,QAAIiP,iBAAiBrS,GAAGR,IAAI2E,QAAQnE,GAAGR,IAAI2E,SAASmD,UAAAA;AACpD,QAAId,WAAW,YAAYL,WAAW,QAAQ;AAC5C,WAAK0H,UAAUc,IAAIvL,KAAK+O,aAAahP,OAAAA;;AAEvCC,QAAI6K,OAAOjO,GAAGR,IAAI4H,OAAAA;AAClBhE,QAAIiP,iBAAiBrS,GAAGR,GAAGQ,IAAIoH,SAAS5H,CAAAA;AACxC4D,QAAIkP,UAAS;AAEblP,QAAI8N,KAAI;AAER,QAAI/N,QAAQmG,cAAc,GAAG;AAC3BlG,UAAI+N,OAAM;;EAEd;EAMAoB,uBAAuBpP,SAAS;AAC9B,UAAMpB,QAAQ,KAAKA;AACnB,UAAMyQ,QAAQ,KAAKtH;AACnB,UAAMuH,QAAQD,SAASA,MAAMxS;AAC7B,UAAM0S,QAAQF,SAASA,MAAMhT;AAC7B,QAAIiT,SAASC,OAAO;AAClB,YAAMlF,WAAWxO,YAAYmE,QAAQqK,QAAQ,EAAElD,KAAK,MAAM,KAAKM,SAAS,KAAKC,cAAc;AAC3F,UAAI,CAAC2C,UAAU;AACb;;AAEF,YAAMvN,OAAO,KAAK8K,QAAQ9H,eAAe,MAAME,OAAAA;AAC/C,YAAMsK,kBAAkBpB,OAAOqB,OAAO,CAAA,GAAIF,UAAU,KAAKzC,KAAK;AAC9D,YAAM7D,YAAYL,mBAAmB9E,OAAOoB,SAASsK,eAAAA;AACrD,YAAMkF,QAAQ1L,mBAAmB9D,SAASsK,iBAAiBvG,WAAWnF,KAAAA;AACtE,UAAI0Q,MAAMG,QAAQD,MAAM3S,KAAK0S,MAAME,QAAQD,MAAMnT,GAAG;AAClD,aAAK2G,SAASe,UAAUf;AACxB,aAAKK,SAASU,UAAUV;AACxB,aAAKpC,QAAQnE,KAAKmE;AAClB,aAAKD,SAASlE,KAAKkE;AACnB,aAAKkH,SAASmC,SAASxN;AACvB,aAAKsL,SAASkC,SAAShO;AACvB,aAAKmM,mBAAkB,EAAGyB,OAAO,MAAMuF,KAAAA;;;EAG7C;EAMAE,cAAc;AACZ,WAAO,CAAC,CAAC,KAAKlI;EAChB;EAEAmI,KAAK1P,KAAK;AACR,UAAMD,UAAU,KAAKA,QAAQ0I,WAAW,KAAKC,WAAU,CAAA;AACvD,QAAInB,UAAU,KAAKA;AAEnB,QAAI,CAACA,SAAS;AACZ;;AAGF,SAAK4H,uBAAuBpP,OAAAA;AAE5B,UAAMgP,cAAc;MAClB/N,OAAO,KAAKA;MACZD,QAAQ,KAAKA;IACf;AACA,UAAMwK,KAAK;MACT3O,GAAG,KAAKA;MACRR,GAAG,KAAKA;IACV;AAGAmL,cAAU1F,KAAK8N,IAAIpI,OAAW,IAAA,OAAO,IAAIA;AAEzC,UAAM1G,UAAUC,UAAUf,QAAQc,OAAO;AAGzC,UAAM+O,oBAAoB,KAAKzP,MAAMpE,UAAU,KAAKuF,WAAWvF,UAAU,KAAKkE,KAAKlE,UAAU,KAAKwF,UAAUxF,UAAU,KAAKmE,OAAOnE;AAElI,QAAIgE,QAAQ6I,WAAWgH,mBAAmB;AACxC5P,UAAIsC,KAAI;AACRtC,UAAI6P,cAActI;AAGlB,WAAKuH,eAAevD,IAAIvL,KAAK+O,aAAahP,OAAAA;AAE1C+P,4BAAsB9P,KAAKD,QAAQgQ,aAAa;AAEhDxE,SAAGnP,KAAKyE,QAAQmP;AAGhB,WAAK1E,UAAUC,IAAIvL,KAAKD,OAAAA;AAGxB,WAAKmO,SAAS3C,IAAIvL,KAAKD,OAAAA;AAGvB,WAAK4O,WAAWpD,IAAIvL,KAAKD,OAAAA;AAEzBkQ,2BAAqBjQ,KAAKD,QAAQgQ,aAAa;AAE/C/P,UAAI4C,QAAO;;EAEf;EAMAsN,oBAAoB;AAClB,WAAO,KAAK1I,WAAW,CAAA;EACzB;EAOA2I,kBAAkBC,gBAAgBjT,eAAe;AAC/C,UAAMkT,aAAa,KAAK7I;AACxB,UAAMmC,SAASyG,eAAeE,IAAI,CAAC,EAACzR,cAAcC,OAAAA,OAAK,MAAM;AAC3D,YAAMgH,QAAO,KAAKnH,MAAMK,eAAeH,YAAAA;AAEvC,UAAI,CAACiH,OAAM;AACT,cAAM,IAAIyK,MAAM,oCAAoC1R,YAAc;;AAGpE,aAAO;QACLA;QACAtC,SAASuJ,MAAKvG,KAAKT,MAAM;QACzBA,OAAAA;MACF;IACF,CAAA;AACA,UAAMmL,UAAU,CAACuG,eAAeH,YAAY1G,MAAAA;AAC5C,UAAM8G,kBAAkB,KAAKC,iBAAiB/G,QAAQxM,aAAAA;AAEtD,QAAI8M,WAAWwG,iBAAiB;AAC9B,WAAKjJ,UAAUmC;AACf,WAAKlC,iBAAiBtK;AACtB,WAAKwT,sBAAsB;AAC3B,WAAK3G,OAAO,IAAI;;EAEpB;EASA4G,YAAYC,GAAG3G,QAAQ4G,cAAc,MAAM;AACzC,QAAI5G,UAAU,KAAKyG,qBAAqB;AACtC,aAAO;;AAET,SAAKA,sBAAsB;AAE3B,UAAM5Q,UAAU,KAAKA;AACrB,UAAMsQ,aAAa,KAAK7I,WAAW,CAAA;AACnC,UAAMmC,SAAS,KAAKoH,mBAAmBF,GAAGR,YAAYnG,QAAQ4G,WAAAA;AAK9D,UAAML,kBAAkB,KAAKC,iBAAiB/G,QAAQkH,CAAAA;AAGtD,UAAM5G,UAAUC,UAAU,CAACsG,eAAe7G,QAAQ0G,UAAeI,KAAAA;AAGjE,QAAIxG,SAAS;AACX,WAAKzC,UAAUmC;AAEf,UAAI5J,QAAQ6I,WAAW7I,QAAQyK,UAAU;AACvC,aAAK/C,iBAAiB;UACpB7K,GAAGiU,EAAEjU;UACLR,GAAGyU,EAAEzU;QACP;AAEA,aAAK4N,OAAO,MAAME,MAAAA;;;AAItB,WAAOD;EACT;EAWA8G,mBAAmBF,GAAGR,YAAYnG,QAAQ4G,aAAa;AACrD,UAAM/Q,UAAU,KAAKA;AAErB,QAAI8Q,EAAE/L,SAAS,YAAY;AACzB,aAAO,CAAA;;AAGT,QAAI,CAACgM,aAAa;AAGhB,aAAOT,WAAWzG,OAAO5N,CAAAA,MACvB,KAAK2C,MAAMY,KAAKC,SAASxD,EAAE6C,YAAY,KACvC,KAAKF,MAAMK,eAAehD,EAAE6C,YAAY,EAAEE,WAAWM,UAAUrD,EAAE8C,KAAK,MAAM4I,MAAAA;;AAKhF,UAAMiC,SAAS,KAAKhL,MAAMqS,0BAA0BH,GAAG9Q,QAAQyF,MAAMzF,SAASmK,MAAAA;AAE9E,QAAInK,QAAQkR,SAAS;AACnBtH,aAAOsH,QAAO;;AAGhB,WAAOtH;EACT;EASA+G,iBAAiB/G,QAAQkH,GAAG;AAC1B,UAAM,EAAC5I,QAAQC,QAAQnI,QAAO,IAAI;AAClC,UAAMqK,WAAWxO,YAAYmE,QAAQqK,QAAQ,EAAElD,KAAK,MAAMyC,QAAQkH,CAAAA;AAClE,WAAOzG,aAAa,UAAUnC,WAAWmC,SAASxN,KAAKsL,WAAWkC,SAAShO;EAC7E;AACF;AAvvBE,cALW+K,UAKJvL,eAAcA;AAyvBvB,IAAA,iBAAe;EACbsV,IAAI;EACJC,UAAUhK;EACVvL;EAEAwV,UAAUzS,OAAO0S,OAAOtR,SAAS;AAC/B,QAAIA,SAAS;AACXpB,YAAMmB,UAAU,IAAIqH,SAAQ;QAACxI;QAAOoB;MAAO,CAAA;;EAE/C;EAEAuR,aAAa3S,OAAO0S,OAAOtR,SAAS;AAClC,QAAIpB,MAAMmB,SAAS;AACjBnB,YAAMmB,QAAQwI,WAAWvI,OAAAA;;EAE7B;EAEAwR,MAAM5S,OAAO0S,OAAOtR,SAAS;AAC3B,QAAIpB,MAAMmB,SAAS;AACjBnB,YAAMmB,QAAQwI,WAAWvI,OAAAA;;EAE7B;EAEAyR,UAAU7S,OAAO;AACf,UAAMmB,UAAUnB,MAAMmB;AAEtB,QAAIA,WAAWA,QAAQ2P,YAAW,GAAI;AACpC,YAAMgC,OAAO;QACX3R;MACF;AAEA,UAAInB,MAAM+S,cAAc,qBAAqB;QAAC,GAAGD;QAAME,YAAY;MAAI,CAAA,MAAO,OAAO;AACnF;;AAGF7R,cAAQ4P,KAAK/Q,MAAMqB,GAAG;AAEtBrB,YAAM+S,cAAc,oBAAoBD,IAAAA;;EAE5C;EAEAG,WAAWjT,OAAO8S,MAAM;AACtB,QAAI9S,MAAMmB,SAAS;AAEjB,YAAM+R,mBAAmBJ,KAAKvH;AAC9B,UAAIvL,MAAMmB,QAAQ8Q,YAAYa,KAAKK,OAAOD,kBAAkBJ,KAAKX,WAAW,GAAG;AAE7EW,aAAKxH,UAAU;;;EAGrB;EAEA8H,UAAU;IACRnJ,SAAS;IACT4B,UAAU;IACVJ,UAAU;IACVnE,iBAAiB;IACjB8F,YAAY;IACZvL,WAAW;MACTwR,QAAQ;IACV;IACAvQ,cAAc;IACdC,mBAAmB;IACnBiK,YAAY;IACZpF,WAAW;IACXxE,aAAa;IACbzB,UAAU,CAAA;IAEV6N,WAAW;IACXU,aAAa;IACb5M,eAAe;IACfD,iBAAiB;IACjBvB,YAAY;MACVuR,QAAQ;IACV;IACApD,aAAa;IACb/N,SAAS;IACTqC,cAAc;IACdD,WAAW;IACXc,cAAc;IACd1D,WAAW,CAACL,KAAK2I,SAASA,KAAKrI,SAASzD;IACxCuD,UAAU,CAACJ,KAAK2I,SAASA,KAAKrI,SAASzD;IACvCiQ,oBAAoB;IACpBlL,eAAe;IACfe,YAAY;IACZqD,aAAa;IACbE,aAAa;IACb2C,WAAW;MACToJ,UAAU;MACVC,QAAQ;IACV;IACApJ,YAAY;MACVqJ,SAAS;QACPrN,MAAM;QACNqF,YAAY;UAAC;UAAK;UAAK;UAAS;UAAU;UAAU;QAAS;MAC/D;MACA5C,SAAS;QACP2K,QAAQ;QACRD,UAAU;MACZ;IACF;IACAjN,WAAWG;EACb;EAEAiN,eAAe;IACb9R,UAAU;IACVG,YAAY;IACZD,WAAW;EACb;EAEA6R,aAAa;IACXC,aAAa,CAACvL,SAASA,SAAS,YAAYA,SAAS,cAAcA,SAAS;IAC5EwL,YAAY;IACZvN,WAAW;MACTsN,aAAa;MACbC,YAAY;IACd;IACA1J,WAAW;MACT2J,WAAW;IACb;IACA1J,YAAY;MACV0J,WAAW;IACb;EACF;EAGAC,wBAAwB;IAAC;EAAc;AACzC;ACl0CA,IAAMC,cAAc,CAACC,QAAQC,KAAKC,QAAOC,gBAAgB;AACvD,MAAI,OAAOF,QAAQ,UAAU;AAC3BC,IAAAA,SAAQF,OAAOI,KAAKH,GAAO,IAAA;AAC3BE,gBAAYE,QAAQ;MAACH,OAAAA;MAAOI,OAAOL;IAAG,CAAA;aAC7BM,MAAMN,GAAM,GAAA;AACrBC,IAAAA,SAAQ;;AAEV,SAAOA;AACT;AAEA,SAASM,eAAeR,QAAQC,KAAKC,QAAOC,aAAa;AACvD,QAAMM,QAAQT,OAAOU,QAAQT,GAAAA;AAC7B,MAAIQ,UAAU,IAAI;AAChB,WAAOV,YAAYC,QAAQC,KAAKC,QAAOC,WAAAA;;AAEzC,QAAMQ,OAAOX,OAAOY,YAAYX,GAAAA;AAChC,SAAOQ,UAAUE,OAAOT,SAAQO;AAClC;AAEA,IAAMI,aAAa,CAACX,QAAOY,QAAQZ,WAAU,OAAO,OAAOa,YAAYC,KAAKC,MAAMf,MAAAA,GAAQ,GAAGY,GAAI;AAEjG,SAASI,kBAAkBC,OAAO;AAChC,QAAMnB,SAAS,KAAKoB,UAAS;AAE7B,MAAID,SAAS,KAAKA,QAAQnB,OAAOqB,QAAQ;AACvC,WAAOrB,OAAOmB,KAAM;;AAEtB,SAAOA;AACT;AAEe,IAAMG,gBAAN,cAA4BC,MAAAA;EAazCC,YAAYC,KAAK;AACf,UAAMA,GAAAA;AAGN,SAAKC,cAAcC;AACnB,SAAKC,cAAc;AACnB,SAAKC,eAAe,CAAA;EACtB;EAEAC,KAAKC,cAAc;AACjB,UAAMC,QAAQ,KAAKH;AACnB,QAAIG,MAAMX,QAAQ;AAChB,YAAMrB,SAAS,KAAKoB,UAAS;AAC7B,iBAAW,EAAClB,OAAAA,QAAOI,MAAK,KAAK0B,OAAO;AAClC,YAAIhC,OAAOE,MAAM,MAAKI,OAAO;AAC3BN,iBAAOiC,OAAO/B,QAAO,CAAA;;MAEzB;AACA,WAAK2B,eAAe,CAAA;;AAEtB,UAAMC,KAAKC,YAAAA;EACb;EAEAG,MAAMjC,KAAKC,QAAO;AAChB,QAAIiC,cAAclC,GAAM,GAAA;AACtB,aAAO;;AAET,UAAMD,SAAS,KAAKoB,UAAS;AAC7BlB,IAAAA,SAAQkC,SAASlC,MAAUF,KAAAA,OAAOE,MAAAA,MAAWD,MAAMC,SAC/CM,eAAeR,QAAQC,KAAKoC,eAAenC,QAAOD,GAAAA,GAAM,KAAK4B,YAAY;AAC7E,WAAOhB,WAAWX,QAAOF,OAAOqB,SAAS,CAAA;EAC3C;EAEAiB,sBAAsB;AACpB,UAAM,EAACC,YAAYC,WAAAA,IAAc,KAAKC,cAAa;AACnD,QAAI,EAACC,KAAK5B,IAAG,IAAI,KAAK6B,UAAU,IAAI;AAEpC,QAAI,KAAKC,QAAQC,WAAW,SAAS;AACnC,UAAI,CAACN,YAAY;AACfG,cAAM;;AAER,UAAI,CAACF,YAAY;AACf1B,cAAM,KAAKM,UAAS,EAAGC,SAAS;;;AAIpC,SAAKqB,MAAMA;AACX,SAAK5B,MAAMA;EACb;EAEAgC,aAAa;AACX,UAAMJ,MAAM,KAAKA;AACjB,UAAM5B,MAAM,KAAKA;AACjB,UAAMiC,SAAS,KAAKH,QAAQG;AAC5B,UAAMC,QAAQ,CAAA;AACd,QAAIhD,SAAS,KAAKoB,UAAS;AAG3BpB,aAAS,QAAS,KAAKc,QAAQd,OAAOqB,SAAS,IAAKrB,SAASA,OAAOiD,MAAMP,KAAK5B,MAAM,CAAE;AAEvF,SAAKc,cAAcZ,KAAKF,IAAId,OAAOqB,UAAU0B,SAAS,IAAI,IAAI,CAAA;AAC9D,SAAKrB,cAAc,KAAKgB,OAAOK,SAAS,MAAM;AAE9C,aAAS5B,QAAQuB,KAAKvB,SAASL,KAAKK,SAAS;AAC3C6B,YAAM5C,KAAK;QAACe;MAAK,CAAA;IACnB;AACA,WAAO6B;EACT;EAEAE,iBAAiB/B,OAAO;AACtB,WAAOD,kBAAkBiC,KAAK,MAAMhC,KAAAA;EACtC;EAKAiC,YAAY;AACV,UAAMA,UAAS;AAEf,QAAI,CAAC,KAAKC,aAAY,GAAI;AAExB,WAAKC,iBAAiB,CAAC,KAAKA;;EAEhC;EAGAC,iBAAiBpC,OAAO;AACtB,QAAI,OAAOA,UAAU,UAAU;AAC7BA,cAAQ,KAAKe,MAAMf,KAAAA;;AAGrB,WAAOA,UAAU,OAAOqC,MAAM,KAAKC,oBAAoBtC,QAAQ,KAAKO,eAAe,KAAKE,WAAW;EACrG;EAIA8B,gBAAgBxD,QAAO;AACrB,UAAM8C,QAAQ,KAAKA;AACnB,QAAI9C,SAAQ,KAAKA,SAAQ8C,MAAM3B,SAAS,GAAG;AACzC,aAAO;;AAET,WAAO,KAAKkC,iBAAiBP,MAAM9C,MAAAA,EAAOiB,KAAK;EACjD;EAEAwC,iBAAiBC,OAAO;AACtB,WAAO5C,KAAKC,MAAM,KAAKS,cAAc,KAAKmC,mBAAmBD,KAAS,IAAA,KAAKhC,WAAW;EACxF;EAEAkC,eAAe;AACb,WAAO,KAAKC;EACd;AACF;AA1HE,cAFmBzC,eAEZ0C,MAAK;AAKZ,cAPmB1C,eAOZ2C,YAAW;EAChBjB,OAAO;IACLkB,UAAUhD;EACZ;;ACnBJ,SAASiD,gBAAcC,mBAAmBC,WAAW;AACnD,QAAMrB,QAAQ,CAAA;AAKd,QAAMsB,cAAc;AACpB,QAAM,EAACzB,QAAQ0B,MAAM7B,KAAK5B,KAAK0D,WAAWC,OAAOC,UAAUC,WAAWC,cAAAA,IAAiBR;AACvF,QAAMS,OAAON,QAAQ;AACrB,QAAMO,YAAYJ,WAAW;AAC7B,QAAM,EAAChC,KAAKqC,MAAMjE,KAAKkE,KAAAA,IAAQX;AAC/B,QAAM9B,aAAa,CAACJ,cAAcO,GAAAA;AAClC,QAAMF,aAAa,CAACL,cAAcrB,GAAAA;AAClC,QAAMmE,eAAe,CAAC9C,cAAcsC,KAAAA;AACpC,QAAMS,cAAcF,OAAOD,SAASJ,YAAY;AAChD,MAAIQ,UAAUC,SAASJ,OAAOD,QAAQD,YAAYD,IAAQA,IAAAA;AAC1D,MAAIQ,QAAQC,SAASC,SAASC;AAI9B,MAAIL,UAAUb,eAAe,CAAC/B,cAAc,CAACC,YAAY;AACvD,WAAO;MAAC;QAACrB,OAAO4D;MAAI;MAAG;QAAC5D,OAAO6D;MAAI;IAAE;;AAGvCQ,cAAYxE,KAAKyE,KAAKT,OAAOG,OAAAA,IAAWnE,KAAK0E,MAAMX,OAAOI,OAAAA;AAC1D,MAAIK,YAAYV,WAAW;AAEzBK,cAAUC,QAAQI,YAAYL,UAAUL,YAAYD,IAAQA,IAAAA;;AAG9D,MAAI,CAAC1C,cAAcqC,SAAY,GAAA;AAE7Ba,aAASrE,KAAK2E,IAAI,IAAInB,SAAAA;AACtBW,cAAUnE,KAAKyE,KAAKN,UAAUE,MAAUA,IAAAA;;AAG1C,MAAIxC,WAAW,SAAS;AACtByC,cAAUtE,KAAK0E,MAAMX,OAAOI,OAAWA,IAAAA;AACvCI,cAAUvE,KAAKyE,KAAKT,OAAOG,OAAWA,IAAAA;SACjC;AACLG,cAAUP;AACVQ,cAAUP;;AAGZ,MAAIzC,cAAcC,cAAc+B,QAAQqB,aAAa9E,MAAM4B,OAAO6B,MAAMY,UAAU,GAAO,GAAA;AAKvFK,gBAAYxE,KAAKC,MAAMD,KAAK0B,KAAK5B,MAAM4B,OAAOyC,SAAST,QAAAA,CAAAA;AACvDS,eAAWrE,MAAM4B,OAAO8C;AACxBF,cAAU5C;AACV6C,cAAUzE;EACZ,WAAWmE,cAAc;AAIvBK,cAAU/C,aAAaG,MAAM4C;AAC7BC,cAAU/C,aAAa1B,MAAMyE;AAC7BC,gBAAYf,QAAQ;AACpBU,eAAWI,UAAUD,WAAWE;SAC3B;AAELA,iBAAaD,UAAUD,WAAWH;AAGlC,QAAIU,aAAaL,WAAWxE,KAAKC,MAAMuE,SAAAA,GAAYL,UAAU,GAAO,GAAA;AAClEK,kBAAYxE,KAAKC,MAAMuE,SAAAA;WAClB;AACLA,kBAAYxE,KAAKyE,KAAKD,SAAAA;;;AAM1B,QAAMM,gBAAgB9E,KAAKF,IACzBiF,eAAeZ,OAAAA,GACfY,eAAeT,OAAAA,CAAAA;AAEjBD,WAASrE,KAAK2E,IAAI,IAAIxD,cAAcqC,SAAAA,IAAasB,gBAAgBtB,SAAS;AAC1Ec,YAAUtE,KAAKC,MAAMqE,UAAUD,MAAUA,IAAAA;AACzCE,YAAUvE,KAAKC,MAAMsE,UAAUF,MAAUA,IAAAA;AAEzC,MAAIW,IAAI;AACR,MAAIzD,YAAY;AACd,QAAIqC,iBAAiBU,YAAY5C,KAAK;AACpCM,YAAM5C,KAAK;QAACe,OAAOuB;MAAG,CAAA;AAEtB,UAAI4C,UAAU5C,KAAK;AACjBsD;;AAGF,UAAIH,aAAa7E,KAAKC,OAAOqE,UAAUU,IAAIb,WAAWE,MAAAA,IAAUA,QAAQ3C,KAAKuD,kBAAkBvD,KAAKwC,YAAYd,iBAAqB,CAAA,GAAA;AACnI4B;;eAEOV,UAAU5C,KAAK;AACxBsD;;;AAIJ,SAAOA,IAAIR,WAAW,EAAEQ,GAAG;AACzB,UAAME,YAAYlF,KAAKC,OAAOqE,UAAUU,IAAIb,WAAWE,MAAUA,IAAAA;AACjE,QAAI7C,cAAc0D,YAAYpF,KAAK;AACjC;;AAEFkC,UAAM5C,KAAK;MAACe,OAAO+E;IAAS,CAAA;EAC9B;AAEA,MAAI1D,cAAcoC,iBAAiBW,YAAYzE,KAAK;AAElD,QAAIkC,MAAM3B,UAAUwE,aAAa7C,MAAMA,MAAM3B,SAAS,CAAA,EAAGF,OAAOL,KAAKmF,kBAAkBnF,KAAKoE,YAAYd,iBAAqB,CAAA,GAAA;AAC3HpB,YAAMA,MAAM3B,SAAS,CAAE,EAACF,QAAQL;WAC3B;AACLkC,YAAM5C,KAAK;QAACe,OAAOL;MAAG,CAAA;;EAE1B,WAAW,CAAC0B,cAAc+C,YAAYzE,KAAK;AACzCkC,UAAM5C,KAAK;MAACe,OAAOoE;IAAO,CAAA;;AAG5B,SAAOvC;AACT;AAEA,SAASiD,kBAAkB9E,OAAO+D,YAAY,EAACiB,YAAYC,YAAW,GAAG;AACvE,QAAMC,MAAMC,UAAUF,WAAAA;AACtB,QAAMG,SAASJ,aAAanF,KAAKwF,IAAIH,GAAAA,IAAOrF,KAAKyF,IAAIJ,GAAAA,MAAS;AAC9D,QAAMhF,SAAS,OAAO6D,cAAc,KAAK/D,OAAOE;AAChD,SAAOL,KAAK0B,IAAIwC,aAAaqB,OAAOlF,MAAAA;AACtC;AAEe,IAAMqF,kBAAN,cAA8BnF,MAAAA;EAE3CC,YAAYC,KAAK;AACf,UAAMA,GAAAA;AAGN,SAAKkF,QAAQhF;AAEb,SAAKiF,MAAMjF;AAEX,SAAKD,cAAcC;AAEnB,SAAKkF,YAAYlF;AACjB,SAAKC,cAAc;EACrB;EAEAM,MAAMjC,KAAKC,QAAO;AAChB,QAAIiC,cAAclC,GAAM,GAAA;AACtB,aAAO;;AAET,SAAK,OAAOA,QAAQ,YAAYA,eAAe6G,WAAW,CAAC1E,SAAS,CAACnC,GAAM,GAAA;AACzE,aAAO;;AAGT,WAAO,CAACA;EACV;EAEA8G,yBAAyB;AACvB,UAAM,EAACC,YAAW,IAAI,KAAKpE;AAC3B,UAAM,EAACL,YAAYC,WAAAA,IAAc,KAAKC,cAAa;AACnD,QAAI,EAACC,KAAK5B,IAAG,IAAI;AAEjB,UAAMmG,SAASC,CAAAA,MAAMxE,MAAMH,aAAaG,MAAMwE;AAC9C,UAAMC,SAASD,CAAAA,MAAMpG,MAAM0B,aAAa1B,MAAMoG;AAE9C,QAAIF,aAAa;AACf,YAAMI,UAAUC,KAAK3E,GAAAA;AACrB,YAAM4E,UAAUD,KAAKvG,GAAAA;AAErB,UAAIsG,UAAU,KAAKE,UAAU,GAAG;AAC9BH,eAAO,CAAA;MACT,WAAWC,UAAU,KAAKE,UAAU,GAAG;AACrCL,eAAO,CAAA;;;AAIX,QAAIvE,QAAQ5B,KAAK;AACf,UAAIiC,SAASjC,QAAQ,IAAI,IAAIE,KAAKuG,IAAIzG,MAAM,IAAK;AAEjDqG,aAAOrG,MAAMiC,MAAAA;AAEb,UAAI,CAACiE,aAAa;AAChBC,eAAOvE,MAAMK,MAAAA;;;AAGjB,SAAKL,MAAMA;AACX,SAAK5B,MAAMA;EACb;EAEA0G,eAAe;AACb,UAAMC,WAAW,KAAK7E,QAAQI;AAE9B,QAAI,EAAC0E,eAAeC,SAAAA,IAAYF;AAChC,QAAI/C;AAEJ,QAAIiD,UAAU;AACZjD,iBAAW1D,KAAKyE,KAAK,KAAK3E,MAAM6G,QAAY3G,IAAAA,KAAK0E,MAAM,KAAKhD,MAAMiF,QAAY,IAAA;AAC9E,UAAIjD,WAAW,KAAM;AACnBkD,gBAAQC,KAAK,UAAU,KAAK7D,sBAAsB2D,0CAA0CjD,mCAAmC;AAC/HA,mBAAW;;WAER;AACLA,iBAAW,KAAKoD,iBAAgB;AAChCJ,sBAAgBA,iBAAiB;;AAGnC,QAAIA,eAAe;AACjBhD,iBAAW1D,KAAK0B,IAAIgF,eAAehD,QAAAA;;AAGrC,WAAOA;EACT;EAKAoD,mBAAmB;AACjB,WAAOhB,OAAOiB;EAChB;EAEAjF,aAAa;AACX,UAAMkF,OAAO,KAAKpF;AAClB,UAAM6E,WAAWO,KAAKhF;AAMtB,QAAI0B,WAAW,KAAK8C,aAAY;AAChC9C,eAAW1D,KAAKF,IAAI,GAAG4D,QAAAA;AAEvB,UAAMuD,0BAA0B;MAC9BvD;MACA7B,QAAQmF,KAAKnF;MACbH,KAAKsF,KAAKtF;MACV5B,KAAKkH,KAAKlH;MACV0D,WAAWiD,SAASjD;MACpBD,MAAMkD,SAASE;MACflD,OAAOgD,SAAShD;MAChBE,WAAW,KAAKuD,WAAU;MAC1B/B,YAAY,KAAK9C,aAAY;MAC7B+C,aAAaqB,SAASrB,eAAe;MACrCxB,eAAe6C,SAAS7C,kBAAkB;IAC5C;AACA,UAAMP,YAAY,KAAK8D,UAAU;AACjC,UAAMnF,QAAQmB,gBAAc8D,yBAAyB5D,SAAAA;AAIrD,QAAI2D,KAAKnF,WAAW,SAAS;AAC3BuF,yBAAmBpF,OAAO,MAAM,OAAA;;AAGlC,QAAIgF,KAAKK,SAAS;AAChBrF,YAAMqF,QAAO;AAEb,WAAK1B,QAAQ,KAAK7F;AAClB,WAAK8F,MAAM,KAAKlE;WACX;AACL,WAAKiE,QAAQ,KAAKjE;AAClB,WAAKkE,MAAM,KAAK9F;;AAGlB,WAAOkC;EACT;EAKAI,YAAY;AACV,UAAMJ,QAAQ,KAAKA;AACnB,QAAI2D,QAAQ,KAAKjE;AACjB,QAAIkE,MAAM,KAAK9F;AAEf,UAAMsC,UAAS;AAEf,QAAI,KAAKR,QAAQG,UAAUC,MAAM3B,QAAQ;AACvC,YAAM0B,UAAU6D,MAAMD,SAAS3F,KAAKF,IAAIkC,MAAM3B,SAAS,GAAG,CAAK,IAAA;AAC/DsF,eAAS5D;AACT6D,aAAO7D;;AAET,SAAKrB,cAAciF;AACnB,SAAKE,YAAYD;AACjB,SAAKhF,cAAcgF,MAAMD;EAC3B;EAEAzD,iBAAiB/B,OAAO;AACtB,WAAOmH,aAAanH,OAAO,KAAKoH,MAAM3F,QAAQ4F,QAAQ,KAAK5F,QAAQI,MAAMyF,MAAM;EACjF;AACF;ACnTe,IAAMC,cAAN,cAA0BhC,gBAAAA;EAcvCpE,sBAAsB;AACpB,UAAM,EAACI,KAAK5B,IAAG,IAAI,KAAK6B,UAAU,IAAI;AAEtC,SAAKD,MAAMN,eAASM,GAAAA,IAAOA,MAAM;AACjC,SAAK5B,MAAMsB,eAAStB,GAAAA,IAAOA,MAAM;AAGjC,SAAKiG,uBAAsB;EAC7B;EAMAe,mBAAmB;AACjB,UAAM3B,aAAa,KAAK9C,aAAY;AACpC,UAAMhC,SAAS8E,aAAa,KAAKwC,QAAQ,KAAKC;AAC9C,UAAMxC,cAAcE,UAAU,KAAK1D,QAAQI,MAAMoD,WAAW;AAC5D,UAAMG,SAASJ,aAAanF,KAAKwF,IAAIJ,WAAAA,IAAepF,KAAKyF,IAAIL,WAAAA,MAAiB;AAC9E,UAAMyC,WAAW,KAAKC,wBAAwB,CAAA;AAC9C,WAAO9H,KAAKyE,KAAKpE,SAASL,KAAK0B,IAAI,IAAImG,SAASE,aAAaxC,KAAAA,CAAAA;EAC/D;EAGAhD,iBAAiBpC,OAAO;AACtB,WAAOA,UAAU,OAAOqC,MAAM,KAAKC,oBAAoBtC,QAAQ,KAAKO,eAAe,KAAKE,WAAW;EACrG;EAEA+B,iBAAiBC,OAAO;AACtB,WAAO,KAAKlC,cAAc,KAAKmC,mBAAmBD,KAAAA,IAAS,KAAKhC;EAClE;AACF;AA3CE,cAFmB8G,aAEZ1E,MAAK;AAKZ,cAPmB0E,aAOZzE,YAAW;EAChBjB,OAAO;IACLkB,UAAU8E,MAAMC,WAAWC;EAC7B;;ACRJ,IAAMC,aAAajC,CAAAA,MAAKlG,KAAK0E,MAAM0D,MAAMlC,CAAAA,CAAAA;AACzC,IAAMmC,iBAAiB,CAACnC,GAAGoC,MAAMtI,KAAK2E,IAAI,IAAIwD,WAAWjC,CAAKoC,IAAAA,CAAAA;AAE9D,SAASC,QAAQC,SAAS;AACxB,QAAMC,SAASD,UAAWxI,KAAK2E,IAAI,IAAIwD,WAAWK,OAAAA,CAAAA;AAClD,SAAOC,WAAW;AACpB;AAEA,SAASC,MAAMhH,KAAK5B,KAAK6I,UAAU;AACjC,QAAMC,YAAY5I,KAAK2E,IAAI,IAAIgE,QAAAA;AAC/B,QAAMhD,QAAQ3F,KAAK0E,MAAMhD,MAAMkH,SAAAA;AAC/B,QAAMhD,MAAM5F,KAAKyE,KAAK3E,MAAM8I,SAAAA;AAC5B,SAAOhD,MAAMD;AACf;AAEA,SAASkD,SAASnH,KAAK5B,KAAK;AAC1B,QAAMgJ,QAAQhJ,MAAM4B;AACpB,MAAIiH,WAAWR,WAAWW,KAAAA;AAC1B,SAAOJ,MAAMhH,KAAK5B,KAAK6I,QAAAA,IAAY,IAAI;AACrCA;EACF;AACA,SAAOD,MAAMhH,KAAK5B,KAAK6I,QAAAA,IAAY,IAAI;AACrCA;EACF;AACA,SAAO3I,KAAK0B,IAAIiH,UAAUR,WAAWzG,GAAAA,CAAAA;AACvC;AASA,SAASyB,cAAcC,mBAAmB,EAAC1B,KAAK5B,IAAG,GAAG;AACpD4B,QAAMqH,gBAAgB3F,kBAAkB1B,KAAKA,GAAAA;AAC7C,QAAMM,QAAQ,CAAA;AACd,QAAMgH,SAASb,WAAWzG,GAAAA;AAC1B,MAAIuH,MAAMJ,SAASnH,KAAK5B,GAAAA;AACxB,MAAI0D,YAAYyF,MAAM,IAAIjJ,KAAK2E,IAAI,IAAI3E,KAAKuG,IAAI0C,GAAAA,CAAAA,IAAQ;AACxD,QAAMtC,WAAW3G,KAAK2E,IAAI,IAAIsE,GAAAA;AAC9B,QAAMC,OAAOF,SAASC,MAAMjJ,KAAK2E,IAAI,IAAIqE,MAAAA,IAAU;AACnD,QAAMrD,QAAQ3F,KAAKC,OAAOyB,MAAMwH,QAAQ1F,SAAaA,IAAAA;AACrD,QAAMzB,SAAS/B,KAAK0E,OAAOhD,MAAMwH,QAAQvC,WAAW,EAAA,IAAMA,WAAW;AACrE,MAAIwC,cAAcnJ,KAAK0E,OAAOiB,QAAQ5D,UAAU/B,KAAK2E,IAAI,IAAIsE,GAAAA,CAAAA;AAC7D,MAAI9I,QAAQ4I,gBAAgB3F,kBAAkB1B,KAAK1B,KAAKC,OAAOiJ,OAAOnH,SAASoH,cAAcnJ,KAAK2E,IAAI,IAAIsE,GAAAA,KAAQzF,SAAaA,IAAAA,SAAAA;AAC/H,SAAOrD,QAAQL,KAAK;AAClBkC,UAAM5C,KAAK;MAACe;MAAOiJ,OAAOb,QAAQpI,KAAAA;MAAQgJ;IAAW,CAAA;AACrD,QAAIA,eAAe,IAAI;AACrBA,oBAAcA,cAAc,KAAK,KAAK;WACjC;AACLA;;AAEF,QAAIA,eAAe,IAAI;AACrBF;AACAE,oBAAc;AACd3F,kBAAYyF,OAAO,IAAI,IAAIzF;;AAE7BrD,YAAQH,KAAKC,OAAOiJ,OAAOnH,SAASoH,cAAcnJ,KAAK2E,IAAI,IAAIsE,GAAAA,KAAQzF,SAAaA,IAAAA;EACtF;AACA,QAAM6F,WAAWN,gBAAgB3F,kBAAkBtD,KAAKK,KAAAA;AACxD6B,QAAM5C,KAAK;IAACe,OAAOkJ;IAAUD,OAAOb,QAAQc,QAAAA;IAAWF;EAAW,CAAA;AAElE,SAAOnH;AACT;AAEe,IAAMsH,mBAAN,cAA+B/I,MAAAA;EAiB5CC,YAAYC,KAAK;AACf,UAAMA,GAAAA;AAGN,SAAKkF,QAAQhF;AAEb,SAAKiF,MAAMjF;AAEX,SAAKD,cAAcC;AACnB,SAAKC,cAAc;EACrB;EAEAM,MAAMjC,KAAKC,QAAO;AAChB,UAAMiB,QAAQuF,gBAAgB6D,UAAUrI,MAAMsI,MAAM,MAAM;MAACvK;MAAKC;IAAM,CAAA;AACtE,QAAIiB,UAAU,GAAG;AACf,WAAKsJ,QAAQ;AACb,aAAO9I;;AAET,WAAOS,eAASjB,KAAAA,KAAUA,QAAQ,IAAIA,QAAQ;EAChD;EAEAmB,sBAAsB;AACpB,UAAM,EAACI,KAAK5B,IAAG,IAAI,KAAK6B,UAAU,IAAI;AAEtC,SAAKD,MAAMN,eAASM,GAAAA,IAAO1B,KAAKF,IAAI,GAAG4B,GAAAA,IAAO;AAC9C,SAAK5B,MAAMsB,eAAStB,GAAAA,IAAOE,KAAKF,IAAI,GAAGA,GAAAA,IAAO;AAE9C,QAAI,KAAK8B,QAAQoE,aAAa;AAC5B,WAAKyD,QAAQ;;AAKf,QAAI,KAAKA,SAAS,KAAK/H,QAAQ,KAAKgI,iBAAiB,CAACtI,eAAS,KAAKuI,QAAQ,GAAG;AAC7E,WAAKjI,MAAMA,QAAQ2G,eAAe,KAAK3G,KAAK,CAAK2G,IAAAA,eAAe,KAAK3G,KAAK,EAAC,IAAK2G,eAAe,KAAK3G,KAAK,CAAE;;AAG7G,SAAKqE,uBAAsB;EAC7B;EAEAA,yBAAyB;AACvB,UAAM,EAACxE,YAAYC,WAAAA,IAAc,KAAKC,cAAa;AACnD,QAAIC,MAAM,KAAKA;AACf,QAAI5B,MAAM,KAAKA;AAEf,UAAMmG,SAASC,CAAAA,MAAMxE,MAAMH,aAAaG,MAAMwE;AAC9C,UAAMC,SAASD,CAAAA,MAAMpG,MAAM0B,aAAa1B,MAAMoG;AAE9C,QAAIxE,QAAQ5B,KAAK;AACf,UAAI4B,OAAO,GAAG;AACZuE,eAAO,CAAA;AACPE,eAAO,EAAA;aACF;AACLF,eAAOoC,eAAe3G,KAAK,EAAC,CAAA;AAC5ByE,eAAOkC,eAAevI,KAAK,CAAC,CAAA;;;AAGhC,QAAI4B,OAAO,GAAG;AACZuE,aAAOoC,eAAevI,KAAK,EAAC,CAAA;;AAE9B,QAAIA,OAAO,GAAG;AAEZqG,aAAOkC,eAAe3G,KAAK,CAAC,CAAA;;AAG9B,SAAKA,MAAMA;AACX,SAAK5B,MAAMA;EACb;EAEAgC,aAAa;AACX,UAAMkF,OAAO,KAAKpF;AAElB,UAAMwB,oBAAoB;MACxB1B,KAAK,KAAKiI;MACV7J,KAAK,KAAK8J;IACZ;AACA,UAAM5H,QAAQmB,cAAcC,mBAAmB,IAAI;AAInD,QAAI4D,KAAKnF,WAAW,SAAS;AAC3BuF,yBAAmBpF,OAAO,MAAM,OAAA;;AAGlC,QAAIgF,KAAKK,SAAS;AAChBrF,YAAMqF,QAAO;AAEb,WAAK1B,QAAQ,KAAK7F;AAClB,WAAK8F,MAAM,KAAKlE;WACX;AACL,WAAKiE,QAAQ,KAAKjE;AAClB,WAAKkE,MAAM,KAAK9F;;AAGlB,WAAOkC;EACT;EAMAE,iBAAiB/B,OAAO;AACtB,WAAOA,UAAUQ,SACb,MACA2G,aAAanH,OAAO,KAAKoH,MAAM3F,QAAQ4F,QAAQ,KAAK5F,QAAQI,MAAMyF,MAAM;EAC9E;EAKArF,YAAY;AACV,UAAMuD,QAAQ,KAAKjE;AAEnB,UAAMU,UAAS;AAEf,SAAK1B,cAAc0H,MAAMzC,KAAAA;AACzB,SAAK/E,cAAcwH,MAAM,KAAKtI,GAAG,IAAIsI,MAAMzC,KAAAA;EAC7C;EAEApD,iBAAiBpC,OAAO;AACtB,QAAIA,UAAUQ,UAAaR,UAAU,GAAG;AACtCA,cAAQ,KAAKuB;;AAEf,QAAIvB,UAAU,QAAQZ,MAAMY,KAAQ,GAAA;AAClC,aAAOqC;;AAET,WAAO,KAAKC,mBAAmBtC,UAAU,KAAKuB,MAC1C,KACC0G,MAAMjI,KAAAA,IAAS,KAAKO,eAAe,KAAKE,WAAW;EAC1D;EAEA+B,iBAAiBC,OAAO;AACtB,UAAMiH,UAAU,KAAKhH,mBAAmBD,KAAAA;AACxC,WAAO5C,KAAK2E,IAAI,IAAI,KAAKjE,cAAcmJ,UAAU,KAAKjJ,WAAW;EACnE;AACF;AAtJE,cAFmB0I,kBAEZtG,MAAK;AAKZ,cAPmBsG,kBAOZrG,YAAW;EAChBjB,OAAO;IACLkB,UAAU8E,MAAMC,WAAW6B;IAC3BV,OAAO;MACLW,SAAS;IACX;EACF;;AC9EJ,SAASC,sBAAsBhD,MAAM;AACnC,QAAMP,WAAWO,KAAKhF;AAEtB,MAAIyE,SAASwD,WAAWjD,KAAKiD,SAAS;AACpC,UAAMC,UAAUC,UAAU1D,SAAS2D,eAAe;AAClD,WAAO/I,eAAeoF,SAAS4D,QAAQ5D,SAAS4D,KAAKC,MAAMrH,SAASoH,KAAKC,IAAI,IAAIJ,QAAQtC;;AAE3F,SAAO;AACT;AAEA,SAAS2C,iBAAiBC,KAAKH,MAAM/K,OAAO;AAC1CA,UAAQmL,QAAQnL,KAAAA,IAASA,QAAQ;IAACA;EAAM;AACxC,SAAO;IACLoL,GAAGC,aAAaH,KAAKH,KAAKO,QAAQtL,KAAAA;IAClCuL,GAAGvL,MAAMe,SAASgK,KAAKtC;EACzB;AACF;AAEA,SAAS+C,gBAAgBC,OAAOC,KAAKV,MAAM5I,KAAK5B,KAAK;AACnD,MAAIiL,UAAUrJ,OAAOqJ,UAAUjL,KAAK;AAClC,WAAO;MACL6F,OAAOqF,MAAOV,OAAO;MACrB1E,KAAKoF,MAAOV,OAAO;IACrB;EACF,WAAWS,QAAQrJ,OAAOqJ,QAAQjL,KAAK;AACrC,WAAO;MACL6F,OAAOqF,MAAMV;MACb1E,KAAKoF;IACP;;AAGF,SAAO;IACLrF,OAAOqF;IACPpF,KAAKoF,MAAMV;EACb;AACF;AAKA,SAASW,mBAAmBC,OAAO;AA8BjC,QAAMC,OAAO;IACXC,GAAGF,MAAMG,OAAOH,MAAMI,SAASD;IAC/BE,GAAGL,MAAMM,QAAQN,MAAMI,SAASE;IAChCC,GAAGP,MAAMQ,MAAMR,MAAMI,SAASI;IAC9BC,GAAGT,MAAMnI,SAASmI,MAAMI,SAASvI;EACnC;AACA,QAAM6I,SAASC,OAAOC,OAAO,CAAA,GAAIX,IAAAA;AACjC,QAAMY,aAAa,CAAA;AACnB,QAAM7B,UAAU,CAAA;AAChB,QAAM8B,aAAad,MAAMe,aAAa5L;AACtC,QAAM6L,iBAAiBhB,MAAMtJ,QAAQuK;AACrC,QAAMC,kBAAkBF,eAAeG,oBAAoBC,KAAKN,aAAa;AAE7E,WAASO,IAAI,GAAGA,IAAIP,YAAYO,KAAK;AACnC,UAAMvF,OAAOkF,eAAeM,WAAWtB,MAAMuB,qBAAqBF,CAAAA,CAAAA;AAClErC,YAAQqC,CAAAA,IAAKvF,KAAKkD;AAClB,UAAMwC,gBAAgBxB,MAAMyB,iBAAiBJ,GAAGrB,MAAM0B,cAAc1C,QAAQqC,CAAAA,GAAIH,eAAAA;AAChF,UAAMS,SAASC,OAAO9F,KAAKqD,IAAI;AAC/B,UAAM0C,WAAWxC,iBAAiBW,MAAMV,KAAKqC,QAAQ3B,MAAMe,aAAaM,CAAE,CAAA;AAC1ER,eAAWQ,CAAAA,IAAKQ;AAEhB,UAAMC,eAAeC,gBAAgB/B,MAAMgC,cAAcX,CAAKH,IAAAA,eAAAA;AAC9D,UAAMrB,QAAQ/K,KAAKC,MAAMkN,UAAUH,YAAAA,CAAAA;AACnC,UAAMI,UAAUtC,gBAAgBC,OAAO2B,cAAcW,GAAGN,SAASrC,GAAG,GAAG,GAAA;AACvE,UAAM4C,UAAUxC,gBAAgBC,OAAO2B,cAAca,GAAGR,SAASlC,GAAG,IAAI,GAAA;AACxE2C,iBAAa5B,QAAQT,MAAM6B,cAAcI,SAASE,OAAAA;EACpD;AAEApC,QAAMuC,eACJtC,KAAKC,IAAIQ,OAAOR,GAChBQ,OAAOL,IAAIJ,KAAKI,GAChBJ,KAAKM,IAAIG,OAAOH,GAChBG,OAAOD,IAAIR,KAAKQ,CAAC;AAInBT,QAAMwC,mBAAmBC,qBAAqBzC,OAAOa,YAAY7B,OAAAA;AACnE;AAEA,SAASsD,aAAa5B,QAAQT,MAAMJ,OAAOqC,SAASE,SAAS;AAC3D,QAAM9H,MAAMxF,KAAKuG,IAAIvG,KAAKwF,IAAIuF,KAAAA,CAAAA;AAC9B,QAAMtF,MAAMzF,KAAKuG,IAAIvG,KAAKyF,IAAIsF,KAAAA,CAAAA;AAC9B,MAAIsC,IAAI;AACR,MAAIE,IAAI;AACR,MAAIH,QAAQzH,QAAQwF,KAAKC,GAAG;AAC1BiC,SAAKlC,KAAKC,IAAIgC,QAAQzH,SAASH;AAC/BoG,WAAOR,IAAIpL,KAAK0B,IAAIkK,OAAOR,GAAGD,KAAKC,IAAIiC,CAAAA;EACzC,WAAWD,QAAQxH,MAAMuF,KAAKI,GAAG;AAC/B8B,SAAKD,QAAQxH,MAAMuF,KAAKI,KAAK/F;AAC7BoG,WAAOL,IAAIvL,KAAKF,IAAI8L,OAAOL,GAAGJ,KAAKI,IAAI8B,CAAAA;;AAEzC,MAAIC,QAAQ3H,QAAQwF,KAAKM,GAAG;AAC1B8B,SAAKpC,KAAKM,IAAI6B,QAAQ3H,SAASF;AAC/BmG,WAAOH,IAAIzL,KAAK0B,IAAIkK,OAAOH,GAAGN,KAAKM,IAAI8B,CAAAA;EACzC,WAAWD,QAAQ1H,MAAMuF,KAAKQ,GAAG;AAC/B4B,SAAKD,QAAQ1H,MAAMuF,KAAKQ,KAAKlG;AAC7BmG,WAAOD,IAAI3L,KAAKF,IAAI8L,OAAOD,GAAGR,KAAKQ,IAAI4B,CAAAA;;AAE3C;AAEA,SAASK,qBAAqB1C,OAAOhM,QAAO2O,UAAU;AACpD,QAAMC,gBAAgB5C,MAAM0B;AAC5B,QAAM,EAACmB,OAAO3B,iBAAiBlC,SAASI,KAAI,IAAIuD;AAChD,QAAMG,qBAAqB9C,MAAMyB,iBAAiBzN,QAAO4O,gBAAgBC,QAAQ7D,SAASkC,eAAAA;AAC1F,QAAMrB,QAAQ/K,KAAKC,MAAMkN,UAAUF,gBAAgBe,mBAAmBjD,QAAQkD,OAAAA,CAAAA,CAAAA;AAC9E,QAAMV,IAAIW,UAAUF,mBAAmBT,GAAGjD,KAAKO,GAAGE,KAAAA;AAClD,QAAMoD,YAAYC,qBAAqBrD,KAAAA;AACvC,QAAMM,OAAOgD,iBAAiBL,mBAAmBX,GAAG/C,KAAKI,GAAGyD,SAAAA;AAC5D,SAAO;IAELG,SAAS;IAGTjB,GAAGW,mBAAmBX;IACtBE;IAGAY;IAGA9C;IACAK,KAAK6B;IACL/B,OAAOH,OAAOf,KAAKI;IACnB3H,QAAQwK,IAAIjD,KAAKO;EACnB;AACF;AAEA,SAAS0D,gBAAgBC,MAAMC,MAAM;AACnC,MAAI,CAACA,MAAM;AACT,WAAO;;AAET,QAAM,EAACpD,MAAMK,KAAKF,OAAOzI,OAAM,IAAIyL;AACnC,QAAME,eAAeC,eAAe;IAACtB,GAAGhC;IAAMkC,GAAG7B;EAAG,GAAG+C,IAAAA,KAASE,eAAe;IAACtB,GAAGhC;IAAMkC,GAAGxK;EAAM,GAAG0L,IAAAA,KACnGE,eAAe;IAACtB,GAAG7B;IAAO+B,GAAG7B;EAAG,GAAG+C,IAAAA,KAASE,eAAe;IAACtB,GAAG7B;IAAO+B,GAAGxK;KAAS0L,IAAAA;AACpF,SAAO,CAACC;AACV;AAEA,SAASf,qBAAqBzC,OAAOa,YAAY7B,SAAS;AACxD,QAAM0E,QAAQ,CAAA;AACd,QAAM5C,aAAad,MAAMe,aAAa5L;AACtC,QAAM2G,OAAOkE,MAAMtJ;AACnB,QAAM,EAACyK,mBAAmBpC,QAAAA,IAAWjD,KAAKmF;AAC1C,QAAM0B,WAAW;IACfE,OAAO/D,sBAAsBhD,IAAQ,IAAA;IACrCoF,iBAAiBC,oBAAoBC,KAAKN,aAAa;EACzD;AACA,MAAIyC;AAEJ,WAASlC,IAAI,GAAGA,IAAIP,YAAYO,KAAK;AACnCsB,aAAS3D,UAAUA,QAAQqC,CAAE;AAC7BsB,aAASvD,OAAOyB,WAAWQ,CAAE;AAE7B,UAAMiC,OAAOZ,qBAAqB1C,OAAOqB,GAAGsB,QAAAA;AAC5Ce,UAAMxP,KAAKoP,IAAAA;AACX,QAAIvE,YAAY,QAAQ;AACtBuE,WAAKF,UAAUC,gBAAgBC,MAAMC,IAAAA;AACrC,UAAID,KAAKF,SAAS;AAChBG,eAAOD;;;EAGb;AACA,SAAOI;AACT;AAEA,SAASR,qBAAqBrD,OAAO;AACnC,MAAIA,UAAU,KAAKA,UAAU,KAAK;AAChC,WAAO;aACEA,QAAQ,KAAK;AACtB,WAAO;;AAGT,SAAO;AACT;AAEA,SAASsD,iBAAiBhB,GAAG3C,GAAGmE,OAAO;AACrC,MAAIA,UAAU,SAAS;AACrBxB,SAAK3C;aACImE,UAAU,UAAU;AAC7BxB,SAAM3C,IAAI;;AAEZ,SAAO2C;AACT;AAEA,SAASa,UAAUX,GAAG1C,GAAGE,OAAO;AAC9B,MAAIA,UAAU,MAAMA,UAAU,KAAK;AACjCwC,SAAM1C,IAAI;EACZ,WAAWE,QAAQ,OAAOA,QAAQ,IAAI;AACpCwC,SAAK1C;;AAEP,SAAO0C;AACT;AAEA,SAASuB,kBAAkBtE,KAAKxD,MAAMwH,MAAM;AAC1C,QAAM,EAACnD,MAAMK,KAAKF,OAAOzI,OAAM,IAAIyL;AACnC,QAAM,EAACO,cAAa,IAAI/H;AAExB,MAAI,CAAC7F,cAAc4N,aAAgB,GAAA;AACjC,UAAMC,eAAeC,cAAcjI,KAAKgI,YAAY;AACpD,UAAM9E,UAAUC,UAAUnD,KAAKoD,eAAe;AAC9CI,QAAI0E,YAAYH;AAEhB,UAAMI,eAAe9D,OAAOnB,QAAQmB;AACpC,UAAM+D,cAAc1D,MAAMxB,QAAQwB;AAClC,UAAM2D,gBAAgB7D,QAAQH,OAAOnB,QAAQvC;AAC7C,UAAM2H,iBAAiBvM,SAAS2I,MAAMxB,QAAQtC;AAE9C,QAAIiE,OAAO0D,OAAOP,YAAAA,EAAcQ,KAAKtJ,CAAAA,MAAKA,MAAM,CAAI,GAAA;AAClDsE,UAAIiF,UAAS;AACbC,yBAAmBlF,KAAK;QACtB6C,GAAG8B;QACH5B,GAAG6B;QACH1E,GAAG2E;QACHxE,GAAGyE;QACHK,QAAQX;MACV,CAAA;AACAxE,UAAIoF,KAAI;WACH;AACLpF,UAAIqF,SAASV,cAAcC,aAAaC,eAAeC,cAAAA;;;AAG7D;AAEA,SAASQ,gBAAgB5E,OAAO6E,YAAY;AAC1C,QAAM,EAACvF,KAAK5I,SAAS,EAACuK,YAAW,EAAC,IAAIjB;AAEtC,WAASqB,IAAIwD,aAAa,GAAGxD,KAAK,GAAGA,KAAK;AACxC,UAAMiC,OAAOtD,MAAMwC,iBAAiBnB,CAAE;AACtC,QAAI,CAACiC,KAAKF,SAAS;AAEjB;;AAEF,UAAM0B,cAAc7D,YAAYK,WAAWtB,MAAMuB,qBAAqBF,CAAAA,CAAAA;AACtEuC,sBAAkBtE,KAAKwF,aAAaxB,IAAAA;AACpC,UAAM3B,SAASC,OAAOkD,YAAY3F,IAAI;AACtC,UAAM,EAACgD,GAAGE,GAAGY,UAAAA,IAAaK;AAE1ByB,eACEzF,KACAU,MAAMe,aAAaM,CAAE,GACrBc,GACAE,IAAKV,OAAO9E,aAAa,GACzB8E,QACA;MACEqD,OAAOF,YAAYE;MACnB/B;MACAgC,cAAc;IAChB,CAAA;EAEJ;AACF;AAEA,SAASC,eAAelF,OAAOyE,QAAQU,UAAUN,YAAY;AAC3D,QAAM,EAACvF,IAAG,IAAIU;AACd,MAAImF,UAAU;AAEZ7F,QAAI8F,IAAIpF,MAAMqF,SAASrF,MAAMsF,SAASb,QAAQ,GAAGc,GAAAA;SAC5C;AAEL,QAAI/D,gBAAgBxB,MAAMyB,iBAAiB,GAAGgD,MAAAA;AAC9CnF,QAAIkG,OAAOhE,cAAcW,GAAGX,cAAca,CAAC;AAE3C,aAAShB,IAAI,GAAGA,IAAIwD,YAAYxD,KAAK;AACnCG,sBAAgBxB,MAAMyB,iBAAiBJ,GAAGoD,MAAAA;AAC1CnF,UAAImG,OAAOjE,cAAcW,GAAGX,cAAca,CAAC;IAC7C;;AAEJ;AAEA,SAASqD,eAAe1F,OAAO2F,cAAclB,QAAQI,YAAYe,YAAY;AAC3E,QAAMtG,MAAMU,MAAMV;AAClB,QAAM6F,WAAWQ,aAAaR;AAE9B,QAAM,EAACH,OAAAA,QAAOa,UAAAA,IAAaF;AAE3B,MAAK,CAACR,YAAY,CAACN,cAAe,CAACG,UAAS,CAACa,aAAapB,SAAS,GAAG;AACpE;;AAGFnF,MAAIwG,KAAI;AACRxG,MAAIyG,cAAcf;AAClB1F,MAAIuG,YAAYA;AAChBvG,MAAI0G,YAAYJ,WAAWK,QAAQ,CAAA,CAAE;AACrC3G,MAAI4G,iBAAiBN,WAAWO;AAEhC7G,MAAIiF,UAAS;AACbW,iBAAelF,OAAOyE,QAAQU,UAAUN,UAAAA;AACxCvF,MAAI8G,UAAS;AACb9G,MAAI+G,OAAM;AACV/G,MAAIgH,QAAO;AACb;AAEA,SAASC,wBAAwBC,QAAQxS,QAAOI,OAAO;AACrD,SAAOqS,cAAcD,QAAQ;IAC3BpS;IACAJ,OAAAA;IACA0S,MAAM;EACR,CAAA;AACF;AAEe,IAAMC,oBAAN,cAAgCnM,gBAAAA;EA0E7ClF,YAAYC,KAAK;AACf,UAAMA,GAAAA;AAGN,SAAK8P,UAAU5P;AAEf,SAAK6P,UAAU7P;AAEf,SAAKiM,cAAcjM;AAEnB,SAAKsL,eAAe,CAAA;AACpB,SAAKyB,mBAAmB,CAAA;EAC1B;EAEAoE,gBAAgB;AAEd,UAAM5H,UAAU,KAAKoB,WAAWnB,UAAUH,sBAAsB,KAAKpI,OAAO,IAAI,CAAA;AAChF,UAAM8I,IAAI,KAAK/C,QAAQ,KAAKoK,WAAW7H,QAAQvC;AAC/C,UAAMkD,IAAI,KAAKjD,SAAS,KAAKoK,YAAY9H,QAAQtC;AACjD,SAAK2I,UAAUvQ,KAAK0E,MAAM,KAAK2G,OAAOX,IAAI,IAAIR,QAAQmB,IAAI;AAC1D,SAAKmF,UAAUxQ,KAAK0E,MAAM,KAAKgH,MAAMb,IAAI,IAAIX,QAAQwB,GAAG;AACxD,SAAKkB,cAAc5M,KAAK0E,MAAM1E,KAAK0B,IAAIgJ,GAAGG,CAAK,IAAA,CAAA;EACjD;EAEAvJ,sBAAsB;AACpB,UAAM,EAACI,KAAK5B,IAAG,IAAI,KAAK6B,UAAU,KAAK;AAEvC,SAAKD,MAAMN,eAASM,GAAAA,KAAQ,CAACnC,MAAMmC,GAAOA,IAAAA,MAAM;AAChD,SAAK5B,MAAMsB,eAAStB,GAAAA,KAAQ,CAACP,MAAMO,GAAOA,IAAAA,MAAM;AAGhD,SAAKiG,uBAAsB;EAC7B;EAMAe,mBAAmB;AACjB,WAAO9G,KAAKyE,KAAK,KAAKmI,cAAc5C,sBAAsB,KAAKpI,OAAO,CAAA;EACxE;EAEAqQ,mBAAmBjQ,OAAO;AACxB0D,oBAAgB6D,UAAU0I,mBAAmB9P,KAAK,MAAMH,KAAAA;AAGxD,SAAKiK,eAAe,KAAK7L,UAAS,EAC/B8R,IAAI,CAAC/R,OAAOjB,WAAU;AACrB,YAAMI,QAAQ6S,SAAa,KAAKvQ,QAAQuK,YAAYjJ,UAAU;QAAC/C;QAAOjB;MAAM,GAAE,IAAI;AAClF,aAAOI,SAASA,UAAU,IAAIA,QAAQ;KAEvC8S,EAAAA,OAAO,CAAClM,GAAGqG,MAAM,KAAKhF,MAAM8K,kBAAkB9F,CAAAA,CAAAA;EACnD;EAEA+F,MAAM;AACJ,UAAMtL,OAAO,KAAKpF;AAElB,QAAIoF,KAAKiD,WAAWjD,KAAKmF,YAAYlC,SAAS;AAC5CgB,yBAAmB,IAAI;WAClB;AACL,WAAKwC,eAAe,GAAG,GAAG,GAAG,CAAA;;EAEjC;EAEAA,eAAe8E,cAAcC,eAAeC,aAAaC,gBAAgB;AACvE,SAAKnC,WAAWvQ,KAAK0E,OAAO6N,eAAeC,iBAAiB,CAAA;AAC5D,SAAKhC,WAAWxQ,KAAK0E,OAAO+N,cAAcC,kBAAkB,CAAA;AAC5D,SAAK9F,eAAe5M,KAAK0B,IAAI,KAAKkL,cAAc,GAAG5M,KAAKF,IAAIyS,cAAcC,eAAeC,aAAaC,cAAAA,CAAAA;EACxG;EAEAxF,cAAchO,QAAO;AACnB,UAAMyT,kBAAkBlC,OAAO,KAAKxE,aAAa5L,UAAU;AAC3D,UAAMuS,aAAa,KAAKhR,QAAQgR,cAAc;AAE9C,WAAO3F,gBAAgB/N,SAAQyT,kBAAkBrN,UAAUsN,UAAAA,CAAAA;EAC7D;EAEAC,8BAA8B1S,OAAO;AACnC,QAAIgB,cAAchB,KAAQ,GAAA;AACxB,aAAOqC;;AAIT,UAAMsQ,gBAAgB,KAAKlG,eAAe,KAAK9M,MAAM,KAAK4B;AAC1D,QAAI,KAAKE,QAAQyF,SAAS;AACxB,cAAQ,KAAKvH,MAAMK,SAAS2S;;AAE9B,YAAQ3S,QAAQ,KAAKuB,OAAOoR;EAC9B;EAEAC,8BAA8BC,UAAU;AACtC,QAAI7R,cAAc6R,QAAW,GAAA;AAC3B,aAAOxQ;;AAGT,UAAMyQ,iBAAiBD,YAAY,KAAKpG,eAAe,KAAK9M,MAAM,KAAK4B;AACvE,WAAO,KAAKE,QAAQyF,UAAU,KAAKvH,MAAMmT,iBAAiB,KAAKvR,MAAMuR;EACvE;EAEAxG,qBAAqBvN,QAAO;AAC1B,UAAMiN,cAAc,KAAKF,gBAAgB,CAAA;AAEzC,QAAI/M,UAAS,KAAKA,SAAQiN,YAAY9L,QAAQ;AAC5C,YAAM6S,aAAa/G,YAAYjN,MAAM;AACrC,aAAOuS,wBAAwB,KAAK0B,WAAU,GAAIjU,QAAOgU,UAAAA;;EAE7D;EAEAvG,iBAAiBzN,QAAOkU,oBAAoBhH,kBAAkB,GAAG;AAC/D,UAAMrB,QAAQ,KAAKmC,cAAchO,MAAAA,IAAS+O,UAAU7B;AACpD,WAAO;MACLiB,GAAGrN,KAAKyF,IAAIsF,KAAAA,IAASqI,qBAAqB,KAAK7C;MAC/ChD,GAAGvN,KAAKwF,IAAIuF,KAAAA,IAASqI,qBAAqB,KAAK5C;MAC/CzF;IACF;EACF;EAEAsI,yBAAyBnU,QAAOiB,OAAO;AACrC,WAAO,KAAKwM,iBAAiBzN,QAAO,KAAK2T,8BAA8B1S,KAAAA,CAAAA;EACzE;EAEAmT,gBAAgBpU,QAAO;AACrB,WAAO,KAAKmU,yBAAyBnU,UAAS,GAAG,KAAKqU,aAAY,CAAA;EACpE;EAEAC,sBAAsBtU,QAAO;AAC3B,UAAM,EAACmM,MAAMK,KAAKF,OAAOzI,OAAM,IAAI,KAAK2K,iBAAiBxO,MAAM;AAC/D,WAAO;MACLmM;MACAK;MACAF;MACAzI;IACF;EACF;EAKA0Q,iBAAiB;AACf,UAAM,EAACC,iBAAiBC,MAAM,EAACtD,SAAAA,EAAS,IAAI,KAAKzO;AACjD,QAAI8R,iBAAiB;AACnB,YAAMlJ,MAAM,KAAKA;AACjBA,UAAIwG,KAAI;AACRxG,UAAIiF,UAAS;AACbW,qBAAe,MAAM,KAAKyC,8BAA8B,KAAKhN,SAAS,GAAGwK,UAAU,KAAKpE,aAAa5L,MAAM;AAC3GmK,UAAI8G,UAAS;AACb9G,UAAI0E,YAAYwE;AAChBlJ,UAAIoF,KAAI;AACRpF,UAAIgH,QAAO;;EAEf;EAKAoC,WAAW;AACT,UAAMpJ,MAAM,KAAKA;AACjB,UAAMxD,OAAO,KAAKpF;AAClB,UAAM,EAACiS,YAAYF,MAAMG,OAAAA,IAAU9M;AACnC,UAAM+I,aAAa,KAAK9D,aAAa5L;AAErC,QAAIkM,GAAGxK,QAAQgS;AAEf,QAAI/M,KAAKmF,YAAYlC,SAAS;AAC5B6F,sBAAgB,MAAMC,UAAAA;;AAGxB,QAAI4D,KAAK1J,SAAS;AAChB,WAAKjI,MAAMgS,QAAQ,CAACC,MAAM/U,WAAU;AAClC,YAAIA,WAAU,KAAMA,WAAU,KAAK,KAAKwC,MAAM,GAAI;AAChDK,mBAAS,KAAK8Q,8BAA8BoB,KAAK9T,KAAK;AACtD,gBAAM+T,UAAU,KAAKf,WAAWjU,MAAAA;AAChC,gBAAM8Q,cAAc2D,KAAKnH,WAAW0H,OAAAA;AACpC,gBAAMC,oBAAoBL,OAAOtH,WAAW0H,OAAAA;AAE5CtD,yBAAe,MAAMZ,aAAajO,QAAQgO,YAAYoE,iBAAAA;;MAE1D,CAAA;;AAGF,QAAIN,WAAW5J,SAAS;AACtBO,UAAIwG,KAAI;AAER,WAAKzE,IAAIwD,aAAa,GAAGxD,KAAK,GAAGA,KAAK;AACpC,cAAMyD,cAAc6D,WAAWrH,WAAW,KAAKC,qBAAqBF,CAAAA,CAAAA;AACpE,cAAM,EAAC2D,OAAAA,QAAOa,UAAAA,IAAaf;AAE3B,YAAI,CAACe,aAAa,CAACb,QAAO;AACxB;;AAGF1F,YAAIuG,YAAYA;AAChBvG,YAAIyG,cAAcf;AAElB1F,YAAI0G,YAAYlB,YAAYoE,UAAU;AACtC5J,YAAI4G,iBAAiBpB,YAAYqE;AAEjCtS,iBAAS,KAAK8Q,8BAA8B7L,KAAKK,UAAU,KAAK3F,MAAM,KAAK5B,GAAG;AAC9EiU,mBAAW,KAAKpH,iBAAiBJ,GAAGxK,MAAAA;AACpCyI,YAAIiF,UAAS;AACbjF,YAAIkG,OAAO,KAAKH,SAAS,KAAKC,OAAO;AACrChG,YAAImG,OAAOoD,SAAS1G,GAAG0G,SAASxG,CAAC;AACjC/C,YAAI+G,OAAM;MACZ;AAEA/G,UAAIgH,QAAO;;EAEf;EAKA8C,aAAa;EAAA;EAKbC,aAAa;AACX,UAAM/J,MAAM,KAAKA;AACjB,UAAMxD,OAAO,KAAKpF;AAClB,UAAM6E,WAAWO,KAAKhF;AAEtB,QAAI,CAACyE,SAASwD,SAAS;AACrB;;AAGF,UAAM2I,aAAa,KAAK1F,cAAc,CAAA;AACtC,QAAInL,QAAQ4F;AAEZ6C,QAAIwG,KAAI;AACRxG,QAAIgK,UAAU,KAAKjE,SAAS,KAAKC,OAAO;AACxChG,QAAIiK,OAAO7B,UAAAA;AACXpI,QAAI2D,YAAY;AAChB3D,QAAI2F,eAAe;AAEnB,SAAKnO,MAAMgS,QAAQ,CAACC,MAAM/U,WAAU;AAClC,UAAKA,WAAU,KAAK,KAAKwC,OAAO,KAAM,CAACsF,KAAKK,SAAS;AACnD;;AAGF,YAAM2I,cAAcvJ,SAAS+F,WAAW,KAAK2G,WAAWjU,MAAAA,CAAAA;AACxD,YAAM2I,WAAWiF,OAAOkD,YAAY3F,IAAI;AACxCtI,eAAS,KAAK8Q,8BAA8B,KAAK7Q,MAAM9C,MAAM,EAACiB,KAAK;AAEnE,UAAI6P,YAAY0E,mBAAmB;AACjClK,YAAIH,OAAOxC,SAAS+C;AACpBjD,gBAAQ6C,IAAImK,YAAYV,KAAK3U,KAAK,EAAEqI;AACpC6C,YAAI0E,YAAYc,YAAYjB;AAE5B,cAAM7E,UAAUC,UAAU6F,YAAY5F,eAAe;AACrDI,YAAIqF,SACF,CAAClI,QAAQ,IAAIuC,QAAQmB,MACrB,CAACtJ,SAAS8F,SAASyC,OAAO,IAAIJ,QAAQwB,KACtC/D,QAAQuC,QAAQvC,OAChBE,SAASyC,OAAOJ,QAAQtC,MAAM;;AAIlCqI,iBAAWzF,KAAKyJ,KAAK3U,OAAO,GAAG,CAACyC,QAAQ8F,UAAU;QAChDqI,OAAOF,YAAYE;QACnB0E,aAAa5E,YAAY6E;QACzBC,aAAa9E,YAAY+E;MAC3B,CAAA;IACF,CAAA;AAEAvK,QAAIgH,QAAO;EACb;EAKAwD,YAAY;EAAA;AACd;AAxVE,cAFmBnD,mBAEZ7O,MAAK;AAKZ,cAPmB6O,mBAOZ5O,YAAW;EAChBgH,SAAS;EAGTgL,SAAS;EACTlB,UAAU;EAEVF,YAAY;IACV5J,SAAS;IACT8G,WAAW;IACXqD,YAAY,CAAA;IACZC,kBAAkB;EACpB;EAEAV,MAAM;IACJtD,UAAU;EACZ;EAEAuC,YAAY;EAGZ5Q,OAAO;IAEL0S,mBAAmB;IAEnBxR,UAAU8E,MAAMC,WAAWC;EAC7B;EAEAiE,aAAa;IACX4C,eAAepO;IAGfyJ,iBAAiB;IAGjBH,SAAS;IAGTI,MAAM;MACJC,MAAM;IACR;IAGApH,SAAS5D,OAAO;AACd,aAAOA;IACT;IAGA4K,SAAS;IAGTmC,mBAAmB;EACrB;;AAGF,cA9DmBwF,mBA8DZqD,iBAAgB;EACrB,oBAAoB;EACpB,qBAAqB;EACrB,eAAe;;AAGjB,cApEmBrD,mBAoEZsD,eAAc;EACnBtB,YAAY;IACVuB,WAAW;EACb;;ACzYJ,IAAMC,YAAY;EAChBC,aAAa;IAACC,QAAQ;IAAMjL,MAAM;IAAG5B,OAAO;EAAI;EAChD8M,QAAQ;IAACD,QAAQ;IAAMjL,MAAM;IAAM5B,OAAO;EAAE;EAC5C+M,QAAQ;IAACF,QAAQ;IAAMjL,MAAM;IAAO5B,OAAO;EAAE;EAC7CgN,MAAM;IAACH,QAAQ;IAAMjL,MAAM;IAAS5B,OAAO;EAAE;EAC7CiN,KAAK;IAACJ,QAAQ;IAAMjL,MAAM;IAAU5B,OAAO;EAAE;EAC7CkN,MAAM;IAACL,QAAQ;IAAOjL,MAAM;IAAW5B,OAAO;EAAC;EAC/CmN,OAAO;IAACN,QAAQ;IAAMjL,MAAM;IAAS5B,OAAO;EAAE;EAC9CoN,SAAS;IAACP,QAAQ;IAAOjL,MAAM;IAAS5B,OAAO;EAAC;EAChDqN,MAAM;IAACR,QAAQ;IAAMjL,MAAM;EAAQ;AACrC;AAKA,IAAM0L,QAA6CnK,uBAAOoK,KAAKZ,SAAAA;AAM/D,SAASa,OAAOC,GAAGxK,GAAG;AACpB,SAAOwK,IAAIxK;AACb;AAOA,SAASzK,MAAMgK,OAAOkL,OAAO;AAC3B,MAAIjV,cAAciV,KAAQ,GAAA;AACxB,WAAO;;AAGT,QAAMC,UAAUnL,MAAMoL;AACtB,QAAM,EAACC,QAAQtW,OAAAA,QAAOuW,WAAU,IAAItL,MAAMuL;AAC1C,MAAItW,QAAQiW;AAEZ,MAAI,OAAOG,WAAW,YAAY;AAChCpW,YAAQoW,OAAOpW,KAAAA;;AAIjB,MAAI,CAACiB,eAASjB,KAAQ,GAAA;AACpBA,YAAQ,OAAOoW,WAAW,WACtBF,QAAQnV,MAAMf,OAAOoW,MACrBF,IAAAA,QAAQnV,MAAMf,KAAM;;AAG1B,MAAIA,UAAU,MAAM;AAClB,WAAO;;AAGT,MAAIF,QAAO;AACTE,YAAQF,WAAU,WAAWyW,SAASF,UAAeA,KAAAA,eAAe,QAChEH,QAAQM,QAAQxW,OAAO,WAAWqW,UAAAA,IAClCH,QAAQM,QAAQxW,OAAOF,MAAM;;AAGnC,SAAO,CAACE;AACV;AAUA,SAASyW,0BAA0BC,SAASnV,KAAK5B,KAAKgX,UAAU;AAC9D,QAAMC,OAAOf,MAAM3V;AAEnB,WAASkM,IAAIyJ,MAAMtW,QAAQmX,OAAAA,GAAUtK,IAAIwK,OAAO,GAAG,EAAExK,GAAG;AACtD,UAAMyK,WAAW3B,UAAUW,MAAMzJ,CAAAA,CAAE;AACnC,UAAMlI,SAAS2S,SAAStO,QAAQsO,SAAStO,QAAQ5C,OAAOmR;AAExD,QAAID,SAASzB,UAAUvV,KAAKyE,MAAM3E,MAAM4B,QAAQ2C,SAAS2S,SAAS1M,KAAG,KAAOwM,UAAU;AACpF,aAAOd,MAAMzJ,CAAE;;EAEnB;AAEA,SAAOyJ,MAAMe,OAAO,CAAE;AACxB;AAWA,SAASG,2BAA2BhM,OAAOiM,UAAUN,SAASnV,KAAK5B,KAAK;AACtE,WAASyM,IAAIyJ,MAAM3V,SAAS,GAAGkM,KAAKyJ,MAAMtW,QAAQmX,OAAAA,GAAUtK,KAAK;AAC/D,UAAM1I,OAAOmS,MAAMzJ,CAAE;AACrB,QAAI8I,UAAUxR,IAAK,EAAC0R,UAAUrK,MAAMoL,SAASc,KAAKtX,KAAK4B,KAAKmC,IAAAA,KAASsT,WAAW,GAAG;AACjF,aAAOtT;;EAEX;AAEA,SAAOmS,MAAMa,UAAUb,MAAMtW,QAAQmX,OAAAA,IAAW,CAAC;AACnD;AAMA,SAASQ,mBAAmBxT,MAAM;AAChC,WAAS0I,IAAIyJ,MAAMtW,QAAQmE,IAAQ,IAAA,GAAGkT,OAAOf,MAAM3V,QAAQkM,IAAIwK,MAAM,EAAExK,GAAG;AACxE,QAAI8I,UAAUW,MAAMzJ,CAAAA,CAAE,EAAEgJ,QAAQ;AAC9B,aAAOS,MAAMzJ,CAAE;;EAEnB;AACF;AAOA,SAAS+K,QAAQtV,OAAOuV,MAAMC,YAAY;AACxC,MAAI,CAACA,YAAY;AACfxV,UAAMuV,IAAK,IAAG;aACLC,WAAWnX,QAAQ;AAC5B,UAAM,EAACoX,IAAIC,GAAAA,IAAMC,QAAQH,YAAYD,IAAAA;AACrC,UAAMK,YAAYJ,WAAWC,EAAAA,KAAOF,OAAOC,WAAWC,EAAG,IAAGD,WAAWE,EAAG;AAC1E1V,UAAM4V,SAAU,IAAG;;AAEvB;AASA,SAASC,cAAc3M,OAAOlJ,OAAOkQ,MAAK4F,WAAW;AACnD,QAAMzB,UAAUnL,MAAMoL;AACtB,QAAM7W,QAAQ,CAAC4W,QAAQM,QAAQ3U,MAAM,CAAA,EAAG7B,OAAO2X,SAAAA;AAC/C,QAAMnY,OAAOqC,MAAMA,MAAM3B,SAAS,CAAA,EAAGF;AACrC,MAAIiJ,OAAOlK;AAEX,OAAKkK,QAAQ3J,OAAO2J,SAASzJ,MAAMyJ,QAAQ,CAACiN,QAAQ0B,IAAI3O,OAAO,GAAG0O,SAAY,GAAA;AAC5E5Y,IAAAA,SAAQgT,KAAI9I,KAAM;AAClB,QAAIlK,UAAS,GAAG;AACd8C,YAAM9C,MAAAA,EAAOkK,QAAQ;;EAEzB;AACA,SAAOpH;AACT;AAQA,SAASgW,oBAAoB9M,OAAOqE,QAAQuI,WAAW;AACrD,QAAM9V,QAAQ,CAAA;AAEd,QAAMkQ,OAAM,CAAA;AACZ,QAAM6E,OAAOxH,OAAOlP;AACpB,MAAIkM,GAAGpM;AAEP,OAAKoM,IAAI,GAAGA,IAAIwK,MAAM,EAAExK,GAAG;AACzBpM,YAAQoP,OAAOhD,CAAE;AACjB2F,IAAAA,KAAI/R,KAAAA,IAASoM;AAEbvK,UAAM5C,KAAK;MACTe;MACAiJ,OAAO;IACT,CAAA;EACF;AAIA,SAAQ2N,SAAS,KAAK,CAACe,YAAa9V,QAAQ6V,cAAc3M,OAAOlJ,OAAOkQ,MAAK4F,SAAU;AACzF;AAEe,IAAMG,YAAN,cAAwB1X,MAAAA;EAgDrCC,YAAY0X,OAAO;AACjB,UAAMA,KAAAA;AAGN,SAAKC,SAAS;MACZC,MAAM,CAAA;MACNpZ,QAAQ,CAAA;MACRqZ,KAAK,CAAA;IACP;AAGA,SAAKC,QAAQ;AAEb,SAAKC,aAAa5X;AAClB,SAAK6X,WAAW,CAAA;AAChB,SAAKC,cAAc;AACnB,SAAKhC,aAAa9V;EACpB;EAEAG,KAAK4X,WAAW1R,OAAO,CAAA,GAAI;AACzB,UAAMuQ,OAAOmB,UAAUnB,SAASmB,UAAUnB,OAAO,CAAA;AAEjD,UAAMlB,UAAU,KAAKC,WAAW,IAAIqC,SAASC,MAAMF,UAAUC,SAASE,IAAI;AAE1ExC,YAAQvV,KAAKkG,IAAAA;AAMb8R,YAAQvB,KAAKwB,gBAAgB1C,QAAQ2C,QAAO,CAAA;AAE5C,SAAKvC,aAAa;MAChBF,QAAQgB,KAAKhB;MACbtW,OAAOsX,KAAKtX;MACZuW,YAAYe,KAAKf;IACnB;AAEA,UAAM1V,KAAK4X,SAAAA;AAEX,SAAKD,cAAczR,KAAKiS;EAC1B;EAOA/X,MAAMjC,KAAKC,QAAO;AAChB,QAAID,QAAQ0B,QAAW;AACrB,aAAO;;AAET,WAAOO,MAAM,MAAMjC,GAAAA;EACrB;EAEAia,eAAe;AACb,UAAMA,aAAY;AAClB,SAAKf,SAAS;MACZC,MAAM,CAAA;MACNpZ,QAAQ,CAAA;MACRqZ,KAAK,CAAA;IACP;EACF;EAEA/W,sBAAsB;AACpB,UAAMM,UAAU,KAAKA;AACrB,UAAMyU,UAAU,KAAKC;AACrB,UAAMzS,OAAOjC,QAAQ2V,KAAK1T,QAAQ;AAElC,QAAI,EAACnC,KAAK5B,KAAKyB,YAAYC,WAAAA,IAAc,KAAKC,cAAa;AAK3D,aAAS0X,aAAatX,QAAQ;AAC5B,UAAI,CAACN,cAAc,CAAChC,MAAMsC,OAAOH,GAAG,GAAG;AACrCA,cAAM1B,KAAK0B,IAAIA,KAAKG,OAAOH,GAAG;;AAEhC,UAAI,CAACF,cAAc,CAACjC,MAAMsC,OAAO/B,GAAG,GAAG;AACrCA,cAAME,KAAKF,IAAIA,KAAK+B,OAAO/B,GAAG;;IAElC;AAGA,QAAI,CAACyB,cAAc,CAACC,YAAY;AAE9B2X,mBAAa,KAAKC,gBAAe,CAAA;AAIjC,UAAIxX,QAAQC,WAAW,WAAWD,QAAQI,MAAMqX,WAAW,UAAU;AACnEF,qBAAa,KAAKxX,UAAU,KAAK,CAAA;;;AAIrCD,UAAMN,eAASM,GAAAA,KAAQ,CAACnC,MAAMmC,GAAOA,IAAAA,MAAM,CAAC2U,QAAQM,QAAQ2C,KAAKC,IAAG,GAAI1V,IAAK;AAC7E/D,UAAMsB,eAAStB,GAAAA,KAAQ,CAACP,MAAMO,GAAAA,IAAOA,MAAM,CAACuW,QAAQmD,MAAMF,KAAKC,IAAG,GAAI1V,IAAAA,IAAQ;AAG9E,SAAKnC,MAAM1B,KAAK0B,IAAIA,KAAK5B,MAAM,CAAA;AAC/B,SAAKA,MAAME,KAAKF,IAAI4B,MAAM,GAAG5B,GAAAA;EAC/B;EAKAsZ,kBAAkB;AAChB,UAAMK,MAAM,KAAKC,mBAAkB;AACnC,QAAIhY,MAAMoE,OAAOiB;AACjB,QAAIjH,MAAMgG,OAAO6T;AAEjB,QAAIF,IAAIpZ,QAAQ;AACdqB,YAAM+X,IAAI,CAAE;AACZ3Z,YAAM2Z,IAAIA,IAAIpZ,SAAS,CAAE;;AAE3B,WAAO;MAACqB;MAAK5B;IAAG;EAClB;EAKAgC,aAAa;AACX,UAAMF,UAAU,KAAKA;AACrB,UAAMgY,WAAWhY,QAAQ2V;AACzB,UAAM9Q,WAAW7E,QAAQI;AACzB,UAAMwV,aAAa/Q,SAAS4S,WAAW,WAAW,KAAKK,mBAAkB,IAAK,KAAKG,UAAS;AAE5F,QAAIjY,QAAQC,WAAW,WAAW2V,WAAWnX,QAAQ;AACnD,WAAKqB,MAAM,KAAKiI,YAAY6N,WAAW,CAAE;AACzC,WAAK1X,MAAM,KAAK8J,YAAY4N,WAAWA,WAAWnX,SAAS,CAAE;;AAG/D,UAAMqB,MAAM,KAAKA;AACjB,UAAM5B,MAAM,KAAKA;AAEjB,UAAMkC,QAAQ8X,eAAetC,YAAY9V,KAAK5B,GAAAA;AAK9C,SAAKwY,QAAQsB,SAAS/V,SAAS4C,SAASsT,WACpCnD,0BAA0BgD,SAAS/C,SAAS,KAAKnV,KAAK,KAAK5B,KAAK,KAAKka,kBAAkBtY,GACvFwV,CAAAA,IAAAA,2BAA2B,MAAMlV,MAAM3B,QAAQuZ,SAAS/C,SAAS,KAAKnV,KAAK,KAAK5B,GAAG;AACvF,SAAKyY,aAAa,CAAC9R,SAAS2C,MAAMW,WAAW,KAAKuO,UAAU,SAAS3X,SACjE0W,mBAAmB,KAAKiB,KAAK;AACjC,SAAK2B,YAAYzC,UAAAA;AAEjB,QAAI5V,QAAQyF,SAAS;AACnBrF,YAAMqF,QAAO;;AAGf,WAAO2Q,oBAAoB,MAAMhW,OAAO,KAAKuW,UAAU;EACzD;EAEA2B,gBAAgB;AAGd,QAAI,KAAKtY,QAAQuY,qBAAqB;AACpC,WAAKF,YAAY,KAAKjY,MAAMkQ,IAAI+B,CAAAA,SAAQ,CAACA,KAAK9T,KAAK,CAAA;;EAEvD;EAUA8Z,YAAYzC,aAAa,CAAA,GAAI;AAC3B,QAAI7R,QAAQ;AACZ,QAAIC,MAAM;AACV,QAAInG,OAAOE;AAEX,QAAI,KAAKiC,QAAQG,UAAUyV,WAAWnX,QAAQ;AAC5CZ,cAAQ,KAAK2a,mBAAmB5C,WAAW,CAAE,CAAA;AAC7C,UAAIA,WAAWnX,WAAW,GAAG;AAC3BsF,gBAAQ,IAAIlG;aACP;AACLkG,iBAAS,KAAKyU,mBAAmB5C,WAAW,CAAA,CAAE,IAAI/X,SAAS;;AAE7DE,aAAO,KAAKya,mBAAmB5C,WAAWA,WAAWnX,SAAS,CAAE,CAAA;AAChE,UAAImX,WAAWnX,WAAW,GAAG;AAC3BuF,cAAMjG;aACD;AACLiG,eAAOjG,OAAO,KAAKya,mBAAmB5C,WAAWA,WAAWnX,SAAS,CAAA,CAAE,KAAK;;;AAGhF,UAAMga,QAAQ7C,WAAWnX,SAAS,IAAI,MAAM;AAC5CsF,YAAQ5F,YAAY4F,OAAO,GAAG0U,KAAAA;AAC9BzU,UAAM7F,YAAY6F,KAAK,GAAGyU,KAAAA;AAE1B,SAAK7B,WAAW;MAAC7S;MAAOC;MAAKvB,QAAQ,KAAKsB,QAAQ,IAAIC;IAAI;EAC5D;EASAiU,YAAY;AACV,UAAMxD,UAAU,KAAKC;AACrB,UAAM5U,MAAM,KAAKA;AACjB,UAAM5B,MAAM,KAAKA;AACjB,UAAM8B,UAAU,KAAKA;AACrB,UAAMgY,WAAWhY,QAAQ2V;AAEzB,UAAM+C,QAAQV,SAAS/V,QAAQ+S,0BAA0BgD,SAAS/C,SAASnV,KAAK5B,KAAK,KAAKka,kBAAkBtY,GAAAA,CAAAA;AAC5G,UAAMiF,WAAWtF,eAAeO,QAAQI,MAAM2E,UAAU,CAAA;AACxD,UAAM4T,UAAUD,UAAU,SAASV,SAASpD,aAAa;AACzD,UAAMgE,aAAa9D,SAAS6D,OAAYA,KAAAA,YAAY;AACpD,UAAMvY,QAAQ,CAAA;AACd,QAAIvC,QAAQiC;AACZ,QAAI6V,MAAM9T;AAGV,QAAI+W,YAAY;AACd/a,cAAQ,CAAC4W,QAAQM,QAAQlX,OAAO,WAAW8a,OAAAA;;AAI7C9a,YAAQ,CAAC4W,QAAQM,QAAQlX,OAAO+a,aAAa,QAAQF,KAAK;AAG1D,QAAIjE,QAAQe,KAAKtX,KAAK4B,KAAK4Y,KAAAA,IAAS,MAAS3T,UAAU;AACrD,YAAM,IAAI8T,MAAM/Y,MAAM,UAAU5B,MAAM,yCAAyC6G,WAAW,MAAM2T,KAAO;;AAGzG,UAAM9C,aAAa5V,QAAQI,MAAMqX,WAAW,UAAU,KAAKqB,kBAAiB;AAC5E,SAAKnD,OAAO9X,OAAOgE,QAAQ,GAAG8T,OAAOzX,KAAKyX,OAAO,CAAClB,QAAQ0B,IAAIR,MAAM5Q,UAAU2T,KAAAA,GAAQ7W,SAAS;AAC7F6T,cAAQtV,OAAOuV,MAAMC,UAAAA;IACvB;AAEA,QAAID,SAASzX,OAAO8B,QAAQC,WAAW,WAAW4B,UAAU,GAAG;AAC7D6T,cAAQtV,OAAOuV,MAAMC,UAAAA;;AAIvB,WAAO3L,OAAOoK,KAAKjU,KAAO2Y,EAAAA,KAAKzE,MAAAA,EAAQhE,IAAI7E,CAAAA,MAAK,CAACA,CAAAA;EACnD;EAMAnL,iBAAiB/B,OAAO;AACtB,UAAMkW,UAAU,KAAKC;AACrB,UAAMsD,WAAW,KAAKhY,QAAQ2V;AAE9B,QAAIqC,SAASgB,eAAe;AAC1B,aAAOvE,QAAQ5O,OAAOtH,OAAOyZ,SAASgB,aAAa;;AAErD,WAAOvE,QAAQ5O,OAAOtH,OAAOyZ,SAASb,eAAe8B,QAAQ;EAC/D;EAOApT,OAAOtH,OAAOsH,QAAQ;AACpB,UAAM7F,UAAU,KAAKA;AACrB,UAAMoX,UAAUpX,QAAQ2V,KAAKwB;AAC7B,UAAMlV,OAAO,KAAKyU;AAClB,UAAMwC,MAAMrT,UAAUuR,QAAQnV,IAAK;AACnC,WAAO,KAAKyS,SAAS7O,OAAOtH,OAAO2a,GAAAA;EACrC;EAWAC,oBAAoBxD,MAAMrY,QAAO8C,OAAOyF,QAAQ;AAC9C,UAAM7F,UAAU,KAAKA;AACrB,UAAMoZ,YAAYpZ,QAAQI,MAAMkB;AAEhC,QAAI8X,WAAW;AACb,aAAO7Y,SAAK6Y,WAAW;QAACzD;QAAMrY;QAAO8C;MAAM,GAAE,IAAI;;AAGnD,UAAMgX,UAAUpX,QAAQ2V,KAAKwB;AAC7B,UAAMlV,OAAO,KAAKyU;AAClB,UAAMR,YAAY,KAAKS;AACvB,UAAM0C,cAAcpX,QAAQmV,QAAQnV,IAAK;AACzC,UAAMqX,cAAcpD,aAAakB,QAAQlB,SAAU;AACnD,UAAM7D,OAAOjS,MAAM9C,MAAM;AACzB,UAAMkK,QAAQ0O,aAAaoD,eAAejH,QAAQA,KAAK7K;AAEvD,WAAO,KAAKkN,SAAS7O,OAAO8P,MAAM9P,WAAW2B,QAAQ8R,cAAcD,YAAU;EAC/E;EAKAhJ,mBAAmBjQ,OAAO;AACxB,QAAIuK,GAAGwK,MAAM9C;AAEb,SAAK1H,IAAI,GAAGwK,OAAO/U,MAAM3B,QAAQkM,IAAIwK,MAAM,EAAExK,GAAG;AAC9C0H,aAAOjS,MAAMuK,CAAE;AACf0H,WAAK3U,QAAQ,KAAKyb,oBAAoB9G,KAAK9T,OAAOoM,GAAGvK,KAAAA;IACvD;EACF;EAMAoY,mBAAmBja,OAAO;AACxB,WAAOA,UAAU,OAAOqC,OAAOrC,QAAQ,KAAKuB,QAAQ,KAAK5B,MAAM,KAAK4B;EACtE;EAMAa,iBAAiBpC,OAAO;AACtB,UAAMgb,UAAU,KAAK3C;AACrB,UAAMxN,MAAM,KAAKoP,mBAAmBja,KAAAA;AACpC,WAAO,KAAKsC,oBAAoB0Y,QAAQxV,QAAQqF,OAAOmQ,QAAQ9W,MAAM;EACvE;EAMA1B,iBAAiBC,OAAO;AACtB,UAAMuY,UAAU,KAAK3C;AACrB,UAAMxN,MAAM,KAAKnI,mBAAmBD,KAAAA,IAASuY,QAAQ9W,SAAS8W,QAAQvV;AACtE,WAAO,KAAKlE,MAAMsJ,OAAO,KAAKlL,MAAM,KAAK4B;EAC3C;EAOA0Z,cAAc9b,OAAO;AACnB,UAAM+b,YAAY,KAAKzZ,QAAQI;AAC/B,UAAMsZ,iBAAiB,KAAK9Q,IAAImK,YAAYrV,KAAAA,EAAOqI;AACnD,UAAMoD,QAAQzF,UAAU,KAAKjD,aAAY,IAAKgZ,UAAUE,cAAcF,UAAUjW,WAAW;AAC3F,UAAMoW,cAAcxb,KAAKyF,IAAIsF,KAAAA;AAC7B,UAAM0Q,cAAczb,KAAKwF,IAAIuF,KAAAA;AAC7B,UAAM2Q,eAAe,KAAK5T,wBAAwB,CAAA,EAAGwC;AAErD,WAAO;MACLI,GAAI4Q,iBAAiBE,cAAgBE,eAAeD;MACpD5Q,GAAIyQ,iBAAiBG,cAAgBC,eAAeF;IACtD;EACF;EAOAxB,kBAAkB2B,aAAa;AAC7B,UAAM/B,WAAW,KAAKhY,QAAQ2V;AAC9B,UAAMwB,iBAAiBa,SAASb;AAGhC,UAAMtR,SAASsR,eAAea,SAAS/V,IAAI,KAAKkV,eAAezD;AAC/D,UAAMsG,eAAe,KAAKb,oBAAoBY,aAAa,GAAG3D,oBAAoB,MAAM;MAAC2D;OAAc,KAAKpD,UAAU,GAAG9Q,MAAAA;AACzH,UAAM6C,OAAO,KAAK8Q,cAAcQ,YAAAA;AAGhC,UAAM9E,WAAW9W,KAAK0E,MAAM,KAAKrC,aAAY,IAAK,KAAKsF,QAAQ2C,KAAKI,IAAI,KAAK9C,SAAS0C,KAAKO,CAAC,IAAI;AAChG,WAAOiM,WAAW,IAAIA,WAAW;EACnC;EAKA4D,oBAAoB;AAClB,QAAIlD,aAAa,KAAKW,OAAOC,QAAQ,CAAA;AACrC,QAAI7L,GAAGwK;AAEP,QAAIS,WAAWnX,QAAQ;AACrB,aAAOmX;;AAGT,UAAMqE,QAAQ,KAAKC,wBAAuB;AAE1C,QAAI,KAAKrD,eAAeoD,MAAMxb,QAAQ;AACpC,aAAQ,KAAK8X,OAAOC,OAAOyD,MAAM,CAAA,EAAGE,WAAWC,mBAAmB,IAAI;;AAGxE,SAAKzP,IAAI,GAAGwK,OAAO8E,MAAMxb,QAAQkM,IAAIwK,MAAM,EAAExK,GAAG;AAC9CiL,mBAAaA,WAAWyE,OAAOJ,MAAMtP,CAAE,EAACwP,WAAWC,mBAAmB,IAAI,CAAA;IAC5E;AAEA,WAAQ,KAAK7D,OAAOC,OAAO,KAAK8D,UAAU1E,UAAAA;EAC5C;EAKAkC,qBAAqB;AACnB,UAAMlC,aAAa,KAAKW,OAAOnZ,UAAU,CAAA;AACzC,QAAIuN,GAAGwK;AAEP,QAAIS,WAAWnX,QAAQ;AACrB,aAAOmX;;AAGT,UAAMxY,SAAS,KAAKoB,UAAS;AAC7B,SAAKmM,IAAI,GAAGwK,OAAO/X,OAAOqB,QAAQkM,IAAIwK,MAAM,EAAExK,GAAG;AAC/CiL,iBAAWpY,KAAK8B,MAAM,MAAMlC,OAAOuN,CAAE,CAAA,CAAA;IACvC;AAEA,WAAQ,KAAK4L,OAAOnZ,SAAS,KAAKyZ,cAAcjB,aAAa,KAAK0E,UAAU1E,UAAW;EACzF;EAMA0E,UAAU3M,QAAQ;AAEhB,WAAO4M,aAAa5M,OAAOoL,KAAKzE,MAAAA,CAAAA;EAClC;AACF;AA1dE,cAFmB+B,WAEZjV,MAAK;AAKZ,cAPmBiV,WAOZhV,YAAW;EAQhBpB,QAAQ;EAER8W,UAAU,CAAA;EACVpB,MAAM;IACJhB,QAAQ;IACR1S,MAAM;IACN5D,OAAO;IACPuW,YAAY;IACZK,SAAS;IACTkC,gBAAgB,CAAA;EAClB;EACA/W,OAAO;IASLqX,QAAQ;IAERnW,UAAU;IAEVkG,OAAO;MACLW,SAAS;IACX;EACF;;ACrOJ,SAASqS,aAAYC,OAAOC,KAAKjV,SAAS;AACxC,MAAIoQ,KAAK;AACT,MAAIC,KAAK2E,MAAMhc,SAAS;AACxB,MAAIkc,YAAYC,YAAYC,YAAYC;AACxC,MAAIrV,SAAS;AACX,QAAIiV,OAAOD,MAAM5E,EAAAA,EAAIzM,OAAOsR,OAAOD,MAAM3E,EAAG,EAAC1M,KAAK;AAC/C,OAAA,EAACyM,IAAIC,GAAAA,IAAMiF,aAAaN,OAAO,OAAOC,GAAG;;AAE3C,KAAA,EAACtR,KAAKuR,YAAYhF,MAAMkF,WAAU,IAAIJ,MAAM5E,EAAAA;AAC5C,KAAA,EAACzM,KAAKwR,YAAYjF,MAAMmF,WAAU,IAAIL,MAAM3E,EAAAA;SACxC;AACL,QAAI4E,OAAOD,MAAM5E,EAAAA,EAAIF,QAAQ+E,OAAOD,MAAM3E,EAAG,EAACH,MAAM;AACjD,OAAA,EAACE,IAAIC,GAAAA,IAAMiF,aAAaN,OAAO,QAAQC,GAAG;;AAE5C,KAAA,EAAC/E,MAAMgF,YAAYvR,KAAKyR,WAAU,IAAIJ,MAAM5E,EAAAA;AAC5C,KAAA,EAACF,MAAMiF,YAAYxR,KAAK0R,WAAU,IAAIL,MAAM3E,EAAAA;;AAG/C,QAAMkF,OAAOJ,aAAaD;AAC1B,SAAOK,OAAOH,cAAcC,aAAaD,eAAeH,MAAMC,cAAcK,OAAOH;AACrF;AAEA,IAAMI,kBAAN,cAA8B5E,UAAAA;EAY5BzX,YAAY0X,OAAO;AACjB,UAAMA,KAAAA;AAGN,SAAK4E,SAAS,CAAA;AAEd,SAAKC,UAAUpc;AAEf,SAAKqc,cAAcrc;EACrB;EAKAsZ,cAAc;AACZ,UAAMzC,aAAa,KAAKyF,uBAAsB;AAC9C,UAAMZ,QAAQ,KAAKS,SAAS,KAAKI,iBAAiB1F,UAAAA;AAClD,SAAKuF,UAAUX,aAAYC,OAAO,KAAK3a,GAAG;AAC1C,SAAKsb,cAAcZ,aAAYC,OAAO,KAAKvc,GAAG,IAAI,KAAKid;AACvD,UAAM9C,YAAYzC,UAAAA;EACpB;EAaA0F,iBAAiB1F,YAAY;AAC3B,UAAM,EAAC9V,KAAK5B,IAAG,IAAI;AACnB,UAAM8O,QAAQ,CAAA;AACd,UAAMyN,QAAQ,CAAA;AACd,QAAI9P,GAAGwK,MAAMoG,MAAMC,MAAMC;AAEzB,SAAK9Q,IAAI,GAAGwK,OAAOS,WAAWnX,QAAQkM,IAAIwK,MAAM,EAAExK,GAAG;AACnD6Q,aAAO5F,WAAWjL,CAAE;AACpB,UAAI6Q,QAAQ1b,OAAO0b,QAAQtd,KAAK;AAC9B8O,cAAMxP,KAAKge,IAAAA;;IAEf;AAEA,QAAIxO,MAAMvO,SAAS,GAAG;AAEpB,aAAO;QACL;UAACkX,MAAM7V;UAAKsJ,KAAK;QAAC;QAClB;UAACuM,MAAMzX;UAAKkL,KAAK;QAAC;MACnB;;AAGH,SAAKuB,IAAI,GAAGwK,OAAOnI,MAAMvO,QAAQkM,IAAIwK,MAAM,EAAExK,GAAG;AAC9C8Q,aAAOzO,MAAMrC,IAAI,CAAE;AACnB4Q,aAAOvO,MAAMrC,IAAI,CAAE;AACnB6Q,aAAOxO,MAAMrC,CAAE;AAGf,UAAIvM,KAAKC,OAAOod,OAAOF,QAAQ,CAAA,MAAOC,MAAM;AAC1Cf,cAAMjd,KAAK;UAACmY,MAAM6F;UAAMpS,KAAKuB,KAAKwK,OAAO;QAAE,CAAA;;IAE/C;AACA,WAAOsF;EACT;EAQAxC,YAAY;AACV,UAAMnY,MAAM,KAAKA;AACjB,UAAM5B,MAAM,KAAKA;AACjB,QAAI0X,aAAa,MAAMkD,kBAAiB;AACxC,QAAI,CAAClD,WAAW8F,SAAS5b,GAAAA,KAAQ,CAAC8V,WAAWnX,QAAQ;AACnDmX,iBAAWvW,OAAO,GAAG,GAAGS,GAAAA;;AAE1B,QAAI,CAAC8V,WAAW8F,SAASxd,GAAAA,KAAQ0X,WAAWnX,WAAW,GAAG;AACxDmX,iBAAWpY,KAAKU,GAAAA;;AAElB,WAAO0X,WAAWmD,KAAK,CAACxE,GAAGxK,MAAMwK,IAAIxK,CAAAA;EACvC;EAOAsR,yBAAyB;AACvB,QAAIzF,aAAa,KAAKW,OAAOE,OAAO,CAAA;AAEpC,QAAIb,WAAWnX,QAAQ;AACrB,aAAOmX;;AAGT,UAAMY,OAAO,KAAKsC,kBAAiB;AACnC,UAAMpb,QAAQ,KAAKoa,mBAAkB;AACrC,QAAItB,KAAK/X,UAAUf,MAAMe,QAAQ;AAG/BmX,mBAAa,KAAK0E,UAAU9D,KAAK6D,OAAO3c,KAAAA,CAAAA;WACnC;AACLkY,mBAAaY,KAAK/X,SAAS+X,OAAO9Y;;AAEpCkY,iBAAa,KAAKW,OAAOE,MAAMb;AAE/B,WAAOA;EACT;EAMA4C,mBAAmBja,OAAO;AACxB,YAAQic,aAAY,KAAKU,QAAQ3c,KAAS,IAAA,KAAK4c,WAAW,KAAKC;EACjE;EAMAra,iBAAiBC,OAAO;AACtB,UAAMuY,UAAU,KAAK3C;AACrB,UAAM3O,UAAU,KAAKhH,mBAAmBD,KAAAA,IAASuY,QAAQ9W,SAAS8W,QAAQvV;AAC1E,WAAOwW,aAAY,KAAKU,QAAQjT,UAAU,KAAKmT,cAAc,KAAKD,SAAS,IAAI;EACjF;AACF;AA3IE,cAFIF,iBAEG7Z,MAAK;AAKZ,cAPI6Z,iBAOG5Z,YAAWgV,UAAUhV;;;AE5B9B,IAAMsa,sBAAsB;AAErB,SAASC,aAAgBC,KAAsBC,OAAQ;AAC5D,MAAI,OAAOD,QAAQ,YAAY;AAC7BA,QAAIC,KAAAA;EACN,WAAWD,KAAK;AACdA,QAAIE,UAAUD;EAChB;AACF;AAEO,SAASE,WAIdC,OAAoCC,aAAgC;AACpE,QAAMC,UAAUF,MAAME;AAEtB,MAAIA,WAAWD,aAAa;AAC1BE,WAAOC,OAAOF,SAASD,WAAAA;EACzB;AACF;AAEO,SAASI,UAKdC,aACAC,YAAgC;AAEhCD,cAAYE,SAASD;AACvB;AAEO,SAASE,YAKdH,aACAI,cAA0C;AAC1CC,MAAAA,eAAAA,UAAejB,SAAAA,KAAAA,UAAAA,CAAAA,MAAAA,SAAAA,UAAAA,CAAAA,IAAAA;AAEf,QAAMkB,gBAA8C,CAAA;AAEpDN,cAAYO,WAAWH,aAAaI,IAClC,CAACC,gBAAAA;AAEC,UAAMC,iBAAiBV,YAAYO,SAASI,KAC1C,CAACC,YACCA,QAAQP,YAAAA,MAAkBI,YAAYJ,YAAa,CAAA;AAIvD,QACE,CAACK,kBACD,CAACD,YAAYI,QACbP,cAAcQ,SAASJ,cACvB,GAAA;AACA,aAAO;QAAE,GAAGD;MAAY;IAC1B;AAEAH,kBAAcS,KAAKL,cAAAA;AAEnBb,WAAOC,OAAOY,gBAAgBD,WAAAA;AAE9B,WAAOC;EACT,CAAA;AAEJ;AAEO,SAASM,UAIdH,MAAqC;AAAER,MAAAA,eAAAA,UAAejB,SAAAA,KAAAA,UAAAA,CAAAA,MAAAA,SAAAA,UAAAA,CAAAA,IAAAA;AACtD,QAAM6B,WAA4C;IAChDf,QAAQ,CAAA;IACRK,UAAU,CAAA;EACZ;AAEAR,YAAUkB,UAAUJ,KAAKX,MAAM;AAC/BC,cAAYc,UAAUJ,KAAKN,UAAUF,YAAAA;AAErC,SAAOY;AACT;ACnFA,SAASC,eAKPC,OACAC,KAAgD;AAEhD,QAAM,EACJC,SAAS,KACTC,QAAQ,KACRC,SAAS,OACTC,cACAC,MACAC,MACAC,SACAC,UAAU,CAAA,GACVC,iBACAC,YACA,GAAGC,YAAAA,IACDZ;AACJ,QAAMa,gBAAYC,sBAA0B,IAAA;AAC5C,QAAMC,eAAWD,sBAA6C,IAAA;AAE9D,QAAME,cAAc,MAAA;AAClB,QAAI,CAACH,UAAUI;AAAS;AAExBF,aAASE,UAAU,IAAIC,MAAQL,UAAUI,SAAS;MAChDX;MACAC,MAAMY,UAAUZ,MAAMF,YAAAA;MACtBG,SAASA,WAAW;QAAE,GAAGA;MAAQ;MACjCC;IACF,CAAA;AAEAW,iBAAanB,KAAKc,SAASE,OAAO;EACpC;AAEA,QAAMI,eAAe,MAAA;AACnBD,iBAAanB,KAAK,IAAA;AAElB,QAAIc,SAASE,SAAS;AACpBF,eAASE,QAAQK,QAAO;AACxBP,eAASE,UAAU;IACrB;EACF;AAEAM,+BAAU,MAAA;AACR,QAAI,CAACnB,UAAUW,SAASE,WAAWT,SAAS;AAC1CgB,iBAAWT,SAASE,SAAST,OAAAA;IAC/B;KACC;IAACJ;IAAQI;EAAQ,CAAA;AAEpBe,+BAAU,MAAA;AACR,QAAI,CAACnB,UAAUW,SAASE,SAAS;AAC/BQ,gBAAUV,SAASE,QAAQS,OAAOnB,MAAMA,KAAKoB,MAAM;IACrD;KACC;IAACvB;IAAQG,KAAKoB;EAAO,CAAA;AAExBJ,+BAAU,MAAA;AACR,QAAI,CAACnB,UAAUW,SAASE,WAAWV,KAAKqB,UAAU;AAChDC,kBAAYd,SAASE,QAAQS,OAAOnB,MAAMA,KAAKqB,UAAUvB,YAAAA;IAC3D;KACC;IAACD;IAAQG,KAAKqB;EAAS,CAAA;AAE1BL,+BAAU,MAAA;AACR,QAAI,CAACR,SAASE;AAAS;AAEvB,QAAIb,QAAQ;AACViB,mBAAAA;AACAS,iBAAWd,WAAAA;WACN;AACLD,eAASE,QAAQc,OAAOpB,UAAAA;IAC1B;KACC;IAACP;IAAQI;IAASD,KAAKoB;IAAQpB,KAAKqB;IAAUjB;EAAW,CAAA;AAE5DY,+BAAU,MAAA;AACR,QAAI,CAACR,SAASE;AAAS;AAEvBI,iBAAAA;AACAS,eAAWd,WAAAA;KACV;IAACV;EAAK,CAAA;AAETiB,+BAAU,MAAA;AACRP,gBAAAA;AAEA,WAAO,MAAMK,aAAAA;EACf,GAAG,CAAA,CAAE;AAEL,SACE,8BAAAW,QAACC,cAAAA,UAAAA;IACChC,KAAKY;IACLqB,MAAK;IACLhC;IACAC;IACC,GAAGS;EAEHF,GAAAA,eAAAA;AAGP;AAEO,IAAMyB,SAAQC,8CAAWrC,cAAsC;AC7FtE,SAASsC,iBACP/B,MACAgC,eAAiC;AAEjCpB,QAAQqB,SAASD,aAAAA;AAEjB,SAAOF,8CACL,CAACpC,OAAOC,QAAQ,8BAAA+B,QAACG,cAAAA,QAAAA;IAAO,GAAGnC;IAAOC;IAAUK;;AAEhD;IAEakC,OAAuBH,iCAAiB,QAAQI,cAAgB;IAEhEC,OAAsBL,iCAAiB,OAAOM,aAAe;;;ACqFpE,IAAAC,0BAAA;AAtHN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,0DAA4D,EAAE;AAAA,EACvG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAqD;AACrD,cAAY,IAAI,eAAe;AACjC;AAKA,MAAQ,SAAS,eAAe,aAAa,YAAY,cAAO,gBAAS,aAAM;AAC/E,IAAM,cAAc;AAAA,EAAC;AAAA,IACnB,KAAK;AAAA,IACL,OAAO;AAAA,EACT;AAAA;AAAA,EAEA;AAAA,IACE,KAAK;AAAA,IACL,OAAO;AAAA,EACT;AAAA;AAAA,EAEA;AAAA,IACE,KAAK;AAAA,IACL,OAAO;AAAA,EACT;AAAA;AAAA,EAEA;AAAA,IACE,KAAK;AAAA,IACL,OAAO;AAAA,EACT;AAAA;AACA;AACe,SAAR,sBAAuC;AAAA,EAC5C;AACF,GAAG;AACD,QAAM,YAAY;AAAA,IAChB,QAAQ,CAAC,YAAY,WAAW,UAAU;AAAA,IAC1C,UAAU,KAAK,IAAI,CAAC,KAAKC,YAAW;AAAA,MAClC,OAAO,IAAI;AAAA,MACX,MAAM,CAAC,IAAI,WAAW,UAAU,IAAI,WAAW,SAAS,IAAI,WAAW,QAAQ;AAAA,MAC/E,iBAAiB,YAAYA,MAAK,EAAE;AAAA,MACpC,sBAAsB,YAAYA,MAAK,EAAE;AAAA,MACzC,cAAc;AAAA,MACd,eAAe;AAAA,MACf,eAAe;AAAA,MACf,oBAAoB;AAAA,IACtB,EAAE;AAAA,EACJ;AACA,QAAM,UAAU;AAAA,IACd,YAAY;AAAA,IACZ,qBAAqB;AAAA,IACrB,aAAa;AAAA,MACX,MAAM;AAAA,MACN,WAAW;AAAA,IACb;AAAA,IACA,SAAS;AAAA,MACP,QAAQ;AAAA,QACN,UAAU;AAAA,QACV,QAAQ;AAAA,UACN,SAAS;AAAA,UACT,eAAe;AAAA,UACf,YAAY;AAAA,QACd;AAAA,MACF;AAAA,MACA,OAAO;AAAA,QACL,SAAS;AAAA,MACX;AAAA,MACA,SAAS;AAAA,QACP,iBAAiB;AAAA,QACjB,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,aAAa;AAAA,QACb,aAAa;AAAA,QACb,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,eAAe;AAAA,QACf,WAAW;AAAA,UACT,OAAO,aAAW,IAAI,QAAQ,QAAQ,UAAU,QAAQ,OAAO,EAAE,eAAe;AAAA,QAClF;AAAA,MACF;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,GAAG;AAAA,QACD,MAAM;AAAA,UACJ,SAAS;AAAA,QACX;AAAA,QACA,OAAO;AAAA,UACL,SAAS;AAAA,QACX;AAAA,MACF;AAAA,MACA,GAAG;AAAA,QACD,aAAa;AAAA,QACb,QAAQ;AAAA,UACN,SAAS;AAAA,QACX;AAAA,QACA,MAAM;AAAA,UACJ,OAAO;AAAA,QACT;AAAA,QACA,OAAO;AAAA,UACL,SAAS;AAAA,UACT,UAAU,SAAU,OAAO;AACzB,mBAAO,MAAM,eAAe;AAAA,UAC9B;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,SAAO,oDAAC,SACJ;AAAA,wDAAC,QAAG,WAAU,0CAAyC,sCAAvD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,oDAAC,OAAE,WAAU,8BAA6B,0DAA1C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAEA,oDAAC,SAAI,WAAU,aACb,8DAACC,MAAA,EAAI,MAAM,WAAW,WAAtB;AAAA;AAAA;AAAA;AAAA,WAAwC,KAD1C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAVG;AAAA;AAAA;AAAA;AAAA,SAWL;AACJ;AACAC,MAAK;AACL,IAAIA;AACJ,aAAaA,KAAI,uBAAuB;AAExC,OAAO,eAAe;AACtB,OAAO,eAAe;;;ACXd,IAAAC,0BAAA;AA5HR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kDAAoD,EAAE;AAAA,EAC/F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA6C;AAC7C,cAAY,IAAI,eAAe;AACjC;AAMA,MAAQ,SAAS,eAAe,aAAa,cAAc,aAAa,cAAO,gBAAS,eAAQ,KAAM;AACtG,IAAMC,eAAc;AAAA,EAAC;AAAA,IACnB,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA;AAAA,EAEA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA;AAAA,EAEA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA;AAAA,EAEA;AAAA,IACE,MAAM;AAAA,IACN,MAAM;AAAA,EACR;AAAA;AACA;AACe,SAAR,cAA+B;AAAA,EACpC;AACF,GAAG;AACD,QAAM,YAAY;AAAA,IAChB,QAAQ,KAAK,CAAC,GAAG,OAAO,IAAI,WAAS,IAAI,KAAK,MAAM,IAAI,EAAE,mBAAmB,CAAC,KAAK,CAAC;AAAA,IACpF,UAAU,KAAK,IAAI,CAAC,KAAKC,YAAW;AAAA,MAClC,OAAO,IAAI;AAAA,MACX,MAAM,IAAI,OAAO,IAAI,WAAS,MAAM,KAAK;AAAA,MACzC,aAAaD,aAAYC,MAAK,EAAE;AAAA,MAChC,iBAAiBD,aAAYC,MAAK,EAAE;AAAA,MACpC,SAAS;AAAA,MACT,MAAM;AAAA,MACN,aAAa;AAAA,MACb,kBAAkB;AAAA,MAClB,sBAAsBD,aAAYC,MAAK,EAAE;AAAA,MACzC,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,aAAa;AAAA,IACf,EAAE;AAAA,EACJ;AACA,QAAM,UAAU;AAAA,IACd,YAAY;AAAA,IACZ,qBAAqB;AAAA,IACrB,aAAa;AAAA,MACX,MAAM;AAAA,MACN,WAAW;AAAA,IACb;AAAA,IACA,SAAS;AAAA,MACP,QAAQ;AAAA,QACN,UAAU;AAAA,QACV,QAAQ;AAAA,UACN,SAAS;AAAA,UACT,eAAe;AAAA,UACf,YAAY;AAAA,QACd;AAAA,MACF;AAAA,MACA,OAAO;AAAA,QACL,SAAS;AAAA,MACX;AAAA,MACA,SAAS;AAAA,QACP,iBAAiB;AAAA,QACjB,YAAY;AAAA,QACZ,WAAW;AAAA,QACX,aAAa;AAAA,QACb,aAAa;AAAA,QACb,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,eAAe;AAAA,QACf,WAAW;AAAA,UACT,OAAO,aAAW,IAAI,QAAQ,QAAQ,UAAU,QAAQ,OAAO,EAAE,eAAe;AAAA,QAClF;AAAA,MACF;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,GAAG;AAAA,QACD,MAAM;AAAA,UACJ,SAAS;AAAA,QACX;AAAA,QACA,OAAO;AAAA,UACL,SAAS;AAAA,QACX;AAAA,MACF;AAAA,MACA,GAAG;AAAA,QACD,aAAa;AAAA,QACb,QAAQ;AAAA,UACN,SAAS;AAAA,QACX;AAAA,QACA,MAAM;AAAA,UACJ,OAAO;AAAA,QACT;AAAA,QACA,OAAO;AAAA,UACL,SAAS;AAAA,UACT,UAAU,SAAU,OAAO;AACzB,mBAAO,MAAM,eAAe;AAAA,UAC9B;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,SAAO,oDAAC,QAAK,WAAU,QACnB,8DAAC,SACC;AAAA,wDAAC,QAAG,WAAU,0DAAyD,8BAAvE;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,oDAAC,OAAE,WAAU,iDAAgD,8CAA7D;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAEA,oDAAC,SAAI,WAAU,aACb,8DAAC,QAAK,MAAM,WAAW,WAAvB;AAAA;AAAA;AAAA;AAAA,WAAyC,KAD3C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAVF;AAAA;AAAA;AAAA;AAAA,SAWA,KAZG;AAAA;AAAA;AAAA;AAAA,SAaL;AACJ;AACAC,MAAK;AACL,IAAIA;AACJ,aAAaA,KAAI,eAAe;AAEhC,OAAO,eAAe;AACtB,OAAO,eAAe;;;ACzHtB,IAAAC,gBAAwB;AA4BhB,IAAAC,0BAAA;AAjDR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,mDAAqD,EAAE;AAAA,EAChG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAIC,MAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA8C;AAC9C,cAAY,IAAI,eAAe;AACjC;AAKe,SAAR,eAAgC;AAAA,EACrC;AACF,GAAG;AACD,EAAAA,IAAG;AAEH,QAAM,qBAAiB,uBAAQ,MAAM;AACnC,WAAO,KAAK,QAAQ,SAAO,IAAI,SAAS,IAAI,cAAY;AAAA,MACtD,GAAG;AAAA,MACH,SAAS,IAAI;AAAA,MACb,SAAS,IAAI;AAAA,IACf,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,MAAM,IAAI,KAAK,EAAE,IAAI,EAAE,QAAQ,IAAI,IAAI,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,EAAE,MAAM,GAAG,EAAE;AAAA,EAC1F,GAAG,CAAC,IAAI,CAAC;AACT,MAAI,CAAC,MAAM,UAAU,CAAC,eAAe,QAAQ;AAC3C,WAAO;AAAA,EACT;AACA,QAAM,oBAAoB,eAAa;AACrC,YAAQ,WAAW;AAAA,MACjB,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO;AAAA,MACT;AACE,eAAO;AAAA,IACX;AAAA,EACF;AACA,SAAO,oDAAC,QACJ,8DAAC,SACC;AAAA,wDAAC,QAAG,WAAU,0CAAyC,+BAAvD;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,oDAAC,OAAE,WAAU,8BAA6B,6CAA1C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAEA,oDAAC,SAAI,WAAU,aACZ,yBAAe,IAAI,aAAW,oDAAC,QAAsB,WAAU,cAC5D,8DAAC,SAAI,WAAU,aACb;AAAA,0DAAC,SAAI,WAAU,qCACb;AAAA,4DAAC,SAAI,WAAU,2BACb;AAAA,8DAAC,SAAI,KAAK,QAAQ,SAAS,KAAK,GAAG,QAAQ,gBAAgB,WAAU,qBAArE;AAAA;AAAA;AAAA;AAAA,iBAAuF;AAAA,UACvF,oDAAC,UAAK,WAAU,qCACb,kBAAQ,WADX;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,QACA,oDAAC,SAAI,WAAU,2BACb;AAAA,8DAAC,SAAM,OAAO,kBAAkB,QAAQ,SAAS,GAC9C,kBAAQ,aADX;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,UAAK,WAAU,yBACb,cAAI,KAAK,QAAQ,IAAI,EAAE,mBAAmB,KAD7C;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,WAdF;AAAA;AAAA;AAAA;AAAA,aAeA;AAAA,MAEA,oDAAC,SACC,8DAAC,OAAE,WAAU,yBACV,kBAAQ,WADX;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MAEA,oDAAC,SAAI,WAAU,qCACb;AAAA,4DAAC,UAAK,WAAU,yBACb,kBAAQ,YADX;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,oDAAC,SAAI,WAAU,2BACb;AAAA,8DAAC,UAAK,WAAU,qCACb,kBAAQ,MAAM,QAAQ,CAAC,KAD1B;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,UAAK,WAAU,yBAAwB,sBAAxC;AAAA;AAAA;AAAA;AAAA,iBAAyC;AAAA,aAJ3C;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,WATF;AAAA;AAAA;AAAA;AAAA,aAUA;AAAA,SAlCF;AAAA;AAAA;AAAA;AAAA,WAmCA,KApCsC,QAAQ,IAAnB;AAAA;AAAA;AAAA;AAAA,WAqC7B,CAAO,KAtCX;AAAA;AAAA;AAAA;AAAA,WAuCA;AAAA,OA/CF;AAAA;AAAA;AAAA;AAAA,SAgDA,KAjDG;AAAA;AAAA;AAAA;AAAA,SAkDL;AACJ;AACAA,IAAG,gBAAgB,8BAA8B;AACjDC,MAAK;AACL,IAAIA;AACJ,aAAaA,KAAI,gBAAgB;AAEjC,OAAO,eAAe;AACtB,OAAO,eAAe;;;ACtDb,IAAAC,0BAAA;AAnDT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,iDAAmD,EAAE;AAAA,EAC9F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA4C;AAC5C,cAAY,IAAI,eAAe;AACjC;AAIe,SAAR,aAA8B;AAAA,EACnC;AACF,GAAG;AACD,QAAM,eAAe,MAAM;AACzB,UAAM,aAAa,KAAK,IAAI,UAAQ;AAAA,MAClC,MAAM,IAAI;AAAA,MACV,SAAS;AAAA,QACP,eAAe,IAAI,QAAQ;AAAA,QAC3B,cAAc,IAAI,QAAQ;AAAA,MAC5B;AAAA,MACA,YAAY;AAAA,QACV,UAAU,IAAI,WAAW;AAAA,QACzB,SAAS,IAAI,WAAW;AAAA,QACxB,UAAU,IAAI,WAAW;AAAA,MAC3B;AAAA,MACA,UAAU,IAAI;AAAA,MACd,UAAU,IAAI;AAAA,MACd,QAAQ,IAAI;AAAA,IACd,EAAE;AACF,UAAM,OAAO,IAAI,KAAK,CAAC,KAAK,UAAU,YAAY,MAAM,CAAC,CAAC,GAAG;AAAA,MAC3D,MAAM;AAAA,IACR,CAAC;AACD,UAAM,MAAM,IAAI,gBAAgB,IAAI;AACpC,UAAM,IAAI,SAAS,cAAc,GAAG;AACpC,MAAE,OAAO;AACT,MAAE,WAAW;AACb,aAAS,KAAK,YAAY,CAAC;AAC3B,MAAE,MAAM;AACR,aAAS,KAAK,YAAY,CAAC;AAC3B,QAAI,gBAAgB,GAAG;AAAA,EACzB;AACA,SAAO,oDAAC,UAAO,SAAS,cAAc,OAAM,QAAO,2BAA5C;AAAA;AAAA;AAAA;AAAA,SAEL;AACJ;AACAC,MAAK;AACL,IAAIA;AACJ,aAAaA,KAAI,cAAc;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;;;AtFyCR,IAAAC,0BAAA;AArGd,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,wDAA0D,EAAE;AAAA,EACrG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAIC,MAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAmD;AACnD,cAAY,IAAI,eAAe;AACjC;AAae,SAAR,sBAAuC;AAC5C,EAAAA,IAAG;AACH,QAAM,CAAC,MAAM,OAAO,QAAI,wBAAS,CAAC,CAAC;AACnC,QAAM,CAAC,WAAW,YAAY,QAAI,wBAAS,KAAK;AAChD,QAAM,CAAC,OAAO,QAAQ,QAAI,wBAAS,IAAI;AACvC,QAAM,CAAC,gBAAgB,iBAAiB,QAAI,wBAAS,CAAC,CAAC;AACvD,QAAM,gBAAgB,OAAO,SAAS,SAAS;AAC7C,iBAAa,IAAI;AACjB,aAAS,IAAI;AACb,QAAI;AACF,YAAM,WAAW,IAAI,SAAS;AAC9B,eAAS,OAAO,QAAQ,KAAK,UAAU,OAAO,CAAC;AAC/C,eAAS,OAAO,QAAQ,KAAK,SAAS,CAAC;AACvC,YAAM,WAAW,MAAM,MAAM,gBAAgB;AAAA,QAC3C,QAAQ;AAAA,QACR,MAAM;AAAA,MACR,CAAC;AACD,UAAI,CAAC,SAAS,IAAI;AAChB,cAAM,YAAY,MAAM,SAAS,KAAK;AACtC,cAAM,IAAI,MAAM,UAAU,SAAS,iCAAiC;AAAA,MACtE;AACA,YAAM,OAAO,MAAM,SAAS,KAAK;AACjC,UAAI,CAAC,KAAK,SAAS;AACjB,cAAM,IAAI,MAAM,KAAK,SAAS,wBAAwB;AAAA,MACxD;AAGA,YAAM,WAAW,OAAO,QAAQ,KAAK,OAAO,EAAE,IAAI,CAAC,CAAC,KAAK,MAAM,OAAO;AAAA,QACpE,IAAI;AAAA,QACJ,MAAM,OAAO,SAAS,SAAS,IAAI,MAAM,KAAK,EAAE,CAAC,GAAG,MAAM,GAAG,EAAE,CAAC,KAAK;AAAA,QACrE,MAAM,OAAO,SAAS,QAAQ,6CAA6C;AAAA,QAC3E,SAAS;AAAA,UACP,eAAe,OAAO,UAAU,OAAO,CAAC,KAAK,MAAM,MAAM,EAAE,OAAO,CAAC,KAAK,OAAO,UAAU,UAAU,MAAM;AAAA,UACzG,cAAc,OAAO,UAAU,UAAU;AAAA,QAC3C;AAAA,QACA,YAAY;AAAA,UACV,UAAU,OAAO,WAAW,YAAY;AAAA,UACxC,SAAS,OAAO,WAAW,WAAW;AAAA,UACtC,UAAU,OAAO,WAAW,YAAY;AAAA,QAC1C;AAAA,QACA,UAAU,OAAO,YAAY,CAAC;AAAA,QAC9B,UAAU,OAAO,YAAY,CAAC;AAAA,QAC9B,QAAQ,OAAO,UAAU,CAAC;AAAA,MAC5B,EAAE;AACF,cAAQ,QAAQ;AAGhB,YAAM,6BAA6B,KAAK,kBAAkB,kBAAkB,KAAK,kBAAkB,CAAC,GAAG,IAAI,SAAO;AAAA,QAChH,MAAM,GAAG;AAAA,QACT,QAAQ,SAAS,OAAO,CAAC,KAAK,QAAQ;AACpC,cAAI,IAAI,EAAE,IAAI,GAAG,SAAS,IAAI,EAAE,KAAK;AACrC,iBAAO;AAAA,QACT,GAAG,CAAC,CAAC;AAAA,MACP,EAAE;AACF,wBAAkB,yBAAyB;AAAA,IAC7C,SAAS,KAAP;AACA,eAAS,eAAe,QAAQ,IAAI,UAAU,0BAA0B;AACxE,cAAQ,MAAM,qBAAqB,GAAG;AAAA,IACxC,UAAE;AACA,mBAAa,KAAK;AAAA,IACpB;AAAA,EACF;AACA,QAAM,kBAAkB,WAAS;AAC/B,YAAQ,cAAY,SAAS,OAAO,SAAO,IAAI,OAAO,KAAK,CAAC;AAAA,EAC9D;AACA,SAAO,oDAAC,SAAI,WAAU,aAClB,8DAAC,SAAI,WAAU,yCAEb;AAAA,wDAAC,QAAK,WAAU,iBACd;AAAA,0DAAC,SAAI,WAAU,oFACb;AAAA,4DAAC,SACC;AAAA,8DAAC,QAAG,WAAU,mDAAkD,4BAAhE;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,oDAAC,OAAE,WAAU,2BAA0B,qDAAvC;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aANF;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,QACC,KAAK,SAAS,KAAK,oDAAC,gBAAa,MAAM;AAAA,UACxC;AAAA,UACA;AAAA,QACF,KAHsB;AAAA;AAAA;AAAA;AAAA,eAGnB;AAAA,WAZH;AAAA;AAAA;AAAA;AAAA,aAaA;AAAA,MACA,oDAAC,qBAAkB,UAAU,iBAA7B;AAAA;AAAA;AAAA;AAAA,aAA4C;AAAA,SAf9C;AAAA;AAAA;AAAA;AAAA,WAgBA;AAAA,IAEC,SAAS,oDAAC,SAAM,OAAM,WAAU,MAAM,+BAAuB,WAAU,iBACnE,mBADK;AAAA;AAAA;AAAA;AAAA,WAER;AAAA,IAED,YAAY,oDAAC,SAAI,WAAU,2CACxB,8DAAC,WAAQ,MAAK,QAAd;AAAA;AAAA;AAAA;AAAA,WAAmB,KADV;AAAA;AAAA;AAAA;AAAA,WAEX,IAAS,KAAK,SAAS,IAAI,wFAEzB;AAAA,0DAAC,QAAK,WAAU,iBACd,8DAAC,qBAAkB,MAAY,aAAa,mBAA5C;AAAA;AAAA;AAAA;AAAA,aAA6D,KAD/D;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAGA,oDAAC,QACC,8DAAC,iBAAc,QAAf;AAAA;AAAA;AAAA;AAAA,aAA2B,KAD7B;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAGA,oDAAC,QACC,8DAAC,yBAAsB,QAAvB;AAAA;AAAA;AAAA;AAAA,aAAmC,KADrC;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAGA,oDAAC,QAAK,WAAU,iBACd,8DAAC,sBAAmB,MAAY,kBAAhC;AAAA;AAAA;AAAA;AAAA,aAAgE,KADlE;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAGA,oDAAC,QAAK,WAAU,iBACd,8DAAC,kBAAe,QAAhB;AAAA;AAAA;AAAA;AAAA,aAA4B,KAD9B;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAxByB;AAAA;AAAA;AAAA;AAAA,WAyB3B,IAAM,oDAAC,SAAM,OAAM,QAAO,MAAM,+BAAuB,WAAU,iBAAgB,iGAA3E;AAAA;AAAA;AAAA;AAAA,WAEN;AAAA,OArDJ;AAAA;AAAA;AAAA;AAAA,SAsDA,KAvDG;AAAA;AAAA;AAAA;AAAA,SAwDL;AACJ;AACAA,IAAG,qBAAqB,8BAA8B;AACtDC,MAAK;AACL,IAAIA;AACJ,aAAaA,KAAI,qBAAqB;AAEtC,OAAO,eAAe;AACtB,OAAO,eAAe;;;AuFhIhB,IAAAC,2BAAA;AA/BN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,gCAAkC,EAAE;AAAA,EAC7E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2B;AAC3B,cAAY,IAAI,eAAe;AACjC;AAKO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC;AACH;AACe,SAAR,aAA8B;AACnC,SAAO,qDAAC,SAAI,WAAU,gCAClB;AAAA,yDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,WAAS;AAAA,IACT,qDAAC,UAAK,WAAU,wCACd,+DAAC,SAAI,WAAU,+BACb;AAAA,2DAAC,SAAI,WAAU,0CACb,+DAAC,SACC;AAAA,6DAAC,QAAG,WAAU,oCAAmC,8BAAjD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,qDAAC,OAAE,WAAU,iBAAgB,iDAA7B;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WANF;AAAA;AAAA;AAAA;AAAA,aAOA,KARF;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,MACA,qDAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,aAAqB;AAAA,SAXvB;AAAA;AAAA;AAAA;AAAA,WAYA,KAbF;AAAA;AAAA;AAAA;AAAA,WAcA;AAAA,OAhBG;AAAA;AAAA;AAAA;AAAA,SAiBL;AACJ;AACAC,OAAK;AACL,IAAIA;AACJ,aAAaA,MAAI,YAAY;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react", "index", "import_react", "import_jsx_dev_runtime", "index", "_c", "import_jsx_dev_runtime", "_s", "formatDiff", "getDiffColorClass", "colors", "index", "_c", "import_react", "import_jsx_dev_runtime", "_s", "_c", "color", "noop", "uid", "id", "isNullOrUndef", "value", "undefined", "isArray", "Array", "type", "Object", "prototype", "toString", "call", "slice", "isObject", "isNumberFinite", "Number", "isFinite", "finiteOrDefault", "defaultValue", "valueOrDefault", "toDimension", "value", "dimension", "endsWith", "parseFloat", "callback", "fn", "args", "thisArg", "call", "apply", "each", "loopable", "reverse", "i", "len", "keys", "isArray", "length", "isObject", "Object", "_elementsEqual", "a0", "a1", "ilen", "v0", "v1", "datasetIndex", "index", "clone", "source", "map", "target", "create", "klen", "k", "isValidKey", "key", "indexOf", "_merger", "options", "tval", "sval", "merge", "sources", "merger", "current", "mergeIf", "_mergerIf", "prototype", "hasOwnProperty", "keyResolvers", "v", "x", "o", "y", "_splitKey", "key", "parts", "split", "keys", "tmp", "part", "endsWith", "slice", "push", "_getKeyResolver", "obj", "k", "resolveObjectKey", "resolver", "_capitalize", "str", "charAt", "toUpperCase", "defined", "value", "isFunction", "setsEqual", "a", "b", "size", "item", "has", "_isClickEvent", "e", "type", "PI", "Math", "TAU", "PITAU", "INFINITY", "Number", "POSITIVE_INFINITY", "RAD_PER_DEG", "HALF_PI", "QUARTER_PI", "TWO_THIRDS_PI", "log10", "sign", "almostEquals", "epsilon", "abs", "niceNum", "range", "roundedRange", "round", "niceRange", "pow", "floor", "fraction", "niceFraction", "_factorize", "result", "sqrt", "i", "sort", "pop", "isNonPrimitive", "n", "Symbol", "toPrimitive", "isNumber", "isNaN", "parseFloat", "isFinite", "almostWhole", "rounded", "_setMinAndMaxByKey", "array", "target", "property", "ilen", "length", "min", "max", "toRadians", "degrees", "toDegrees", "radians", "_decimalPlaces", "isFiniteNumber", "p", "getAngleFromPoint", "centrePoint", "anglePoint", "distanceFromXCenter", "distanceFromYCenter", "radialDistanceFromCenter", "angle", "atan2", "distance", "distanceBetweenPoints", "pt1", "pt2", "_angleDiff", "_normalizeAngle", "_angleBetween", "start", "end", "sameAngleIsFullCircle", "s", "angleToStart", "angleToEnd", "startToAngle", "endToAngle", "_limitValue", "_int16Range", "_isBetween", "_lookup", "table", "cmp", "index", "hi", "lo", "mid", "_lookupByKey", "last", "ti", "_rlookupByKey", "_filterBetween", "values", "arrayEvents", "listenArrayEvents", "listener", "_chartjs", "listeners", "Object", "defineProperty", "configurable", "enumerable", "forEach", "method", "base", "args", "res", "apply", "object", "unlistenArrayEvents", "stub", "indexOf", "splice", "_arrayUnique", "items", "set", "Set", "Array", "from", "requestAnimFrame", "window", "callback", "requestAnimationFrame", "throttled", "fn", "thisArg", "argsToUse", "ticking", "args", "call", "apply", "debounce", "delay", "timeout", "clearTimeout", "setTimeout", "_toLeftRightCenter", "align", "_alignStartEnd", "start", "end", "_textX", "left", "right", "rtl", "check", "_getStartAndCountOfVisiblePoints", "meta", "points", "animationsDisabled", "pointCount", "length", "count", "_sorted", "iScale", "vScale", "_parsed", "spanGaps", "dataset", "options", "axis", "min", "max", "minDefined", "maxDefined", "getUserBounds", "Math", "_lookupByKey", "lo", "getPixelForValue", "distanceToDefinedLo", "slice", "reverse", "findIndex", "point", "isNullOrUndef", "_limitValue", "hi", "distanceToDefinedHi", "_scaleRangesChanged", "xScale", "yScale", "_scaleRanges", "newRanges", "xmin", "xmax", "ymin", "ymax", "changed", "Object", "assign", "atEdge", "t", "elasticIn", "s", "p", "pow", "sin", "TAU", "elasticOut", "effects", "linear", "easeInQuad", "easeOutQuad", "easeInOutQuad", "easeInCubic", "easeOutCubic", "easeInOutCubic", "easeInQuart", "easeOutQuart", "easeInOutQuart", "easeInQuint", "easeOutQuint", "easeInOutQuint", "easeInSine", "cos", "HALF_PI", "easeOutSine", "easeInOutSine", "PI", "easeInExpo", "easeOutExpo", "easeInOutExpo", "easeInCirc", "sqrt", "easeOutCirc", "easeInOutCirc", "easeInElastic", "easeOutElastic", "easeInOutElastic", "easeInBack", "easeOutBack", "easeInOutBack", "easeInBounce", "easeOutBounce", "m", "d", "easeInOutBounce", "isPatternOrGradient", "value", "type", "toString", "color", "Color", "getHoverColor", "saturate", "darken", "hexString", "numbers", "colors", "applyAnimationsDefaults", "defaults", "set", "undefined", "duration", "easing", "from", "loop", "to", "describe", "_fallback", "_indexable", "_scriptable", "name", "properties", "active", "animation", "resize", "show", "animations", "visible", "hide", "v", "applyLayoutsDefaults", "autoPadding", "padding", "top", "bottom", "intlCache", "Map", "getNumberFormat", "locale", "cacheKey", "JSON", "stringify", "formatter", "get", "Intl", "NumberFormat", "formatNumber", "num", "format", "formatters", "values", "isArray", "numeric", "tickValue", "index", "ticks", "chart", "notation", "delta", "maxTick", "abs", "calculateDelta", "logDelta", "log10", "numDecimal", "isNaN", "floor", "minimumFractionDigits", "maximumFractionDigits", "logarithmic", "remain", "significand", "includes", "applyScaleDefaults", "display", "offset", "beginAtZero", "bounds", "clip", "grace", "grid", "lineWidth", "drawOnChartArea", "drawTicks", "tickLength", "tickWidth", "_ctx", "tickColor", "border", "dash", "dashOffset", "width", "title", "text", "minRotation", "maxRotation", "mirror", "textStrokeWidth", "textStrokeColor", "autoSkip", "autoSkipPadding", "labelOffset", "Ticks", "minor", "major", "crossAlign", "showLabelBackdrop", "backdropColor", "backdropPadding", "route", "startsWith", "overrides", "create", "descriptors", "getScope", "node", "key", "keys", "split", "i", "n", "k", "root", "scope", "merge", "Defaults", "constructor", "_descriptors", "_appliers", "backgroundColor", "borderColor", "datasets", "devicePixelRatio", "context", "platform", "getDevicePixelRatio", "elements", "events", "font", "family", "size", "style", "lineHeight", "weight", "hover", "hoverBackgroundColor", "ctx", "hoverBorderColor", "hoverColor", "indexAxis", "interaction", "mode", "intersect", "includeInvisible", "maintainAspectRatio", "onHover", "onClick", "parsing", "plugins", "responsive", "scale", "scales", "showLine", "drawActiveElementsOnTop", "override", "targetScope", "targetName", "scopeObject", "targetScopeObject", "privateName", "defineProperties", "writable", "enumerable", "local", "target", "isObject", "valueOrDefault", "appliers", "forEach", "toFontString", "_measureText", "data", "gc", "longest", "string", "textWidth", "measureText", "push", "_longestText", "arrayOfThings", "cache", "garbageCollect", "save", "ilen", "j", "jlen", "thing", "nestedThing", "restore", "gcLen", "splice", "_alignPixel", "pixel", "currentDevicePixelRatio", "halfWidth", "round", "clearCanvas", "canvas", "getContext", "resetTransform", "clearRect", "height", "drawPoint", "x", "y", "drawPointLegend", "w", "xOffset", "yOffset", "cornerRadius", "xOffsetW", "yOffsetW", "pointStyle", "rotation", "radius", "rad", "RAD_PER_DEG", "translate", "rotate", "drawImage", "beginPath", "ellipse", "arc", "closePath", "moveTo", "TWO_THIRDS_PI", "lineTo", "QUARTER_PI", "SQRT1_2", "rect", "fill", "borderWidth", "stroke", "_isPointInArea", "area", "margin", "clipArea", "unclipArea", "_steppedLineTo", "previous", "flip", "midpoint", "_bezierCurveTo", "bezierCurveTo", "cp1x", "cp2x", "cp1y", "cp2y", "setRenderOpts", "opts", "translation", "fillStyle", "textAlign", "textBaseline", "decorateText", "line", "strikethrough", "underline", "metrics", "actualBoundingBoxLeft", "actualBoundingBoxRight", "actualBoundingBoxAscent", "actualBoundingBoxDescent", "yDecoration", "strokeStyle", "decorationWidth", "drawBackdrop", "oldColor", "fillRect", "renderText", "lines", "strokeWidth", "strokeColor", "backdrop", "strokeText", "maxWidth", "fillText", "Number", "addRoundedRectPath", "h", "topLeft", "bottomLeft", "bottomRight", "topRight", "LINE_HEIGHT", "FONT_STYLE", "toLineHeight", "matches", "match", "numberOrZero", "_readValueToProps", "props", "ret", "objProps", "read", "prop", "toTRBL", "toTRBLCorners", "toPadding", "obj", "toFont", "fallback", "parseInt", "console", "warn", "resolve", "inputs", "info", "cacheable", "_addGrace", "minmax", "change", "toDimension", "keepZero", "add", "createContext", "parentContext", "_createResolver", "scopes", "prefixes", "rootScopes", "getTarget", "finalRootScopes", "_resolve", "Symbol", "toStringTag", "_cacheable", "_scopes", "_rootScopes", "_getTarget", "Proxy", "deleteProperty", "_keys", "_cached", "_resolveWithPrefixes", "getOwnPropertyDescriptor", "Reflect", "getPrototypeOf", "has", "getKeysFromAllScopes", "ownKeys", "storage", "_storage", "_attachContext", "proxy", "subProxy", "descriptorDefaults", "_proxy", "_context", "_subProxy", "_stack", "Set", "setContext", "receiver", "_resolveWithContext", "allKeys", "configurable", "scriptable", "indexable", "_allKeys", "isScriptable", "isFunction", "isIndexable", "readKey", "prefix", "_capitalize", "needsSubResolver", "prototype", "hasOwnProperty", "_resolveScriptable", "_resolveArray", "getValue", "Error", "Array", "join", "delete", "createSubResolver", "arr", "filter", "item", "resolver", "resolveFallback", "parent", "resolveObjectKey", "addScopes", "parentScopes", "parentFallback", "allScopes", "addScopesFromKey", "subGetTarget", "resolveKeysFromAllScopes", "EPSILON", "Number", "getPoint", "points", "i", "length", "skip", "getValueAxis", "indexAxis", "splineCurve", "firstPoint", "middlePoint", "afterPoint", "t", "previous", "current", "next", "d01", "distanceBetweenPoints", "d12", "s01", "s12", "isNaN", "fa", "fb", "x", "y", "monotoneAdjust", "deltaK", "mK", "pointsLen", "alphaK", "betaK", "tauK", "squaredMagnitude", "pointCurrent", "pointAfter", "almostEquals", "Math", "pow", "sqrt", "monotoneCompute", "valueAxis", "delta", "pointBefore", "iPixel", "vPixel", "splineCurveMonotone", "Array", "fill", "slopeDelta", "sign", "capControlPoint", "pt", "min", "max", "capBezierPoints", "area", "ilen", "point", "inArea", "inAreaPrev", "inAreaNext", "_isPointInArea", "cp1x", "left", "right", "cp1y", "top", "bottom", "cp2x", "cp2y", "_updateBezierControlPoints", "options", "loop", "controlPoints", "spanGaps", "filter", "cubicInterpolationMode", "prev", "tension", "_isDomSupported", "window", "document", "_getParentNode", "domNode", "parent", "parentNode", "toString", "host", "parseMaxStyle", "styleValue", "node", "parentProperty", "valueInPixels", "parseInt", "indexOf", "getComputedStyle", "element", "ownerDocument", "defaultView", "getStyle", "el", "property", "getPropertyValue", "positions", "getPositionedStyle", "styles", "style", "suffix", "result", "pos", "parseFloat", "width", "height", "useOffsetPos", "target", "shadowRoot", "getCanvasPosition", "e", "canvas", "touches", "source", "offsetX", "offsetY", "box", "rect", "getBoundingClientRect", "clientX", "clientY", "getRelativePosition", "event", "chart", "currentDevicePixelRatio", "borderBox", "boxSizing", "paddings", "borders", "xOffset", "yOffset", "round", "getContainerSize", "maxWidth", "maxHeight", "undefined", "container", "clientWidth", "clientHeight", "containerStyle", "containerBorder", "containerPadding", "INFINITY", "round1", "v", "getMaximumSize", "bbWidth", "bbHeight", "aspectRatio", "margins", "containerSize", "maintainHeight", "floor", "retinaScale", "forceRatio", "forceStyle", "pixelRatio", "deviceHeight", "deviceWidth", "ctx", "setTransform", "supportsEventListenerOptions", "passiveSupported", "passive", "addEventListener", "removeEventListener", "readUsedSize", "value", "matches", "match", "_pointInLine", "p1", "p2", "mode", "_steppedInterpolation", "_bezierInterpolation", "cp1", "cp2", "a", "b", "c", "d", "getRightToLeftAdapter", "rectX", "setWidth", "w", "textAlign", "align", "xPlus", "leftForLtr", "itemWidth", "getLeftToRightAdapter", "_itemWidth", "getRtlAdapter", "rtl", "overrideTextDirection", "direction", "original", "getPropertyPriority", "setProperty", "prevTextDirection", "restoreTextDirection", "propertyFn", "between", "_angleBetween", "compare", "_angleDiff", "normalize", "_normalizeAngle", "_isBetween", "normalizeSegment", "start", "end", "count", "getSegment", "segment", "bounds", "startBound", "endBound", "_boundSegment", "inside", "subStart", "prevValue", "startIsBefore", "endIsBefore", "shouldStart", "shouldStop", "push", "_boundSegments", "line", "segments", "sub", "findStartAndEnd", "solidSegments", "last", "cur", "stop", "_computeSegments", "segmentOptions", "_loop", "splitByStyles", "completeLoop", "_fullLoop", "setContext", "doSplitByStyles", "chartContext", "_chart", "getContext", "baseStyle", "readStyle", "_datasetIndex", "datasetIndex", "prevStyle", "addStyle", "s", "l", "st", "dir", "createContext", "type", "p0", "p0DataIndex", "p1DataIndex", "styleChanged", "backgroundColor", "borderCapStyle", "borderDash", "borderDashOffset", "borderJoinStyle", "borderWidth", "borderColor", "cache", "replacer", "key", "isPatternOrGradient", "includes", "JSON", "stringify", "Animator", "constructor", "_request", "_charts", "Map", "_running", "_lastDate", "undefined", "_notify", "chart", "anims", "date", "type", "callbacks", "listeners", "numSteps", "duration", "forEach", "fn", "initial", "currentStep", "Math", "min", "start", "_refresh", "requestAnimFrame", "call", "window", "_update", "Date", "now", "remaining", "running", "items", "length", "i", "draw", "item", "_active", "_total", "tick", "pop", "_getAnims", "charts", "get", "complete", "progress", "set", "listen", "event", "cb", "push", "add", "has", "reduce", "acc", "cur", "max", "_duration", "stop", "cancel", "remove", "delete", "transparent", "interpolators", "boolean", "from", "to", "factor", "color", "c0", "helpersColor", "c1", "valid", "mix", "hexString", "number", "Animation", "cfg", "target", "prop", "currentValue", "resolve", "_fn", "_easing", "effects", "easing", "linear", "_start", "floor", "delay", "_loop", "loop", "_target", "_prop", "_from", "_to", "_promises", "active", "update", "elapsed", "remain", "wait", "promises", "Promise", "res", "rej", "resolved", "method", "Animations", "config", "_chart", "_properties", "configure", "isObject", "animationOptions", "Object", "keys", "defaults", "animation", "animatedProps", "getOwnPropertyNames", "key", "option", "isArray", "properties", "_animateOptions", "values", "newOptions", "options", "resolveTargetOptions", "animations", "_createAnimations", "$shared", "awaitAll", "$animations", "then", "props", "charAt", "value", "size", "assign", "animator", "anim", "all", "scaleClip", "scale", "allowedOverflow", "opts", "reverse", "end", "defaultClip", "xScale", "yScale", "x", "y", "top", "right", "bottom", "left", "toClip", "t", "r", "b", "l", "disabled", "getSortedDatasetIndices", "filterVisible", "metasets", "_getSortedDatasetMetas", "ilen", "index", "applyStack", "stack", "dsIndex", "singleMode", "mode", "datasetIndex", "otherValue", "found", "isFinite", "sign", "convertObjectDataToArray", "data", "meta", "iScale", "vScale", "iAxisKey", "axis", "vAxisKey", "adata", "Array", "isStacked", "stacked", "getStackKey", "indexScale", "valueScale", "id", "getUserBounds", "minDefined", "maxDefined", "Number", "NEGATIVE_INFINITY", "POSITIVE_INFINITY", "getOrCreateStack", "stacks", "stackKey", "indexValue", "subStack", "getLastIndexInStack", "positive", "getMatchingVisibleMetas", "updateStacks", "controller", "parsed", "_cachedMeta", "_stacks", "iAxis", "vAxis", "itemStacks", "_top", "_bottom", "visualValues", "_visualValues", "getFirstScaleId", "scales", "filter", "shift", "createDatasetContext", "parent", "createContext", "dataset", "createDataContext", "element", "dataIndex", "raw", "clearStacks", "_parsed", "isDirectUpdateMode", "cloneIfNotShared", "cached", "shared", "createStack", "canStack", "hidden", "_stacked", "DatasetController", "_ctx", "ctx", "_cachedDataOpts", "getMeta", "_type", "_parsing", "_data", "_objectData", "_sharedOptions", "_drawStart", "_drawCount", "enableOptionSharing", "supportsDecimation", "$context", "_syncList", "datasetElementType", "dataElementType", "initialize", "linkScales", "addElements", "fill", "isPluginEnabled", "console", "warn", "updateIndex", "getDataset", "chooseId", "xid", "xAxisID", "valueOrDefault", "yid", "yAxisID", "rid", "rAxisID", "indexAxis", "iid", "iAxisID", "vid", "vAxisID", "getScaleForId", "rScale", "datasets", "getDatasetMeta", "scaleID", "_getOtherScale", "reset", "_destroy", "unlistenArrayEvents", "_dataCheck", "isExtensible", "listenArrayEvents", "buildOrUpdateElements", "resetNewElements", "stackChanged", "oldStacked", "_resyncElements", "scopeKeys", "datasetScopeKeys", "scopes", "getOptionScopes", "createResolver", "getContext", "parsing", "parse", "count", "sorted", "_sorted", "prev", "parseArrayData", "parseObjectData", "parsePrimitiveData", "isNotInOrderComparedToPrev", "labels", "getLabels", "singleScale", "xAxisKey", "yAxisKey", "resolveObjectKey", "getParsed", "getDataElement", "updateRangeFromParsed", "range", "parsedValue", "NaN", "getMinMax", "otherScale", "otherMin", "otherMax", "_skip", "getAllParsedValues", "getMaxOverflow", "getLabelAndValue", "label", "getLabelForValue", "_clip", "clip", "elements", "area", "chartArea", "drawActiveElementsOnTop", "getStyle", "resolveDatasetElementOptions", "resolveDataElementOptions", "context", "_resolveElementOptions", "elementType", "cache", "cacheKey", "sharing", "defined", "datasetElementScopeKeys", "prefixes", "names", "resolveNamedOptions", "freeze", "_resolveAnimations", "transition", "datasetAnimationScopeKeys", "_cacheable", "getSharedOptions", "includeOptions", "sharedOptions", "_animationsDisabled", "_getSharedOptions", "firstOpts", "previouslySharedOptions", "updateSharedOptions", "updateElement", "_setStyle", "removeHoverStyle", "setHoverStyle", "_removeDatasetHoverStyle", "_setDatasetHoverStyle", "arg1", "arg2", "numMeta", "numData", "_insertElements", "_removeElements", "move", "arr", "updateElements", "removed", "splice", "_sync", "args", "_dataChanges", "_onDataPush", "arguments", "_onDataPop", "_onDataShift", "_onDataSplice", "newCount", "_onDataUnshift", "getAllScaleValues", "_cache", "$bar", "visibleMetas", "concat", "_arrayUnique", "sort", "a", "computeMinSampleSize", "_length", "curr", "updateMinAndPrev", "abs", "getPixelForValue", "ticks", "getPixelForTick", "computeFitCategoryTraits", "ruler", "stackCount", "thickness", "barThickness", "ratio", "isNullOrUndef", "categoryPercentage", "barPercentage", "chunk", "pixels", "computeFlexCategoryTraits", "next", "percent", "parseFloatBar", "entry", "startValue", "endValue", "barStart", "barEnd", "_custom", "parseValue", "parseArrayOrPrimitive", "isFloatBar", "custom", "barSign", "actualBase", "isHorizontal", "borderProps", "horizontal", "base", "setBorderSkipped", "edge", "borderSkipped", "enableBorderRadius", "parseEdge", "swap", "startEnd", "orig", "v1", "v2", "v", "setInflateAmount", "inflateAmount", "BarController", "obj", "bars", "getBasePixel", "_getRuler", "vpixels", "head", "_calculateBarValuePixels", "ipixels", "_calculateBarIndexPixels", "center", "height", "width", "_getStacks", "last", "grouped", "currentParsed", "iScaleValue", "skipNull", "find", "val", "isNaN", "indexOf", "_getStackCount", "_getStackIndex", "name", "_startPixel", "_endPixel", "baseValue", "minBarLength", "floating", "getDataVisibility", "startPixel", "getPixelForDecimal", "endPixel", "getValueForPixel", "halfGrid", "getLineWidthForValue", "maxBarThickness", "Infinity", "stackIndex", "rects", "numbers", "overrides", "_index_", "offset", "grid", "_value_", "beginAtZero", "LineController", "DatasetController", "initialize", "enableOptionSharing", "supportsDecimation", "update", "mode", "meta", "_cachedMeta", "dataset", "line", "data", "points", "_dataset", "animationsDisabled", "chart", "_animationsDisabled", "start", "count", "_getStartAndCountOfVisiblePoints", "_drawStart", "_drawCount", "_scaleRangesChanged", "length", "_chart", "_datasetIndex", "index", "_decimated", "options", "resolveDatasetElementOptions", "showLine", "borderWidth", "segment", "updateElement", "undefined", "animated", "updateElements", "reset", "iScale", "vScale", "_stacked", "sharedOptions", "includeOptions", "_getSharedOptions", "iAxis", "axis", "vAxis", "spanGaps", "maxGapLength", "isNumber", "Number", "POSITIVE_INFINITY", "directUpdate", "end", "pointsCount", "prevParsed", "getParsed", "i", "point", "properties", "skip", "parsed", "nullData", "isNullOrUndef", "iPixel", "getPixelForValue", "vPixel", "getBasePixel", "applyStack", "isNaN", "stop", "abs", "raw", "resolveDataElementOptions", "active", "getMaxOverflow", "border", "firstPoint", "size", "lastPoint", "Math", "max", "draw", "updateControlPoints", "chartArea", "id", "defaults", "datasetElementType", "dataElementType", "overrides", "scales", "_index_", "type", "_value_", "abstract", "Error", "DateAdapterBase", "override", "members", "Object", "assign", "prototype", "options", "constructor", "init", "formats", "parse", "format", "add", "diff", "startOf", "endOf", "_date", "binarySearch", "metaset", "axis", "value", "intersect", "controller", "data", "_sorted", "iScale", "_cachedMeta", "spanGaps", "dataset", "length", "lookupMethod", "_reversePixels", "_rlookupByKey", "_lookupByKey", "result", "vScale", "_parsed", "distanceToDefinedLo", "slice", "lo", "reverse", "findIndex", "point", "isNullOrUndef", "Math", "max", "distanceToDefinedHi", "hi", "_sharedOptions", "el", "range", "getRange", "start", "end", "evaluateInteractionItems", "chart", "position", "handler", "metasets", "getSortedVisibleDatasetMetas", "i", "ilen", "index", "j", "element", "skip", "getDistanceMetricForAxis", "useX", "indexOf", "useY", "pt1", "pt2", "deltaX", "abs", "x", "deltaY", "y", "sqrt", "pow", "getIntersectItems", "useFinalPosition", "includeInvisible", "items", "isPointInArea", "evaluationFunc", "datasetIndex", "_isPointInArea", "chartArea", "inRange", "push", "getNearestRadialItems", "startAngle", "endAngle", "getProps", "angle", "getAngleFromPoint", "_angleBetween", "getNearestCartesianItems", "distanceMetric", "minDistance", "Number", "POSITIVE_INFINITY", "center", "getCenterPoint", "pointInArea", "distance", "getNearestItems", "getAxisItems", "rangeMethod", "intersectsItem", "modes", "e", "getRelativePosition", "elements", "forEach", "meta", "getDatasetMeta", "nearest", "STATIC_POSITIONS", "filterByPosition", "array", "filter", "v", "pos", "filterDynamicPositionByAxis", "box", "sortByWeight", "sort", "a", "b", "v0", "v1", "weight", "wrapBoxes", "boxes", "layoutBoxes", "stack", "stackWeight", "horizontal", "isHorizontal", "buildStacks", "layouts", "stacks", "wrap", "includes", "_stack", "count", "placed", "size", "setLayoutDims", "params", "vBoxMaxWidth", "hBoxMaxHeight", "layout", "fullSize", "factor", "width", "availableWidth", "height", "availableHeight", "buildLayoutBoxes", "left", "right", "top", "bottom", "centerHorizontal", "centerVertical", "leftAndTop", "concat", "rightAndBottom", "vertical", "getCombinedMax", "maxPadding", "updateMaxPadding", "boxPadding", "updateDims", "isObject", "getPadding", "newWidth", "outerWidth", "newHeight", "outerHeight", "widthChanged", "w", "heightChanged", "h", "same", "other", "handleMaxPadding", "updatePos", "change", "getMargins", "marginForPositions", "positions", "margin", "fitBoxes", "refitBoxes", "refit", "changed", "update", "setBoxDims", "placeBoxes", "userPadding", "padding", "defined", "addBox", "item", "_layers", "z", "draw", "removeBox", "layoutItem", "splice", "configure", "minPadding", "toPadding", "verticalBoxes", "horizontalBoxes", "each", "beforeLayout", "visibleVerticalBoxCount", "reduce", "total", "display", "freeze", "BasePlatform", "acquireContext", "canvas", "aspectRatio", "releaseContext", "context", "addEventListener", "type", "listener", "removeEventListener", "getDevicePixelRatio", "getMaximumSize", "floor", "isAttached", "updateConfig", "config", "BasicPlatform", "getContext", "animation", "EXPANDO_KEY", "EVENT_TYPES", "touchstart", "touchmove", "touchend", "pointerenter", "pointerdown", "pointermove", "pointerup", "pointerleave", "pointerout", "isNullOrEmpty", "initCanvas", "style", "renderHeight", "getAttribute", "renderWidth", "initial", "boxSizing", "displayWidth", "readUsedSize", "undefined", "displayHeight", "eventListenerOptions", "supportsEventListenerOptions", "passive", "addListener", "node", "removeListener", "fromNativeEvent", "event", "native", "nodeListContains", "nodeList", "contains", "createAttachObserver", "observer", "MutationObserver", "entries", "trigger", "entry", "addedNodes", "removedNodes", "observe", "document", "childList", "subtree", "createDetachObserver", "drpListeningCharts", "Map", "oldDevicePixelRatio", "onWindowResize", "dpr", "window", "devicePixelRatio", "resize", "currentDevicePixelRatio", "listenDevicePixelRatioChanges", "set", "unlistenDevicePixelRatioChanges", "delete", "createResizeObserver", "container", "_getParentNode", "throttled", "clientWidth", "ResizeObserver", "contentRect", "releaseObserver", "disconnect", "createProxyAndListen", "proxy", "ctx", "DomPlatform", "prop", "removeAttribute", "setAttribute", "keys", "key", "proxies", "$proxies", "handlers", "attach", "detach", "isConnected", "_detectPlatform", "_isDomSupported", "OffscreenCanvas", "Element", "active", "$animations", "tooltipPosition", "hasValue", "isNumber", "props", "final", "anims", "ret", "_to", "defaults", "defaultRoutes", "autoSkip", "scale", "ticks", "tickOpts", "determinedMaxTicks", "determineMaxTicks", "ticksLimit", "min", "maxTicksLimit", "majorIndices", "major", "enabled", "getMajorIndices", "numMajorIndices", "first", "last", "newTicks", "skipMajors", "spacing", "calculateSpacing", "avgMajorSpacing", "round", "offset", "tickLength", "_tickSize", "maxScale", "_length", "maxChart", "_maxLength", "evenMajorSpacing", "getEvenSpacing", "factors", "_factorize", "next", "ceil", "majorStart", "majorEnd", "valueOrDefault", "arr", "len", "reverseAlign", "align", "offsetFromEdge", "edge", "getTicksLimit", "ticksLength", "sample", "numItems", "increment", "getPixelForGridLine", "offsetGridLines", "validIndex", "_startPixel", "_endPixel", "epsilon", "lineValue", "getPixelForTick", "garbageCollect", "caches", "cache", "gc", "gcLen", "getTickMarkLength", "drawTicks", "getTitleHeight", "fallback", "font", "toFont", "lines", "isArray", "text", "lineHeight", "createScaleContext", "parent", "createContext", "createTickContext", "tick", "titleAlign", "_toLeftRightCenter", "titleArgs", "scales", "rotation", "maxWidth", "titleX", "titleY", "_alignStartEnd", "positionAxisID", "getPixelForValue", "HALF_PI", "Scale", "cfg", "id", "_margins", "maxHeight", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight", "labelRotation", "_range", "_gridLineItems", "_labelItems", "_labelSizes", "_longestTextCache", "_userMax", "_userMin", "_suggestedMax", "_suggestedMin", "_ticksLength", "_borderValue", "_cache", "_dataLimitsCached", "$context", "setContext", "suggestedMin", "suggestedMax", "raw", "getUserBounds", "finiteOrDefault", "NEGATIVE_INFINITY", "minDefined", "isFinite", "maxDefined", "getMinMax", "canStack", "metas", "getMatchingVisibleMetas", "getTicks", "getLabels", "labels", "xLabels", "yLabels", "getLabelItems", "_computeLabelItems", "beforeUpdate", "call", "margins", "beginAtZero", "grace", "sampleSize", "beforeSetDimensions", "setDimensions", "afterSetDimensions", "beforeDataLimits", "determineDataLimits", "afterDataLimits", "_addGrace", "beforeBuildTicks", "buildTicks", "afterBuildTicks", "samplingEnabled", "_convertTicksToLabels", "beforeCalculateLabelRotation", "calculateLabelRotation", "afterCalculateLabelRotation", "source", "afterAutoSkip", "beforeFit", "fit", "afterFit", "afterUpdate", "reversePixels", "startPixel", "endPixel", "_alignToPixels", "alignToPixels", "_callHooks", "name", "notifyPlugins", "beforeTickToLabelConversion", "generateTickLabels", "label", "callback", "afterTickToLabelConversion", "numTicks", "minRotation", "maxRotation", "tickWidth", "maxLabelDiagonal", "_isVisible", "labelSizes", "_getLabelSizes", "maxLabelWidth", "widest", "maxLabelHeight", "highest", "_limitValue", "grid", "title", "toDegrees", "asin", "minSize", "titleOpts", "gridOpts", "titleHeight", "tickPadding", "angleRadians", "toRadians", "cos", "sin", "labelHeight", "mirror", "labelWidth", "_calculatePadding", "_handleMargins", "isRotated", "labelsBelowTicks", "offsetLeft", "offsetRight", "isFullSize", "_computeLabelSizes", "widths", "heights", "widestLabelSize", "highestLabelSize", "jlen", "tickFont", "fontString", "nestedLabel", "_resolveTickFontOptions", "string", "_measureText", "valueAt", "idx", "getLabelForValue", "NaN", "getValueForPixel", "pixel", "getPixelForDecimal", "decimal", "_int16Range", "_alignPixel", "getDecimalForPixel", "getBasePixel", "getBaseValue", "optionTicks", "rot", "autoSkipPadding", "_computeGridLineItems", "border", "tl", "borderOpts", "axisWidth", "axisHalfWidth", "alignBorderValue", "borderValue", "alignedLineValue", "tx1", "ty1", "tx2", "ty2", "x1", "y1", "x2", "y2", "limit", "step", "optsAtIndex", "optsAtIndexBorder", "lineWidth", "lineColor", "color", "borderDash", "dash", "borderDashOffset", "dashOffset", "tickColor", "tickBorderDash", "tickBorderDashOffset", "crossAlign", "tickAndPadding", "hTickAndPadding", "textAlign", "lineCount", "textOffset", "textBaseline", "_getXAxisLabelAlignment", "_getYAxisLabelAlignment", "labelOffset", "halfCount", "strokeColor", "textStrokeColor", "strokeWidth", "textStrokeWidth", "tickTextAlign", "showLabelBackdrop", "backdrop", "labelPadding", "backdropPadding", "backdropColor", "translation", "_computeLabelArea", "drawBackground", "backgroundColor", "save", "fillStyle", "fillRect", "restore", "getLineWidthForValue", "t", "opts", "drawGrid", "drawLine", "p1", "p2", "strokeStyle", "setLineDash", "lineDashOffset", "beginPath", "moveTo", "lineTo", "stroke", "drawOnChartArea", "drawBorder", "lastLineWidth", "drawLabels", "area", "clipArea", "renderTextOptions", "renderText", "unclipArea", "drawTitle", "tz", "gz", "bz", "axisID", "_maxDigits", "fontSize", "TypedRegistry", "scope", "create", "isForType", "isPrototypeOf", "register", "proto", "getPrototypeOf", "parentScope", "isIChartComponent", "registerDefaults", "overrides", "get", "unregister", "itemDefaults", "merge", "routeDefaults", "descriptors", "describe", "routes", "property", "propertyParts", "split", "sourceName", "pop", "sourceScope", "join", "parts", "targetName", "targetScope", "route", "Registry", "controllers", "DatasetController", "plugins", "_typedRegistries", "args", "_each", "remove", "addControllers", "addElements", "addPlugins", "addScales", "getController", "_get", "getElement", "getPlugin", "getScale", "removeControllers", "removeElements", "removePlugins", "removeScales", "method", "typedRegistry", "arg", "reg", "_getRegistryForType", "_exec", "itemReg", "registry", "component", "camelMethod", "_capitalize", "PluginService", "_init", "notify", "hook", "_createDescriptors", "_notify", "_descriptors", "descriptor", "plugin", "callCallback", "cancelable", "invalidate", "_oldCache", "_notifyStateChanges", "all", "allPlugins", "createDescriptors", "previousDescriptors", "some", "localIds", "local", "getOpts", "pluginOpts", "pluginScopeKeys", "scopes", "getOptionScopes", "createResolver", "scriptable", "indexable", "allKeys", "getIndexAxis", "datasetDefaults", "datasets", "datasetOptions", "indexAxis", "getAxisFromDefaultScaleID", "getDefaultScaleIDFromAxis", "idMatchesAxis", "axisFromPosition", "determineAxis", "scaleOptions", "toLowerCase", "getAxisFromDataset", "retrieveAxisFromDatasets", "boundDs", "d", "xAxisID", "yAxisID", "mergeScaleConfig", "chartDefaults", "configScales", "chartIndexAxis", "scaleConf", "console", "error", "_proxy", "warn", "defaultId", "defaultScaleOptions", "mergeIf", "defaultID", "initOptions", "initData", "initConfig", "keyCache", "keysCached", "Set", "cachedKeys", "cacheKey", "generate", "addIfFound", "obj", "resolveObjectKey", "Config", "_config", "_scopeCache", "_resolverCache", "platform", "clearCache", "clear", "datasetScopeKeys", "datasetType", "datasetAnimationScopeKeys", "transition", "datasetElementScopeKeys", "elementType", "additionalOptionScopes", "_cachedScopes", "mainScope", "resetCache", "keyLists", "cached", "Array", "from", "has", "chartOptionScopes", "resolveNamedOptions", "names", "prefixes", "$shared", "resolver", "subPrefixes", "getResolver", "needContext", "isFunction", "subResolver", "_attachContext", "descriptorDefaults", "resolverCache", "_createResolver", "p", "hasFunction", "getOwnPropertyNames", "isScriptable", "isIndexable", "KNOWN_POSITIONS", "positionIsHorizontal", "compare2Level", "l1", "l2", "onAnimationsComplete", "animationOptions", "onComplete", "onAnimationProgress", "onProgress", "getCanvas", "getElementById", "instances", "getChart", "values", "c", "moveNumericKeys", "move", "intKey", "determineLastEvent", "lastEvent", "inChartArea", "isClick", "getSizeForArea", "field", "clip", "getDatasetArea", "xScale", "yScale", "Chart", "invalidatePlugins", "userConfig", "initialCanvas", "existingChart", "uid", "_options", "_aspectRatio", "_metasets", "_stacks", "_active", "_lastEvent", "_listeners", "_responsiveListeners", "_sortedMetasets", "_plugins", "_hiddenIndices", "attached", "_animationsDisabled", "_doResize", "debounce", "mode", "resizeDelay", "_dataChanges", "animator", "listen", "_initialize", "maintainAspectRatio", "responsive", "retinaScale", "bindEvents", "clearCanvas", "stop", "running", "_resize", "_resizeBeforeDraw", "newSize", "newRatio", "onResize", "render", "ensureScalesHaveIDs", "scalesOptions", "axisOptions", "buildOrUpdateScales", "scaleOpts", "updated", "map", "isRadial", "dposition", "dtype", "scaleType", "scaleClass", "hasUpdated", "_updateMetasets", "numData", "numMeta", "_destroyDatasetMeta", "_removeUnreferencedMetasets", "_dataset", "buildOrUpdateControllers", "newControllers", "order", "visible", "isDatasetVisible", "updateIndex", "linkScales", "ControllerClass", "datasetElementType", "dataElementType", "_resetElements", "reset", "animsDisabled", "_updateScales", "_checkEventBindings", "_updateHiddenIndices", "buildOrUpdateElements", "getMaxOverflow", "_minPadding", "autoPadding", "_updateLayout", "_updateDatasets", "_eventHandler", "_updateHoverStyles", "existingEvents", "newEvents", "events", "setsEqual", "unbindEvents", "changes", "_getUniformDataChanges", "datasetCount", "makeSet", "changeSet", "noArea", "_idx", "_updateDataset", "_update", "layers", "_drawDatasets", "_getSortedDatasetMetas", "filterVisible", "_drawDataset", "_clip", "useClip", "disabled", "getElementsAtEventForMode", "Interaction", "hidden", "getVisibleDatasetCount", "setDatasetVisibility", "toggleDataVisibility", "getDataVisibility", "_updateVisibility", "dataIndex", "_resolveAnimations", "hide", "show", "_destroy", "_stop", "destroy", "toBase64Image", "toDataURL", "bindUserEvents", "bindResponsiveEvents", "listeners", "_add", "offsetX", "offsetY", "_remove", "detached", "updateHoverStyle", "prefix", "getActiveElements", "setActiveElements", "activeElements", "lastActive", "_elementsEqual", "isPluginEnabled", "pluginId", "replay", "hoverOptions", "hover", "deactivated", "activated", "eventFilter", "_handleEvent", "_getActiveElements", "_isClickEvent", "onHover", "onClick", "version", "setStyle", "ctx", "options", "style", "lineCap", "valueOrDefault", "borderCapStyle", "setLineDash", "borderDash", "lineDashOffset", "borderDashOffset", "lineJoin", "borderJoinStyle", "lineWidth", "borderWidth", "strokeStyle", "borderColor", "lineTo", "previous", "target", "x", "y", "getLineMethod", "stepped", "_steppedLineTo", "tension", "cubicInterpolationMode", "_bezierCurveTo", "pathVars", "points", "segment", "params", "count", "length", "start", "paramsStart", "end", "paramsEnd", "segmentStart", "segmentEnd", "Math", "max", "min", "outside", "loop", "ilen", "pathSegment", "line", "lineMethod", "move", "reverse", "i", "point", "prev", "skip", "moveTo", "fastPathSegment", "avgX", "countX", "prevX", "minY", "maxY", "lastY", "pointIndex", "index", "drawX", "truncX", "_getSegmentMethod", "opts", "useFastPath", "_decimated", "_loop", "_getInterpolationMethod", "_steppedInterpolation", "_bezierInterpolation", "_pointInLine", "strokePathWithCache", "path", "_path", "Path2D", "closePath", "stroke", "strokePathDirect", "segments", "segmentMethod", "beginPath", "usePath2D", "draw", "LineElement", "Element", "constructor", "cfg", "animated", "undefined", "_chart", "_fullLoop", "_points", "_segments", "_pointsUpdated", "_datasetIndex", "Object", "assign", "updateControlPoints", "chartArea", "indexAxis", "spanGaps", "_updateBezierControlPoints", "_computeSegments", "first", "last", "interpolate", "property", "value", "_boundSegments", "result", "_interpolate", "p1", "p2", "push", "t", "abs", "interpolated", "save", "restore", "id", "defaults", "capBezierPoints", "fill", "defaultRoutes", "backgroundColor", "descriptors", "_scriptable", "_indexable", "name", "inRange", "el", "pos", "axis", "useFinalPosition", "getProps", "radius", "hitRadius", "PointElement", "parsed", "stop", "mouseX", "mouseY", "pow", "inXRange", "inYRange", "getCenterPoint", "size", "hoverRadius", "area", "_isPointInArea", "fillStyle", "drawPoint", "getRange", "hoverBorderWidth", "pointStyle", "rotation", "getBarBounds", "bar", "base", "width", "height", "left", "right", "top", "bottom", "half", "horizontal", "skipOrLimit", "_limitValue", "parseBorderWidth", "maxW", "maxH", "borderSkipped", "o", "toTRBL", "r", "b", "l", "parseBorderRadius", "enableBorderRadius", "borderRadius", "toTRBLCorners", "maxR", "enableBorder", "isObject", "topLeft", "topRight", "bottomLeft", "bottomRight", "boundingRects", "bounds", "border", "outer", "w", "h", "inner", "skipX", "skipY", "skipBoth", "_isBetween", "hasRadius", "addNormalRectPath", "rect", "inflateRect", "amount", "refRect", "BarElement", "inflateAmount", "addRectPath", "addRoundedRectPath", "clip", "_segments", "line", "target", "property", "segments", "points", "tpoints", "parts", "segment", "start", "end", "_findSegmentEnd", "bounds", "_getBounds", "loop", "push", "source", "targetSegments", "_boundSegments", "tgt", "subBounds", "fillSources", "_boundSegment", "fillSource", "_getEdge", "Math", "max", "min", "first", "last", "_normalizeAngle", "_pointsFromSegments", "boundary", "x", "y", "linePoints", "forEach", "point", "isNaN", "a", "b", "prop", "fn", "_createBoundaryLine", "_loop", "isArray", "length", "LineElement", "options", "tension", "_fullLoop", "_shouldApplyFill", "fill", "_resolveTarget", "sources", "index", "propagate", "visited", "indexOf", "isFinite", "visible", "_decodeFill", "count", "parseFillOption", "isObject", "value", "parseFloat", "floor", "decodeTargetIndex", "firstCh", "_getTargetPixel", "scale", "pixel", "bottom", "top", "getPixelForValue", "getBasePixel", "_getTargetValue", "startValue", "reverse", "getBaseValue", "fillOption", "valueOrDefault", "undefined", "backgroundColor", "_buildStackLine", "sourcePoints", "linesBelow", "getLinesBelow", "i", "j", "addPointsBelow", "below", "metas", "getMatchingVisibleMetas", "meta", "hidden", "unshift", "dataset", "sourcePoint", "postponed", "findPoint", "interpolate", "pointValue", "firstValue", "lastValue", "_isBetween", "simpleArc", "constructor", "opts", "radius", "pathSegment", "ctx", "TAU", "arc", "angle", "cos", "sin", "_getTarget", "chart", "getLineByIndex", "computeBoundary", "getDatasetMeta", "isDatasetVisible", "getPointPositionForValue", "computeCircularBoundary", "computeLinearBoundary", "horizontal", "isHorizontal", "getLabels", "grid", "circular", "center", "getDistanceFromCenterForValue", "_drawfill", "area", "axis", "lineOpts", "color", "above", "clipArea", "doFill", "unclipArea", "cfg", "save", "clipVertical", "restore", "clipY", "lineLoop", "beginPath", "firstPoint", "lastPoint", "moveTo", "lineTo", "move", "closePath", "clip", "src", "style", "notShape", "fillStyle", "clipBounds", "interpolatedLineTo", "targetLoop", "chartArea", "rect", "interpolatedPoint", "id", "afterDatasetsUpdate", "_args", "data", "datasets", "controller", "indexAxis", "vScale", "$filler", "beforeDraw", "draw", "drawTime", "metasets", "getSortedVisibleDatasetMetas", "updateControlPoints", "beforeDatasetsDraw", "beforeDatasetDraw", "args", "defaults", "getBoxSize", "labelOpts", "fontSize", "boxHeight", "boxWidth", "usePointStyle", "pointStyleWidth", "itemHeight", "itemsEqual", "datasetIndex", "Legend", "Element", "config", "_added", "legendHitBoxes", "_hoveredItem", "doughnutMode", "legendItems", "columnSizes", "lineWidths", "maxHeight", "maxWidth", "left", "right", "height", "width", "_margins", "position", "weight", "fullSize", "update", "margins", "setDimensions", "buildLabels", "fit", "labels", "call", "generateLabels", "filter", "item", "sort", "display", "labelFont", "toFont", "font", "size", "titleHeight", "_computeTitleHeight", "string", "_fitRows", "_fitCols", "padding", "hitboxes", "lineHeight", "totalHeight", "textAlign", "textBaseline", "row", "legendItem", "itemWidth", "measureText", "text", "_itemHeight", "heightLimit", "totalWidth", "currentColWidth", "currentColHeight", "col", "calculateItemSize", "adjustHitBoxes", "align", "rtl", "rtlHelper", "getRtlAdapter", "_alignStartEnd", "hitbox", "leftForLtr", "_draw", "defaultColor", "halfFontSize", "cursor", "drawTitle", "lineWidth", "drawLegendBox", "lineCap", "lineDashOffset", "lineJoin", "strokeStyle", "setLineDash", "lineDash", "drawOptions", "SQRT2", "pointStyle", "rotation", "borderWidth", "centerX", "xPlus", "centerY", "drawPointLegend", "yBoxTop", "xBoxLeft", "borderRadius", "toTRBLCorners", "Object", "values", "some", "v", "addRoundedRectPath", "w", "h", "stroke", "fillText", "renderText", "strikethrough", "overrideTextDirection", "textDirection", "fontColor", "textWidth", "setWidth", "realX", "_textX", "fontLineHeight", "calculateLegendItemHeight", "restoreTextDirection", "titleOpts", "title", "titleFont", "titlePadding", "toPadding", "topPaddingPlusHalfFontSize", "reduce", "acc", "_toLeftRightCenter", "_getLegendItemAt", "hitBox", "lh", "handleEvent", "e", "isListened", "type", "hoveredItem", "previous", "sameItem", "onLeave", "onHover", "onClick", "calculateItemWidth", "calculateItemHeight", "legendItemText", "labelHeight", "_element", "legend", "layouts", "configure", "addBox", "stop", "removeBox", "beforeUpdate", "afterUpdate", "afterEvent", "replay", "event", "ci", "hide", "show", "useBorderRadius", "_getSortedDatasetMetas", "map", "getStyle", "label", "borderCapStyle", "borderDash", "borderDashOffset", "borderJoinStyle", "borderColor", "descriptors", "_scriptable", "name", "startsWith", "includes", "Title", "_padding", "lineCount", "textSize", "pos", "_drawArgs", "offset", "titleX", "titleY", "PI", "fontOpts", "translation", "createTitle", "titleBlock", "defaultRoutes", "_indexable", "positioners", "average", "items", "length", "i", "len", "xSet", "Set", "y", "count", "el", "element", "hasValue", "pos", "tooltipPosition", "add", "x", "size", "xAverage", "reduce", "a", "b", "nearest", "eventPosition", "minDistance", "Number", "POSITIVE_INFINITY", "nearestElement", "center", "getCenterPoint", "d", "distanceBetweenPoints", "tp", "pushOrConcat", "base", "toPush", "isArray", "Array", "prototype", "push", "apply", "splitNewlines", "str", "String", "indexOf", "split", "createTooltipItem", "chart", "item", "datasetIndex", "index", "controller", "getDatasetMeta", "label", "value", "getLabelAndValue", "parsed", "getParsed", "raw", "data", "datasets", "formattedValue", "dataset", "getDataset", "dataIndex", "getTooltipSize", "tooltip", "options", "ctx", "body", "footer", "title", "boxWidth", "boxHeight", "bodyFont", "toFont", "titleFont", "footerFont", "titleLineCount", "footerLineCount", "bodyLineItemCount", "padding", "toPadding", "height", "width", "combinedBodyLength", "bodyItem", "before", "lines", "after", "beforeBody", "afterBody", "lineHeight", "titleSpacing", "titleMarginBottom", "bodyLineHeight", "displayColors", "Math", "max", "bodySpacing", "footerMarginTop", "footerSpacing", "widthPadding", "maxLineWidth", "line", "measureText", "save", "font", "string", "each", "concat", "boxPadding", "restore", "determineYAlign", "doesNotFitWithAlign", "xAlign", "caret", "caretSize", "caretPadding", "determineXAlign", "yAlign", "chartWidth", "chartArea", "left", "right", "determineAlignment", "alignX", "alignY", "paddingAndSize", "getBackgroundPoint", "alignment", "cornerRadius", "topLeft", "topRight", "bottomLeft", "bottomRight", "toTRBLCorners", "_limitValue", "getAlignedX", "align", "getBeforeAfterBodyLines", "callback", "createTooltipContext", "parent", "tooltipItems", "createContext", "type", "overrideCallbacks", "callbacks", "context", "override", "defaultCallbacks", "beforeTitle", "noop", "labels", "labelCount", "mode", "afterTitle", "beforeLabel", "tooltipItem", "isNullOrUndef", "labelColor", "meta", "getStyle", "borderColor", "backgroundColor", "borderWidth", "borderDash", "borderDashOffset", "borderRadius", "labelTextColor", "bodyColor", "labelPointStyle", "pointStyle", "rotation", "afterLabel", "beforeFooter", "afterFooter", "invokeCallbackWithFallback", "name", "arg", "result", "call", "Tooltip", "Element", "constructor", "config", "opacity", "_active", "_eventPosition", "undefined", "_size", "_cachedAnimations", "_tooltipItems", "$animations", "$context", "dataPoints", "caretX", "caretY", "labelColors", "labelPointStyles", "labelTextColors", "initialize", "_resolveAnimations", "cached", "setContext", "getContext", "opts", "enabled", "animation", "animations", "Animations", "_cacheable", "Object", "freeze", "getTitle", "getBeforeBody", "getBody", "bodyItems", "scoped", "getAfterBody", "getFooter", "_createItems", "active", "filter", "array", "itemSort", "sort", "update", "changed", "replay", "properties", "position", "positionAndSize", "assign", "backgroundPoint", "external", "drawCaret", "tooltipPoint", "caretPosition", "getCaretPosition", "lineTo", "x1", "y1", "x2", "y2", "x3", "y3", "ptX", "ptY", "drawTitle", "pt", "rtlHelper", "getRtlAdapter", "rtl", "titleAlign", "textAlign", "textBaseline", "fillStyle", "titleColor", "fillText", "_drawColorBox", "colorX", "rtlColorX", "yOffSet", "colorY", "usePointStyle", "drawOptions", "radius", "min", "centerX", "leftForLtr", "centerY", "strokeStyle", "multiKeyBackground", "drawPoint", "lineWidth", "isObject", "values", "setLineDash", "lineDashOffset", "outerX", "innerX", "xPlus", "some", "v", "beginPath", "addRoundedRectPath", "w", "h", "fill", "stroke", "fillRect", "strokeRect", "drawBody", "bodyAlign", "xLinePadding", "fillLineOfText", "bodyAlignForCalculation", "textColor", "j", "ilen", "jlen", "drawFooter", "footerAlign", "footerColor", "drawBackground", "tooltipSize", "moveTo", "quadraticCurveTo", "closePath", "_updateAnimationTarget", "anims", "animX", "animY", "point", "_to", "_willRender", "draw", "abs", "hasTooltipContent", "globalAlpha", "overrideTextDirection", "textDirection", "top", "restoreTextDirection", "getActiveElements", "setActiveElements", "activeElements", "lastActive", "map", "Error", "_elementsEqual", "positionChanged", "_positionChanged", "_ignoreReplayEvents", "handleEvent", "e", "inChartArea", "_getActiveElements", "getElementsAtEventForMode", "reverse", "id", "_element", "afterInit", "_args", "beforeUpdate", "reset", "afterDraw", "args", "notifyPlugins", "cancelable", "afterEvent", "useFinalPosition", "event", "defaults", "weight", "duration", "easing", "numbers", "defaultRoutes", "descriptors", "_scriptable", "_indexable", "_fallback", "additionalOptionScopes", "addIfString", "labels", "raw", "index", "addedLabels", "push", "unshift", "label", "isNaN", "findOrAddLabel", "first", "indexOf", "last", "lastIndexOf", "validIndex", "max", "_limitValue", "Math", "round", "_getLabelForValue", "value", "getLabels", "length", "CategoryScale", "Scale", "constructor", "cfg", "_startValue", "undefined", "_valueRange", "_addedLabels", "init", "scaleOptions", "added", "splice", "parse", "isNullOrUndef", "isFinite", "valueOrDefault", "determineDataLimits", "minDefined", "maxDefined", "getUserBounds", "min", "getMinMax", "options", "bounds", "buildTicks", "offset", "ticks", "slice", "getLabelForValue", "call", "configure", "isHorizontal", "_reversePixels", "getPixelForValue", "NaN", "getPixelForDecimal", "getPixelForTick", "getValueForPixel", "pixel", "getDecimalForPixel", "getBasePixel", "bottom", "id", "defaults", "callback", "generateTicks", "generationOptions", "dataRange", "MIN_SPACING", "step", "precision", "count", "maxTicks", "maxDigits", "includeBounds", "unit", "maxSpaces", "rmin", "rmax", "countDefined", "minSpacing", "spacing", "niceNum", "factor", "niceMin", "niceMax", "numSpaces", "ceil", "floor", "pow", "almostWhole", "almostEquals", "decimalPlaces", "_decimalPlaces", "j", "relativeLabelSize", "tickValue", "horizontal", "minRotation", "rad", "toRadians", "ratio", "sin", "cos", "LinearScaleBase", "start", "end", "_endValue", "Number", "handleTickRangeOptions", "beginAtZero", "setMin", "v", "setMax", "minSign", "sign", "maxSign", "abs", "getTickLimit", "tickOpts", "maxTicksLimit", "stepSize", "console", "warn", "computeTickLimit", "POSITIVE_INFINITY", "opts", "numericGeneratorOptions", "_maxDigits", "_range", "_setMinAndMaxByKey", "reverse", "formatNumber", "chart", "locale", "format", "LinearScale", "width", "height", "tickFont", "_resolveTickFontOptions", "lineHeight", "Ticks", "formatters", "numeric", "log10Floor", "log10", "changeExponent", "m", "isMajor", "tickVal", "remain", "steps", "rangeExp", "rangeStep", "startExp", "range", "finiteOrDefault", "minExp", "exp", "base", "significand", "major", "lastTick", "LogarithmicScale", "prototype", "apply", "_zero", "_suggestedMin", "_userMin", "_userMax", "decimal", "logarithmic", "enabled", "getTickBackdropHeight", "display", "padding", "toPadding", "backdropPadding", "font", "size", "measureLabelSize", "ctx", "isArray", "w", "_longestText", "string", "h", "determineLimits", "angle", "pos", "fitWithPointLabels", "scale", "orig", "l", "left", "_padding", "r", "right", "t", "top", "b", "limits", "Object", "assign", "labelSizes", "valueCount", "_pointLabels", "pointLabelOpts", "pointLabels", "additionalAngle", "centerPointLabels", "PI", "i", "setContext", "getPointLabelContext", "pointPosition", "getPointPosition", "drawingArea", "plFont", "toFont", "textSize", "angleRadians", "_normalizeAngle", "getIndexAngle", "toDegrees", "hLimits", "x", "vLimits", "y", "updateLimits", "setCenterPoint", "_pointLabelItems", "buildPointLabelItems", "createPointLabelItem", "itemOpts", "outerDistance", "extra", "pointLabelPosition", "HALF_PI", "yForAngle", "textAlign", "getTextAlignForAngle", "leftForTextAlign", "visible", "isNotOverlapped", "item", "area", "apexesInArea", "_isPointInArea", "items", "align", "drawPointLabelBox", "backdropColor", "borderRadius", "toTRBLCorners", "fillStyle", "backdropLeft", "backdropTop", "backdropWidth", "backdropHeight", "values", "some", "beginPath", "addRoundedRectPath", "radius", "fill", "fillRect", "drawPointLabels", "labelCount", "optsAtIndex", "renderText", "color", "textBaseline", "pathRadiusLine", "circular", "arc", "xCenter", "yCenter", "TAU", "moveTo", "lineTo", "drawRadiusLine", "gridLineOpts", "borderOpts", "lineWidth", "save", "strokeStyle", "setLineDash", "dash", "lineDashOffset", "dashOffset", "closePath", "stroke", "restore", "createPointLabelContext", "parent", "createContext", "type", "RadialLinearScale", "setDimensions", "maxWidth", "maxHeight", "generateTickLabels", "map", "callCallback", "filter", "getDataVisibility", "fit", "leftMovement", "rightMovement", "topMovement", "bottomMovement", "angleMultiplier", "startAngle", "getDistanceFromCenterForValue", "scalingFactor", "getValueForDistanceFromCenter", "distance", "scaledDistance", "pointLabel", "getContext", "distanceFromCenter", "getPointPositionForValue", "getBasePosition", "getBaseValue", "getPointLabelPosition", "drawBackground", "backgroundColor", "grid", "drawGrid", "angleLines", "border", "position", "forEach", "tick", "context", "optsAtIndexBorder", "borderDash", "borderDashOffset", "drawBorder", "drawLabels", "translate", "rotate", "showLabelBackdrop", "measureText", "strokeColor", "textStrokeColor", "strokeWidth", "textStrokeWidth", "drawTitle", "animate", "defaultRoutes", "descriptors", "_fallback", "INTERVALS", "millisecond", "common", "second", "minute", "hour", "day", "week", "month", "quarter", "year", "UNITS", "keys", "sorter", "a", "input", "adapter", "_adapter", "parser", "isoWeekday", "_parseOpts", "isNumber", "startOf", "determineUnitForAutoTicks", "minUnit", "capacity", "ilen", "interval", "MAX_SAFE_INTEGER", "determineUnitForFormatting", "numTicks", "diff", "determineMajorUnit", "addTick", "time", "timestamps", "lo", "hi", "_lookup", "timestamp", "setMajorTicks", "majorUnit", "add", "ticksFromTimestamps", "TimeScale", "props", "_cache", "data", "all", "_unit", "_majorUnit", "_offsets", "_normalized", "scaleOpts", "adapters", "_date", "date", "mergeIf", "displayFormats", "formats", "normalized", "beforeLayout", "_applyBounds", "_getLabelBounds", "source", "Date", "now", "endOf", "arr", "getLabelTimestamps", "NEGATIVE_INFINITY", "timeOpts", "_generate", "_filterBetween", "autoSkip", "_getLabelCapacity", "initOffsets", "afterAutoSkip", "offsetAfterAutoskip", "getDecimalForValue", "limit", "minor", "weekday", "hasWeekday", "Error", "getDataTimestamps", "sort", "tooltipFormat", "datetime", "fmt", "_tickFormatFunction", "formatter", "minorFormat", "majorFormat", "offsets", "_getLabelSize", "ticksOpts", "tickLabelWidth", "maxRotation", "cosRotation", "sinRotation", "tickFontSize", "exampleTime", "exampleLabel", "metas", "getMatchingVisibleMetas", "controller", "getAllParsedValues", "concat", "normalize", "_arrayUnique", "interpolate", "table", "val", "prevSource", "nextSource", "prevTarget", "nextTarget", "_lookupByKey", "span", "TimeSeriesScale", "_table", "_minPos", "_tableRange", "_getTimestampsForTable", "buildLookupTable", "prev", "curr", "next", "includes", "defaultDatasetIdKey", "reforwardRef", "ref", "value", "current", "setOptions", "chart", "nextOptions", "options", "Object", "assign", "setLabels", "currentData", "nextLabels", "labels", "setDatasets", "nextDatasets", "datasetIdKey", "addedDatasets", "datasets", "map", "nextDataset", "currentDataset", "find", "dataset", "data", "includes", "push", "cloneData", "nextData", "ChartComponent", "props", "ref", "height", "width", "redraw", "datasetIdKey", "type", "data", "options", "plugins", "fallbackContent", "updateMode", "canvasProps", "canvasRef", "useRef", "chartRef", "renderChart", "current", "ChartJS", "cloneData", "reforwardRef", "destroyChart", "destroy", "useEffect", "setOptions", "setLabels", "config", "labels", "datasets", "setDatasets", "setTimeout", "update", "React", "canvas", "role", "Chart", "forwardRef", "createTypedChart", "registerables", "register", "Line", "LineController", "Bar", "BarController", "import_jsx_dev_runtime", "index", "Bar", "_c", "import_jsx_dev_runtime", "chartColors", "index", "_c", "import_react", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_c"]
}
