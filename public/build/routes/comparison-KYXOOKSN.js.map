{
  "version": 3,
  "sources": ["../../../app/components/ComparisonDashboard.tsx", "../../../app/routes/comparison.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/ComparisonDashboard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/ComparisonDashboard.tsx\");\n  import.meta.hot.lastModified = \"1741008822428.8252\";\n}\n// REMIX HMR END\n\nimport { useState, useEffect } from 'react';\nimport { useFetcher } from '@remix-run/react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell } from 'recharts';\nexport default function ComparisonDashboard() {\n  _s();\n  const [mainApp, setMainApp] = useState({\n    url: '',\n    name: ''\n  });\n  const [competitors, setCompetitors] = useState([{\n    url: '',\n    name: ''\n  }, {\n    url: '',\n    name: ''\n  }, {\n    url: '',\n    name: ''\n  }]);\n  const [isComparing, setIsComparing] = useState(false);\n  const [comparisonData, setComparisonData] = useState(null);\n  const [exportFormat, setExportFormat] = useState('json');\n  const [showExportDropdown, setShowExportDropdown] = useState(false);\n  const fetcher = useFetcher();\n\n  // Update comparison data when fetcher data changes\n  useEffect(() => {\n    if (fetcher.state === 'idle' && fetcher.data) {\n      setComparisonData(fetcher.data);\n      setIsComparing(false);\n    }\n  }, [fetcher.state, fetcher.data]);\n  const validatePlayStoreUrl = url => {\n    try {\n      const urlObj = new URL(url);\n      return urlObj.hostname.includes('play.google.com');\n    } catch {\n      return false;\n    }\n  };\n  const handleCompare = async () => {\n    if (!validatePlayStoreUrl(mainApp.url)) {\n      setMainApp(prev => ({\n        ...prev,\n        error: 'Please enter a valid Play Store URL'\n      }));\n      return;\n    }\n    const validCompetitors = competitors.filter(comp => comp.url && validatePlayStoreUrl(comp.url));\n    if (validCompetitors.length === 0) {\n      setCompetitors(prev => prev.map(comp => comp.url ? {\n        ...comp,\n        error: 'Please enter a valid Play Store URL'\n      } : comp));\n      return;\n    }\n    setIsComparing(true);\n    try {\n      // Fetch data for main app and competitors\n      const formData = new FormData();\n      formData.append('mainAppUrl', mainApp.url);\n      formData.append('competitorUrls', JSON.stringify(validCompetitors.map(c => c.url)));\n      fetcher.submit(formData, {\n        method: 'POST',\n        action: '/api/compare'\n      });\n    } catch (error) {\n      console.error('Comparison error:', error);\n    }\n  };\n  const getAppNameFromUrl = url => {\n    try {\n      const appId = url.split('id=')[1]?.split('&')[0];\n      return appId || 'Unknown App';\n    } catch {\n      return 'Unknown App';\n    }\n  };\n  const handleUrlChange = (url, index) => {\n    if (index === -1) {\n      // Main app\n      setMainApp({\n        url,\n        name: getAppNameFromUrl(url),\n        error: undefined\n      });\n    } else {\n      // Competitor\n      setCompetitors(prev => prev.map((comp, i) => i === index ? {\n        url,\n        name: getAppNameFromUrl(url),\n        error: undefined\n      } : comp));\n    }\n  };\n  const handleExport = () => {\n    if (!comparisonData) return;\n    const data = {\n      metrics: comparisonData.metrics,\n      sharedKeywords: comparisonData.sharedKeywords,\n      featureRequests: comparisonData.featureRequests,\n      bugReports: comparisonData.bugReports,\n      featureGaps: comparisonData.featureGaps\n    };\n    if (exportFormat === 'json') {\n      const blob = new Blob([JSON.stringify(data, null, 2)], {\n        type: 'application/json'\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'comparison-data.json';\n      a.click();\n      URL.revokeObjectURL(url);\n    } else {\n      // Convert to CSV\n      const csvRows = [['Metric', mainApp.name, ...competitors.filter(c => c.url).map(c => c.name)], ...Object.entries(data.metrics).map(([metric, values]) => [metric, values.mainApp, ...Object.values(values.competitors)])];\n      const csvContent = csvRows.map(row => row.join(',')).join('\\n');\n      const blob = new Blob([csvContent], {\n        type: 'text/csv'\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'comparison-data.csv';\n      a.click();\n      URL.revokeObjectURL(url);\n    }\n  };\n  return <div className=\"space-y-6\">\n      {/* Input Form */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Your App\n            </label>\n            <div className=\"flex space-x-4\">\n              <input type=\"url\" className={`flex-1 px-4 py-2 rounded-lg border ${mainApp.error ? 'border-red-300 dark:border-red-600' : 'border-gray-300 dark:border-gray-600'} bg-white dark:bg-gray-700 text-gray-900 dark:text-white`} placeholder=\"https://play.google.com/store/apps/details?id=...\" value={mainApp.url} onChange={e => handleUrlChange(e.target.value, -1)} />\n            </div>\n            {mainApp.error && <p className=\"mt-1 text-sm text-red-600 dark:text-red-400\">{mainApp.error}</p>}\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Competitor Apps (up to 3)\n            </label>\n            <div className=\"space-y-3\">\n              {competitors.map((competitor, index) => <div key={index} className=\"flex space-x-4\">\n                  <input type=\"url\" className={`flex-1 px-4 py-2 rounded-lg border ${competitor.error ? 'border-red-300 dark:border-red-600' : 'border-gray-300 dark:border-gray-600'} bg-white dark:bg-gray-700 text-gray-900 dark:text-white`} placeholder={`Competitor ${index + 1} Play Store URL`} value={competitor.url} onChange={e => handleUrlChange(e.target.value, index)} />\n                </div>)}\n            </div>\n          </div>\n\n          <div className=\"pt-4\">\n            <button onClick={handleCompare} disabled={isComparing || !mainApp.url} className=\"px-6 py-2.5 bg-blue-600 hover:bg-blue-700 disabled:bg-blue-400 text-white font-medium rounded-lg inline-flex items-center\">\n              {isComparing ? <>\n                  <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Comparing...\n                </> : 'Compare Apps'}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Comparison Results */}\n      {comparisonData && <div className=\"space-y-6\">\n          {/* App Headers */}\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-4 flex items-center space-x-4\">\n              <img src={mainApp.icon || `https://www.google.com/s2/favicons?domain=${mainApp.url}&sz=64`} alt={mainApp.name} className=\"w-16 h-16 rounded-lg\" />\n              <div>\n                <h3 className=\"font-medium text-gray-900 dark:text-white\">{mainApp.name}</h3>\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">Main App</p>\n              </div>\n            </div>\n            {competitors.filter(c => c.url).map((competitor, index) => <div key={competitor.url} className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-4 flex items-center space-x-4\">\n                <img src={competitor.icon || `https://www.google.com/s2/favicons?domain=${competitor.url}&sz=64`} alt={competitor.name} className=\"w-16 h-16 rounded-lg\" />\n                <div>\n                  <h3 className=\"font-medium text-gray-900 dark:text-white\">{competitor.name}</h3>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">Competitor {index + 1}</p>\n                </div>\n              </div>)}\n          </div>\n\n          {/* Metrics Comparison */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">Key Metrics Comparison</h2>\n              <div className=\"relative\">\n                <button onClick={() => setShowExportDropdown(!showExportDropdown)} className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg flex items-center space-x-2\">\n                  <span>Export</span>\n                  <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n                  </svg>\n                </button>\n                {showExportDropdown && <div className=\"absolute right-0 mt-2 w-48 bg-white dark:bg-gray-800 rounded-lg shadow-lg z-10\">\n                    <div className=\"p-2\">\n                      <button onClick={() => {\n                  setExportFormat('json');\n                  handleExport();\n                  setShowExportDropdown(false);\n                }} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\">\n                        Export as JSON\n                      </button>\n                      <button onClick={() => {\n                  setExportFormat('csv');\n                  handleExport();\n                  setShowExportDropdown(false);\n                }} className=\"w-full text-left px-4 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\">\n                        Export as CSV\n                      </button>\n                    </div>\n                  </div>}\n              </div>\n            </div>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={Object.entries(comparisonData.metrics).map(([metric, data]) => ({\n              name: metric,\n              mainApp: data.mainApp,\n              ...data.competitors,\n              ...Object.entries(data.competitors).reduce((acc, [url, value]) => ({\n                ...acc,\n                [`${url}_diff`]: ((value - data.mainApp) / data.mainApp * 100).toFixed(1) + '%'\n              }), {})\n            }))} margin={{\n              top: 20,\n              right: 30,\n              left: 20,\n              bottom: 5\n            }}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip content={({\n                active,\n                payload,\n                label\n              }) => {\n                if (active && payload && payload.length) {\n                  return <div className=\"bg-white dark:bg-gray-800 p-3 rounded shadow\">\n                            <p className=\"font-medium\">{label}</p>\n                            {payload.map((entry, index) => {\n                      const dataKey = entry.dataKey;\n                      if (!dataKey || !dataKey.includes('_diff')) {\n                        const diffKey = `${dataKey}_diff`;\n                        const diff = payload.find(p => p.dataKey === diffKey);\n                        return <div key={index} className=\"text-sm\">\n                                    <span style={{\n                            color: entry.color\n                          }}>{entry.name}: {entry.value}</span>\n                                    {diff && dataKey !== 'mainApp' && label && <span className=\"ml-2 text-xs\">\n                                        ({diff.value})\n                                        {comparisonData?.metrics[label]?.significance?.[dataKey] && <span className=\"ml-1 text-yellow-500\">*</span>}\n                                      </span>}\n                                  </div>;\n                      }\n                      return null;\n                    })}\n                          </div>;\n                }\n                return null;\n              }} />\n                  <Legend />\n                  <Bar dataKey=\"mainApp\" fill=\"#3B82F6\" name={mainApp.name}>\n                    {Object.entries(comparisonData.metrics).map((entry, index) => <Cell key={`cell-${index}`} fill=\"#3B82F6\" />)}\n                  </Bar>\n                  {competitors.filter(c => c.url).map((competitor, index) => <Bar key={competitor.url} dataKey={competitor.url} fill={['#10B981', '#8B5CF6', '#F97316'][index]} name={competitor.name} />)}\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n          {/* Shared Keyword Analysis */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Keyword Analysis</h2>\n            \n            {/* Common Keywords */}\n            <div className=\"mb-6\">\n              <h3 className=\"text-md font-medium text-gray-700 dark:text-gray-300 mb-3\">Common Keywords</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {comparisonData.sharedKeywords.map((keyword, index) => <div key={index} className=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\n                    <div className=\"flex justify-between items-center mb-2\">\n                      <span className=\"font-medium\">{keyword.word}</span>\n                      <span className={`px-2 py-1 rounded text-xs ${keyword.sentiment.mainApp === 'positive' ? 'bg-green-100 text-green-800' : keyword.sentiment.mainApp === 'negative' ? 'bg-red-100 text-red-800' : 'bg-gray-100 text-gray-800'}`}>\n                        {keyword.sentiment.mainApp}\n                      </span>\n                    </div>\n                    <div className=\"space-y-1\">\n                      <div className=\"flex justify-between text-sm\">\n                        <span>{mainApp.name}</span>\n                        <span>{keyword.mainApp}</span>\n                      </div>\n                      {Object.entries(keyword.competitors).map(([url, count]) => <div key={url} className=\"flex justify-between text-sm\">\n                          <span>{competitors.find(c => c.url === url)?.name}</span>\n                          <span>{count}</span>\n                        </div>)}\n                    </div>\n                  </div>)}\n              </div>\n            </div>\n\n            {/* Unique Keywords */}\n            <div>\n              <h3 className=\"text-md font-medium text-gray-700 dark:text-gray-300 mb-3\">Unique Keywords</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                <div className=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\n                  <h4 className=\"font-medium mb-2\">{mainApp.name}</h4>\n                  <div className=\"space-y-1\">\n                    {comparisonData.uniqueKeywords.mainApp.map((keyword, index) => <div key={index} className=\"flex justify-between text-sm\">\n                        <span>{keyword.word}</span>\n                        <span>{keyword.count}</span>\n                      </div>)}\n                  </div>\n                </div>\n                {Object.entries(comparisonData.uniqueKeywords.competitors).map(([url, keywords]) => <div key={url} className=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\n                    <h4 className=\"font-medium mb-2\">{competitors.find(c => c.url === url)?.name}</h4>\n                    <div className=\"space-y-1\">\n                      {keywords.map((keyword, index) => <div key={index} className=\"flex justify-between text-sm\">\n                          <span>{keyword.word}</span>\n                          <span>{keyword.count}</span>\n                        </div>)}\n                    </div>\n                  </div>)}\n              </div>\n            </div>\n          </div>\n\n          {/* Feature Requests and Bug Reports */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Feature Requests */}\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Feature Requests</h2>\n              <div className=\"space-y-4\">\n                <div>\n                  <h3 className=\"text-md font-medium text-gray-700 dark:text-gray-300 mb-2\">{mainApp.name}</h3>\n                  <div className=\"space-y-2\">\n                    {comparisonData.featureRequests.mainApp.map((feature, index) => <div key={index} className=\"flex justify-between items-center p-2 bg-gray-50 dark:bg-gray-700 rounded\">\n                        <span>{feature.feature}</span>\n                        <span className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded text-sm\">\n                          {feature.count} requests\n                        </span>\n                      </div>)}\n                  </div>\n                </div>\n                {Object.entries(comparisonData.featureRequests.competitors).map(([url, features]) => <div key={url}>\n                    <h3 className=\"text-md font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                      {competitors.find(c => c.url === url)?.name}\n                    </h3>\n                    <div className=\"space-y-2\">\n                      {features.map((feature, index) => <div key={index} className=\"flex justify-between items-center p-2 bg-gray-50 dark:bg-gray-700 rounded\">\n                          <span>{feature.feature}</span>\n                          <span className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded text-sm\">\n                            {feature.count} requests\n                          </span>\n                        </div>)}\n                    </div>\n                  </div>)}\n              </div>\n            </div>\n\n            {/* Bug Reports */}\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n              <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Bug Reports</h2>\n              <div className=\"space-y-4\">\n                <div>\n                  <h3 className=\"text-md font-medium text-gray-700 dark:text-gray-300 mb-2\">{mainApp.name}</h3>\n                  <div className=\"space-y-2\">\n                    {comparisonData.bugReports.mainApp.map((bug, index) => <div key={index} className=\"flex justify-between items-center p-2 bg-gray-50 dark:bg-gray-700 rounded\">\n                        <span>{bug.bug}</span>\n                        <span className=\"px-2 py-1 bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 rounded text-sm\">\n                          {bug.count} reports\n                        </span>\n                      </div>)}\n                  </div>\n                </div>\n                {Object.entries(comparisonData.bugReports.competitors).map(([url, bugs]) => <div key={url}>\n                    <h3 className=\"text-md font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                      {competitors.find(c => c.url === url)?.name}\n                    </h3>\n                    <div className=\"space-y-2\">\n                      {bugs.map((bug, index) => <div key={index} className=\"flex justify-between items-center p-2 bg-gray-50 dark:bg-gray-700 rounded\">\n                          <span>{bug.bug}</span>\n                          <span className=\"px-2 py-1 bg-red-100 dark:bg-red-900 text-red-800 dark:text-red-200 rounded text-sm\">\n                            {bug.count} reports\n                          </span>\n                        </div>)}\n                    </div>\n                  </div>)}\n              </div>\n            </div>\n          </div>\n\n          {/* Feature Gaps Analysis */}\n          <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6\">\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">Feature Gaps Analysis</h2>\n            <div className=\"space-y-6\">\n              <div>\n                <h3 className=\"text-md font-medium text-gray-700 dark:text-gray-300 mb-3\">\n                  Features Missing in {mainApp.name}\n                </h3>\n                <div className=\"space-y-2\">\n                  {comparisonData.featureGaps?.mainApp.map((gap, index) => <div key={index} className=\"p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                      <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"font-medium\">{gap.feature}</span>\n                        <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                          Present in {gap.presentIn.length} competitor{gap.presentIn.length > 1 ? 's' : ''}\n                        </span>\n                      </div>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {gap.presentIn.map(appUrl => <span key={appUrl} className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded text-sm\">\n                            {competitors.find(c => c.url === appUrl)?.name}\n                          </span>)}\n                      </div>\n                    </div>)}\n                </div>\n              </div>\n\n              {Object.entries(comparisonData.featureGaps?.competitors || {}).map(([url, gaps]) => <div key={url}>\n                  <h3 className=\"text-md font-medium text-gray-700 dark:text-gray-300 mb-3\">\n                    Features Missing in {competitors.find(c => c.url === url)?.name}\n                  </h3>\n                  <div className=\"space-y-2\">\n                    {gaps.map((gap, index) => <div key={index} className=\"p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <span className=\"font-medium\">{gap.feature}</span>\n                          <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                            Present in {gap.presentIn.length} app{gap.presentIn.length > 1 ? 's' : ''}\n                          </span>\n                        </div>\n                        <div className=\"flex flex-wrap gap-2\">\n                          {gap.presentIn.map(appUrl => <span key={appUrl} className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 rounded text-sm\">\n                              {appUrl === mainApp.url ? mainApp.name : competitors.find(c => c.url === appUrl)?.name}\n                            </span>)}\n                        </div>\n                      </div>)}\n                  </div>\n                </div>)}\n            </div>\n          </div>\n        </div>}\n    </div>;\n}\n_s(ComparisonDashboard, \"RoRir7ZX+FnxnuV1EW9usG6MDIo=\", false, function () {\n  return [useFetcher];\n});\n_c = ComparisonDashboard;\nvar _c;\n$RefreshReg$(_c, \"ComparisonDashboard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/comparison.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/comparison.tsx\");\n  import.meta.hot.lastModified = \"1741007598147.0745\";\n}\n// REMIX HMR END\n\nimport { Link, useLocation } from \"@remix-run/react\";\nimport ComparisonDashboard from \"~/components/ComparisonDashboard\";\nexport const meta = () => {\n  return [{\n    title: \"App Comparison - UX Tools Play Store Scraper\"\n  }, {\n    name: \"description\",\n    content: \"Compare your app with competitors\"\n  }];\n};\nexport default function Comparison() {\n  _s();\n  const location = useLocation();\n  return <div className=\"flex min-h-screen bg-gray-100 dark:bg-gray-900\">\n      {/* Sidebar */}\n      <aside className=\"fixed inset-y-0 left-0 w-64 bg-white dark:bg-gray-800 shadow-lg z-30\">\n        <div className=\"flex flex-col h-full\">\n          <div className=\"p-4\">\n            <div className=\"flex items-center space-x-2 mb-8\">\n              <svg className=\"w-8 h-8 text-blue-600\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <path d=\"M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2z\" />\n              </svg>\n              <span className=\"text-xl font-bold text-gray-800 dark:text-white\">Comment Analyzer</span>\n            </div>\n            <nav className=\"space-y-2\">\n              <Link to=\"/\" className={`flex w-full items-center space-x-2 p-2 rounded-lg ${location.pathname === '/' ? 'bg-blue-50 dark:bg-blue-900 text-blue-700 dark:text-blue-200' : 'text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'}`}>\n                <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                  <path d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n                </svg>\n                <span>Dashboard</span>\n              </Link>\n              <Link to=\"/comparison\" className={`flex w-full items-center space-x-2 p-2 rounded-lg ${location.pathname === '/comparison' ? 'bg-blue-50 dark:bg-blue-900 text-blue-700 dark:text-blue-200' : 'text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'}`}>\n                <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                  <path d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n                <span>Comparison</span>\n              </Link>\n              <Link to=\"/history\" className={`flex w-full items-center space-x-2 p-2 rounded-lg ${location.pathname === '/history' ? 'bg-blue-50 dark:bg-blue-900 text-blue-700 dark:text-blue-200' : 'text-gray-600 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700'}`}>\n                <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                  <path d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\n                </svg>\n                <span>History</span>\n              </Link>\n            </nav>\n          </div>\n        </div>\n      </aside>\n\n      {/* Main Content */}\n      <main className=\"ml-64 flex-1 min-h-screen bg-gray-100 dark:bg-gray-900\">\n        <div className=\"container mx-auto px-6 py-8\">\n          <div className=\"flex justify-between items-center mb-8\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                App Comparison\n              </h1>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                Compare your app with competitors\n              </p>\n            </div>\n          </div>\n          <ComparisonDashboard />\n        </div>\n      </main>\n    </div>;\n}\n_s(Comparison, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Comparison;\nvar _c;\n$RefreshReg$(_c, \"Comparison\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_s", "_c"]
}
